import {
  getUserToken
} from "./chunk-CSB72OYX.js";

// src/serverRuntime.ts
import { AsyncLocalStorage } from "async_hooks";
import * as cookie from "cookie";
import { isWebContainer } from "@webcontainer/env";
var contextStore = new AsyncLocalStorage();
function getServerContext() {
  return contextStore.getStore();
}
async function createServerContext(req, res) {
  const cookies = cookie.parse(req.headers.cookie || "");
  const token = await getUserToken(req);
  const session = token && {
    user: {
      name: token.name,
      email: token.email,
      avatar: token.picture,
      roles: token.roles
    }
  };
  return {
    cookies,
    setCookie(name, value) {
      res.setHeader("Set-Cookie", cookie.serialize(name, value, { path: "/" }));
    },
    session
  };
}
function withContext(ctx, doWork) {
  const shouldBypassContext = isWebContainer();
  if (shouldBypassContext) {
    console.warn(
      "Bypassing server context in web containers, see https://github.com/stackblitz/core/issues/2711"
    );
    return doWork();
  }
  return contextStore.run(ctx, doWork);
}

export {
  getServerContext,
  createServerContext,
  withContext
};
//# sourceMappingURL=chunk-WOLWJO62.js.map