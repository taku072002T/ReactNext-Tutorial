// src/AppHost.tsx
import * as React from "react";
import { useNonNullableContext } from "@toolpad/utils/react";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
var queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      retry: false,
      networkMode: "always"
    },
    mutations: {
      networkMode: "always"
    }
  }
});
var AppHostContext = React.createContext(null);
function AppHostProvider({
  isPreview = false,
  isCanvas = false,
  plan = "free",
  children
}) {
  const appHost = React.useMemo(() => ({ isPreview, isCanvas, plan }), [isPreview, isCanvas, plan]);
  return /* @__PURE__ */ React.createElement(QueryClientProvider, { client: queryClient }, /* @__PURE__ */ React.createElement(AppHostContext.Provider, { value: appHost }, children));
}
function useAppHost() {
  return useNonNullableContext(AppHostContext);
}

export {
  queryClient,
  AppHostContext,
  AppHostProvider,
  useAppHost
};
//# sourceMappingURL=chunk-HEG4ZWPP.js.map