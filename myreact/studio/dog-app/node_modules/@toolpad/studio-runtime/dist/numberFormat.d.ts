import * as React from 'react';
import type { JSONSchema7 } from 'json-schema';
import { SxProps } from '@mui/material';
export declare const CURRENCY_CODES_LIST_HELP_URL = "https://en.wikipedia.org/wiki/ISO_4217#List_of_ISO_4217_currency_codes";
export type NumberFormat = {
    kind: 'preset';
    preset: string;
} | {
    kind: 'currency';
    currency?: string;
} | {
    kind: 'custom';
    custom: Intl.NumberFormatOptions;
};
export declare const NUMBER_FORMAT_SCHEMA: JSONSchema7;
export interface NumberFormatPreset {
    label?: string;
    options?: Intl.NumberFormatOptions;
}
export declare const NUMBER_FORMAT_PRESETS: Map<string, NumberFormatPreset>;
interface NumberFormatterParams {
    value: unknown;
}
export interface NumberFormatter {
    (params: NumberFormatterParams): string;
}
export type PrettyNumberFormat = React.ComponentType<NumberFormatterParams>;
export declare function createFormat(numberFormat?: NumberFormat): Intl.NumberFormat;
export interface FormattedNumberProps {
    format?: Intl.NumberFormat;
    children: number | string;
}
export declare function FormattedNumber({ children, format }: FormattedNumberProps): React.JSX.Element;
export interface NumberFormatEditorProps {
    value?: NumberFormat;
    onChange: (newValue?: NumberFormat) => void;
    disabled?: boolean;
    sx?: SxProps;
    label?: string;
}
export declare function NumberFormatEditor({ label, disabled, value, onChange, sx, }: NumberFormatEditorProps): React.JSX.Element;
export {};
