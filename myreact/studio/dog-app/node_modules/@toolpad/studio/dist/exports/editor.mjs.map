{"version":3,"sources":["../../src/toolpad/Toolpad.tsx","../../src/toolpad/AppEditor/index.tsx","../../src/toolpad/AppEditor/PageEditor/index.tsx","../../src/components/resizablePanels.tsx","../../src/toolpad/AppEditor/PageEditor/RenderPanel/RenderPanel.tsx","../../src/toolpad/AppEditor/PageEditor/EditorCanvasHost.tsx","../../src/project.tsx","../../src/utils/geometry.ts","../../src/toolpad/AppState.tsx","../../src/projectApi.tsx","../../src/utils/useShortcut.ts","../../src/utils/fields.ts","../../src/utils/domView.ts","../../src/runtime/constants.ts","../../src/utils/dom.ts","../../src/toolpad/AppEditor/PageEditor/PageEditorProvider.tsx","../../src/toolpad/AppEditor/PageEditor/RenderPanel/RenderOverlay.tsx","../../src/toolpad/AppEditor/PageEditor/RenderPanel/NodeHud.tsx","../../src/toolpad/AppEditor/PageEditor/RenderPanel/OverlayGrid.tsx","../../src/toolpad/AppEditor/PageEditor/RenderPanel/NodeDropArea.tsx","../../src/PinholeOverlay.tsx","../../src/toolpad/AppEditor/pageLayout.ts","../../src/toolpad/AppEditor/PageEditor/RenderPanel/index.tsx","../../src/toolpad/AppEditor/PageEditor/ComponentPanel.tsx","../../src/toolpad/AppEditor/PageEditor/PageOptionsPanel.tsx","../../src/toolpad/AppEditor/PageEditor/UrlQueryEditor.tsx","../../src/components/MapEntriesEditor.tsx","../../src/toolpad/hooks/useUnsavedChangesConfirm.ts","../../src/toolpad/AppEditor/NodeNameEditor.tsx","../../src/toolpad/AppEditor/PagesExplorer/validation.ts","../../src/toolpad/AppEditor/PageTitleEditor.tsx","../../src/toolpad/AppEditor/PageDisplayNameEditor.tsx","../../src/toolpad/AppEditor/UpgradeNotification.tsx","../../src/toolpad/AppEditor/PageEditor/ComponentEditor.tsx","../../src/toolpad/AppEditor/PageEditor/NodeAttributeEditor.tsx","../../src/toolpad/AppEditor/PageEditor/BindableEditor.tsx","../../src/toolpad/propertyControls/index.tsx","../../src/toolpad/propertyControls/string.tsx","../../src/components/PropertyControl.tsx","../../src/components/MarkdownTooltip.tsx","../../src/toolpad/propertyControls/boolean.tsx","../../src/toolpad/propertyControls/number.tsx","../../src/toolpad/propertyControls/select.tsx","../../src/toolpad/propertyControls/json.tsx","../../src/utils/lazyComponent.tsx","../../src/components/NoSsr.tsx","../../src/toolpad/propertyControls/event.tsx","../../src/toolpad/AppEditor/BindingEditor.tsx","../../src/toolpad/AppEditor/PageEditor/JsExpressionEditor.tsx","../../src/toolpad/AppEditor/ElementContext.tsx","../../src/components/JsonView.tsx","../../src/components/ObjectInspector.tsx","../../src/toolpad/AppEditor/useEvaluateLiveBinding.ts","../../src/toolpad/AppEditor/GlobalScopeExplorer.tsx","../../src/components/TabPanel.tsx","../../src/toolpad/AppEditor/toolpadComponents.tsx","../../src/toolpad/AppEditor/PageEditor/ThemeEditor.tsx","../../src/components/MuiThemeEditor.tsx","../../src/components/ColorTool.tsx","../../src/components/FlexFill.tsx","../../src/toolpad/AppEditor/PageEditor/ComponentCatalog/ComponentCatalog.tsx","../../src/toolpad/AppEditor/PageEditor/ComponentCatalog/ComponentCatalogItem.tsx","../../src/toolpad/AppEditor/PagesExplorer/CreateCodeComponentNodeDialog.tsx","../../src/components/DialogForm.tsx","../../src/toolpad/OpenCodeEditor.tsx","../../src/utils/useLocalStorageState.ts","../../src/components/HelpTooltipIcon.tsx","../../src/toolpad/AppEditor/PageEditor/ComponentCatalog/index.tsx","../../src/toolpad/AppEditor/NotFoundEditor.tsx","../../src/toolpad/hooks/useUndoRedo.ts","../../src/toolpad/AppEditor/PageEditor/QueryEditor/index.tsx","../../src/toolpad/AppEditor/QueryIcon.tsx","../../src/toolpad/AppEditor/PageEditor/QueryEditor/QueryEditorPanel.tsx","../../src/toolpadDataSources/rest/client.tsx","../../src/toolpadDataSources/rest/AuthenticationEditor.tsx","../../src/utils/forms.ts","../../src/toolpad/AppEditor/PageEditor/ParametersEditor.tsx","../../src/toolpadDataSources/rest/BodyEditor.tsx","../../src/toolpadDataSources/useQueryPreview.ts","../../src/toolpadDataSources/TranformInput.tsx","../../src/components/Devtools.tsx","../../src/components/Console.tsx","../../src/components/CenteredSpinner.tsx","../../src/toolpadDataSources/useFetchPrivate.ts","../../src/toolpadDataSources/context.tsx","../../src/toolpadDataSources/QueryPreview.tsx","../../src/toolpad/AppEditor/PageEditor/ErrorAlert.tsx","../../src/components/Pre.tsx","../../src/toolpadDataSources/local/client.tsx","../../src/toolpadDataSources/local/FunctionSelector.tsx","../../src/toolpadDataSources/client.tsx","../../src/utils/platform.tsx","../../src/toolpad/AppEditor/AppEditorShell.tsx","../../src/toolpad/AppEditor/PagePanel.tsx","../../src/toolpad/AppEditor/PagesExplorer/index.tsx","../../src/toolpad/AppEditor/NodeMenu.tsx","../../src/components/SystemDialogs.tsx","../../src/utils/useMenu.ts","../../src/components/EditableTreeItem.tsx","../../src/toolpad/AppEditor/ExplorerHeader.tsx","../../src/toolpad/AppEditor/HierarchyExplorer/index.tsx","../../src/toolpad/AppOptions/index.tsx","../../src/toolpad/AppOptions/AppExportDialog.tsx","../../src/toolpad/AppEditor/PageEditor/QueriesExplorer/index.tsx","../../src/toolpad/propertyControls/Markdown.tsx","../../src/toolpad/propertyControls/GridColumns.tsx","../../src/components/ToggleButtonSelect.tsx","../../src/toolpad/propertyControls/ToggleButtons.tsx","../../src/toolpad/propertyControls/SelectOptions.tsx","../../src/toolpad/propertyControls/ChartData.tsx","../../src/components/ColorPicker.tsx","../../src/toolpad/propertyControls/RowIdFieldSelect.tsx","../../src/toolpad/propertyControls/HorizontalAlign.tsx","../../src/toolpad/propertyControls/VerticalAlign.tsx","../../src/toolpad/propertyControls/NumberFormat.tsx","../../src/toolpad/propertyControls/ColorScale.tsx","../../src/toolpad/propertyControls/DataProviderSelector.tsx","../../src/toolpad/AppEditor/NoPageFound.tsx","../../src/toolpad/AppEditor/PagesExplorer/CreatePageNodeDialog.tsx","../../src/ThemeContext.tsx","../../src/toolpad/ToolpadShell/index.tsx","../../src/toolpad/ToolpadShell/Header/index.tsx","../../src/toolpad/ToolpadShell/Header/UserFeedback/index.tsx","../../src/toolpad/ToolpadShell/Header/ThemeModeMenu.tsx","../../src/toolpad/ToolpadShell/ToolpadNavigation.tsx","../../src/toolpad/FunctionsEditor/index.tsx","../../src/toolpad/AppEditor/AppAuthorizationEditor.tsx","../../src/components/icons/AzureIcon.tsx","../../src/exports/editor.tsx"],"sourcesContent":["import { CircularProgress, Box, styled, CssBaseline, Button, Stack, Tooltip } from '@mui/material';\nimport * as React from 'react';\nimport { ErrorBoundary, FallbackProps } from 'react-error-boundary';\nimport { BrowserRouter, Routes, Route, useLocation } from 'react-router-dom';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport CloudDoneIcon from '@mui/icons-material/CloudDone';\nimport SyncIcon from '@mui/icons-material/Sync';\nimport SyncProblemIcon from '@mui/icons-material/SyncProblem';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport useBoolean from '@toolpad/utils/hooks/useBoolean';\nimport AppEditor from './AppEditor';\nimport ErrorAlert from './AppEditor/PageEditor/ErrorAlert';\nimport { ThemeProvider } from '../ThemeContext';\nimport ToolpadShell from './ToolpadShell';\nimport { getViewFromPathname } from '../utils/domView';\nimport AppProvider, { AppState, useAppStateContext } from './AppState';\nimport FunctionsEditor from './FunctionsEditor';\nimport { FEATURE_FLAG_GLOBAL_FUNCTIONS } from '../constants';\nimport { ProjectProvider } from '../project';\nimport AppAuthorizationDialog from './AppEditor/AppAuthorizationEditor';\nimport { ToolpadAppRoutes } from '../runtime/ToolpadApp';\nimport { RuntimeState } from '../runtime';\n\nconst Centered = styled('div')({\n  height: '100%',\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n});\n\nfunction FullPageLoader() {\n  return (\n    <Centered>\n      <CircularProgress />\n    </Centered>\n  );\n}\n\ninterface FullPageErrorProps {\n  error: Error;\n}\n\nfunction FullPageError({ error }: FullPageErrorProps) {\n  return (\n    <Centered sx={{ p: 4 }}>\n      <ErrorAlert sx={{ width: '100%' }} error={error} />\n    </Centered>\n  );\n}\n\nfunction ErrorFallback({ error }: FallbackProps) {\n  return <FullPageError error={error} />;\n}\n\nfunction renderAppSaveState(appState: AppState): React.ReactNode {\n  if (appState.saveDomError) {\n    return (\n      <Tooltip title=\"Error while saving\">\n        <SyncProblemIcon color=\"primary\" />\n      </Tooltip>\n    );\n  }\n\n  const isSaving = appState.unsavedDomChanges > 0;\n\n  if (isSaving) {\n    return (\n      <Tooltip title=\"Saving changes…\">\n        <SyncIcon color=\"primary\" />\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Tooltip title=\"All changes saved!\">\n      <CloudDoneIcon color=\"primary\" />\n    </Tooltip>\n  );\n}\n\nexport interface EditorShellProps {\n  children: React.ReactNode;\n}\n\nfunction EditorShell({ children }: EditorShellProps) {\n  const appState = useAppStateContext();\n\n  const location = useLocation();\n\n  const previewPath: string | null = React.useMemo(() => {\n    const currentView = getViewFromPathname(location.pathname);\n    if (!currentView) {\n      return null;\n    }\n    const currentPageName = currentView?.kind === 'page' ? currentView.name : null;\n    return currentPageName ? `${appState.appUrl}/pages/${currentPageName}` : appState.appUrl;\n  }, [appState.appUrl, location.pathname]);\n\n  const {\n    value: authorizationDialogOpen,\n    setTrue: handleAuthorizationDialogOpen,\n    setFalse: handleAuthorizationDialogClose,\n  } = useBoolean(false);\n\n  return (\n    <ToolpadShell\n      navigation={\n        <Stack sx={{ ml: 3 }}>\n          <Button onClick={handleAuthorizationDialogOpen}>Authorization</Button>\n        </Stack>\n      }\n      actions={\n        previewPath ? (\n          <Stack direction=\"row\" gap={1} alignItems=\"center\">\n            <Button\n              variant=\"outlined\"\n              endIcon={<OpenInNewIcon />}\n              color=\"primary\"\n              component=\"a\"\n              href={previewPath}\n              target=\"_blank\"\n            >\n              Preview\n            </Button>\n          </Stack>\n        ) : null\n      }\n      status={renderAppSaveState(appState)}\n    >\n      {children}\n      <AppAuthorizationDialog\n        open={authorizationDialogOpen}\n        onClose={handleAuthorizationDialogClose}\n      />\n    </ToolpadShell>\n  );\n}\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      networkMode: 'always',\n    },\n    mutations: {\n      networkMode: 'always',\n    },\n  },\n});\n\nexport interface ToolpadEditorRoutesProps {\n  appUrl: string;\n}\n\nexport function ToolpadEditorRoutes({ appUrl }: ToolpadEditorRoutesProps) {\n  return (\n    <ThemeProvider>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      {/* Container that allows children to size to it with height: 100% */}\n      <Box sx={{ height: '1px', minHeight: '100vh' }}>\n        <ErrorBoundary fallbackRender={ErrorFallback}>\n          <React.Suspense fallback={<FullPageLoader />}>\n            <QueryClientProvider client={queryClient}>\n              <ProjectProvider url={appUrl} fallback={<FullPageLoader />}>\n                <AppProvider appUrl={appUrl}>\n                  <EditorShell>\n                    <Routes>\n                      {FEATURE_FLAG_GLOBAL_FUNCTIONS ? (\n                        <Route path=\"/app/functions\" element={<FunctionsEditor />} />\n                      ) : null}\n                      <Route path=\"*\" element={<AppEditor />} />\n                    </Routes>\n                  </EditorShell>\n                </AppProvider>\n              </ProjectProvider>\n            </QueryClientProvider>\n          </React.Suspense>\n        </ErrorBoundary>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport interface ToolpadEditorProps {\n  basename: string;\n  state: RuntimeState;\n}\n\nexport function ToolpadEditor({ basename, state }: ToolpadEditorProps) {\n  return (\n    <BrowserRouter basename={basename}>\n      <Routes>\n        <Route path=\"/editor/*\" element={<ToolpadEditorRoutes appUrl={basename} />} />\n        <Route path=\"/*\" element={<ToolpadAppRoutes basename={basename} state={state} />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport PageEditor from './PageEditor';\nimport { useAppState } from '../AppState';\nimport AppEditorShell from './AppEditorShell';\nimport NoPageFound from './NoPageFound';\nimport { getPathnameFromView } from '../../utils/domView';\n\nconst classes = {\n  content: 'Toolpad_Content',\n  hierarchyPanel: 'Toolpad_HierarchyPanel',\n  editorPanel: 'Toolpad_EditorPanel',\n};\n\nconst EditorRoot = styled('div')(({ theme }) => ({\n  height: 1,\n  minHeight: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'hidden',\n  [`& .${classes.content}`]: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n  [`& .${classes.hierarchyPanel}`]: {\n    width: 250,\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n  [`& .${classes.editorPanel}`]: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n}));\n\nfunction FileEditor() {\n  const { currentView } = useAppState();\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  React.useEffect(() => {\n    const newPathname = getPathnameFromView(currentView);\n    if (newPathname !== location.pathname) {\n      navigate({ pathname: newPathname }, { replace: true });\n    }\n  }, [currentView, location.pathname, navigate]);\n\n  const currentViewContent = React.useMemo(() => {\n    switch (currentView.kind) {\n      case 'page': {\n        if (currentView.name) {\n          return <PageEditor name={currentView.name} />;\n        }\n        return <NoPageFound />;\n      }\n      default:\n        return <NoPageFound />;\n    }\n  }, [currentView.kind, currentView.name]);\n\n  return <AppEditorShell>{currentViewContent}</AppEditorShell>;\n}\n\nexport default function Editor() {\n  return (\n    <EditorRoot>\n      <FileEditor />\n    </EditorRoot>\n  );\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material';\nimport usePageTitle from '@toolpad/utils/hooks/usePageTitle';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { Panel, PanelGroup, PanelResizeHandle } from '../../../components/resizablePanels';\nimport RenderPanel from './RenderPanel';\nimport { PageEditorProvider } from './PageEditorProvider';\nimport ComponentPanel from './ComponentPanel';\nimport { useAppState } from '../../AppState';\nimport ComponentCatalog from './ComponentCatalog';\nimport NotFoundEditor from '../NotFoundEditor';\nimport useUndoRedo from '../../hooks/useUndoRedo';\nimport QueryEditor from './QueryEditor';\n\nconst classes = {\n  renderPanel: 'Toolpad_RenderPanel',\n};\n\nconst PageEditorRoot = styled('div')({\n  width: '100%',\n  height: '100%',\n  overflow: 'hidden',\n  display: 'flex',\n  flexDirection: 'row',\n  [`& .${classes.renderPanel}`]: {\n    flex: 1,\n  },\n});\n\ninterface PageEditorContentProps {\n  node: appDom.PageNode;\n}\n\nfunction PageEditorContent({ node }: PageEditorContentProps) {\n  usePageTitle(`${appDom.getPageTitle(node)} | Toolpad Studio editor`);\n  const { currentView } = useAppState();\n  const showQuery =\n    currentView.kind === 'page' &&\n    currentView.view?.kind === 'query' &&\n    currentView.queryPanel?.queryTabs;\n\n  return (\n    <PageEditorProvider key={node.id} nodeId={node.id}>\n      <PanelGroup autoSaveId=\"toolpad/editor-panel-split\" direction=\"vertical\">\n        <Panel order={1} id=\"editor\">\n          <PanelGroup autoSaveId=\"editor/component-panel-split\" direction=\"horizontal\">\n            <Panel id=\"page-editor\" defaultSize={75} minSize={50} maxSize={80}>\n              <PageEditorRoot>\n                <ComponentCatalog />\n                <RenderPanel className={classes.renderPanel} />\n              </PageEditorRoot>\n            </Panel>\n            <PanelResizeHandle />\n            <Panel id=\"component-panel\" defaultSize={25} maxSize={50} minSize={20}>\n              <ComponentPanel />\n            </Panel>\n          </PanelGroup>\n        </Panel>\n        <PanelResizeHandle />\n\n        {showQuery ? (\n          <Panel minSize={10} maxSize={90} defaultSize={35} order={2} id=\"query-panel\">\n            <QueryEditor />\n          </Panel>\n        ) : null}\n      </PanelGroup>\n    </PageEditorProvider>\n  );\n}\n\ninterface PageEditorProps {\n  name: string;\n}\n\nexport default function PageEditor({ name }: PageEditorProps) {\n  const { dom } = useAppState();\n  const pageNode = React.useMemo(() => appDom.getPageByName(dom, name), [dom, name]);\n\n  useUndoRedo();\n\n  return pageNode ? (\n    <PageEditorContent node={pageNode} />\n  ) : (\n    <NotFoundEditor message={`Non-existing Page \"${name}\"`} />\n  );\n}\n","import { styled } from '@mui/material';\nimport {\n  PanelResizeHandle as PanelResizeHandleOrig,\n  PanelResizeHandleProps,\n} from 'react-resizable-panels';\n\nexport * from 'react-resizable-panels';\n\nconst RESIZE_HANDLE_OFFSET = 3;\n\nexport const PanelResizeHandle: React.FC<PanelResizeHandleProps> = styled(PanelResizeHandleOrig)(\n  ({ theme }) => ({\n    backgroundClip: 'padding-box',\n    zIndex: 1,\n    display: 'flex',\n    backgroundColor: theme.palette.divider,\n    borderStyle: 'solid',\n    borderColor: 'rgba(255, 255, 255, 0)',\n    '&:hover': {\n      borderColor: theme.palette.divider,\n    },\n    transition: 'all 250ms ease',\n    '&[data-panel-group-direction=\"horizontal\"]': {\n      width: 2 * RESIZE_HANDLE_OFFSET + 1,\n      marginLeft: -RESIZE_HANDLE_OFFSET,\n      marginRight: -RESIZE_HANDLE_OFFSET,\n      borderLeftWidth: RESIZE_HANDLE_OFFSET,\n      borderRightWidth: RESIZE_HANDLE_OFFSET,\n    },\n    '&[data-panel-group-direction=\"vertical\"]': {\n      height: 2 * RESIZE_HANDLE_OFFSET + 1,\n      marginTop: -RESIZE_HANDLE_OFFSET,\n      marginBottom: -RESIZE_HANDLE_OFFSET,\n      borderTopWidth: RESIZE_HANDLE_OFFSET,\n      borderBottomWidth: RESIZE_HANDLE_OFFSET,\n    },\n  }),\n);\n","import * as React from 'react';\nimport { styled } from '@mui/material';\nimport { NodeHashes, NodeId } from '@toolpad/studio-runtime';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport EditorCanvasHost, { ToolpadBridge } from '../EditorCanvasHost';\nimport { getNodeHashes, useAppState, useAppStateApi, useDomApi } from '../../../AppState';\nimport { usePageEditorApi, usePageEditorState } from '../PageEditorProvider';\nimport RenderOverlay from './RenderOverlay';\nimport { getBindingType } from '../../../../runtime/bindings';\nimport createRuntimeState from '../../../../runtime/createRuntimeState';\nimport { RuntimeState } from '../../../../runtime';\n\nconst classes = {\n  view: 'Toolpad_View',\n};\n\nconst RenderPanelRoot = styled('div')({\n  position: 'relative',\n  overflow: 'hidden',\n\n  [`& .${classes.view}`]: {\n    height: '100%',\n  },\n});\n\nfunction useRuntimeState(): RuntimeState {\n  const { dom } = useAppState();\n  return React.useMemo(() => createRuntimeState({ dom }), [dom]);\n}\n\nexport interface RenderPanelProps {\n  className?: string;\n}\n\nexport default function RenderPanel({ className }: RenderPanelProps) {\n  const appState = useAppState();\n  const domApi = useDomApi();\n  const appStateApi = useAppStateApi();\n  const pageEditorApi = usePageEditorApi();\n  const { nodeId: pageNodeId } = usePageEditorState();\n  const page = appDom.getNode(appState.dom, pageNodeId, 'page');\n\n  const [bridge, setBridge] = React.useState<ToolpadBridge | null>(null);\n\n  const savedNodes: NodeHashes = React.useMemo(\n    () => getNodeHashes(appState.savedDom),\n    [appState.savedDom],\n  );\n\n  const handleInit = useEventCallback((initializedBridge: ToolpadBridge) => {\n    initializedBridge.canvasEvents.on('propUpdated', (event) => {\n      domApi.update((draft) => {\n        const node = appDom.getMaybeNode(draft, event.nodeId as NodeId, 'element');\n        if (!node) {\n          return draft;\n        }\n\n        const actual = node.props?.[event.prop];\n        if (actual && getBindingType(actual) !== 'const') {\n          console.warn(`Can't update a non-const prop \"${event.prop}\" on node \"${node.id}\"`);\n          return draft;\n        }\n\n        const newValue: unknown =\n          typeof event.value === 'function' ? event.value(actual) : event.value;\n\n        draft = appDom.setNodeNamespacedProp(draft, node, 'props', event.prop, newValue);\n\n        return draft;\n      });\n    });\n\n    initializedBridge.canvasEvents.on('editorNodeDataUpdated', (event) => {\n      pageEditorApi.nodeDataUpdate(event.nodeId, event.prop, event.value);\n    });\n\n    initializedBridge.canvasEvents.on('pageStateUpdated', (event) => {\n      pageEditorApi.pageStateUpdate(event.pageState, event.globalScopeMeta);\n    });\n\n    initializedBridge.canvasEvents.on('pageBindingsUpdated', (event) => {\n      pageEditorApi.pageBindingsUpdate(event.bindings);\n    });\n\n    initializedBridge.canvasEvents.on('vmUpdated', (event) => {\n      pageEditorApi.vmUpdate(event.vm);\n    });\n\n    initializedBridge.canvasEvents.on('screenUpdate', () => {\n      const pageViewState = initializedBridge.canvasCommands.getPageViewState();\n      pageEditorApi.pageViewStateUpdate(pageViewState);\n    });\n\n    initializedBridge.canvasEvents.on('pageNavigationRequest', (event) => {\n      appStateApi.setView({ kind: 'page', name: event.pageName });\n    });\n\n    setBridge(initializedBridge);\n  });\n\n  const runtimeState = useRuntimeState();\n\n  return (\n    <RenderPanelRoot className={className}>\n      <EditorCanvasHost\n        className={classes.view}\n        runtimeState={runtimeState}\n        base={appState.appUrl}\n        savedNodes={savedNodes}\n        pageName={page.name}\n        overlay={<RenderOverlay bridge={bridge} />}\n        onInit={handleInit}\n      />\n    </RenderPanelRoot>\n  );\n}\n","import * as React from 'react';\nimport { styled, useEventCallback } from '@mui/material';\nimport {\n  NodeHashes,\n  RuntimeEvents,\n  CanvasEventsContext,\n  AppHostProvider,\n  useAppHost,\n  queryClient,\n  NodeId,\n  FlowDirection,\n  SlotType,\n} from '@toolpad/studio-runtime';\nimport createCache from '@emotion/cache';\nimport { CacheProvider } from '@emotion/react';\nimport * as ReactDOM from 'react-dom';\nimport { Emitter } from '@toolpad/utils/events';\nimport { update } from '@toolpad/utils/immutability';\nimport { throttle } from 'lodash-es';\nimport invariant from 'invariant';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { useProject } from '../../../project';\nimport { RuntimeState } from '../../../runtime';\nimport { RenderedPage, ToolpadAppProvider } from '../../../runtime/ToolpadApp';\nimport { CanvasHooks, CanvasHooksContext } from '../../../runtime/CanvasHooksContext';\nimport {\n  rectContainsPoint,\n  getRelativeBoundingRect,\n  getRelativeOuterRect,\n} from '../../../utils/geometry';\nimport { PageViewState, NodeInfo, SlotsState } from '../../../types';\nimport { useAppStateApi } from '../../AppState';\nimport { FONTS_URL } from '../../../runtime/constants';\nimport { scrollIntoViewIfNeeded } from '../../../utils/dom';\n\n// Interface to communicate between editor and canvas\nexport interface ToolpadBridge {\n  // Events fired in the canvas, listened in the editor\n  canvasEvents: Emitter<RuntimeEvents>;\n  // Commands executed from the editor, ran in the canvas\n  canvasCommands: {\n    getViewCoordinates(clientX: number, clientY: number): { x: number; y: number } | null;\n    getPageViewState(): PageViewState;\n    scrollComponent(nodeId: string): void;\n    isReady(): boolean;\n    invalidateQueries(): void;\n  };\n}\n\nexport function updateNodeInfo(nodeInfo: NodeInfo, rootElm: Element): NodeInfo {\n  const nodeElm = rootElm.querySelector(`[data-toolpad-node-id=\"${nodeInfo.nodeId}\"]`);\n\n  if (!nodeElm) {\n    return nodeInfo;\n  }\n\n  const rect = getRelativeOuterRect(rootElm, nodeElm);\n\n  const slotElms = rootElm.querySelectorAll(`[data-toolpad-slot-parent=\"${nodeInfo.nodeId}\"]`);\n\n  const slots: SlotsState = {};\n\n  for (const slotElm of slotElms) {\n    const slotName = slotElm.getAttribute('data-toolpad-slot-name');\n    const slotType = slotElm.getAttribute('data-toolpad-slot-type');\n\n    invariant(slotName, 'Slot name not found');\n    invariant(slotType, 'Slot type not found');\n\n    if (slots[slotName]) {\n      continue;\n    }\n\n    const slotRect =\n      slotType === 'single'\n        ? getRelativeBoundingRect(rootElm, slotElm)\n        : getRelativeBoundingRect(rootElm, slotElm);\n\n    const display = window.getComputedStyle(slotElm).display;\n    let flowDirection: FlowDirection = 'row';\n    if (slotType === 'layout') {\n      flowDirection = 'column';\n    } else if (display === 'grid') {\n      const gridAutoFlow = window.getComputedStyle(slotElm).gridAutoFlow;\n      flowDirection = gridAutoFlow === 'row' ? 'column' : 'row';\n    } else if (display === 'flex') {\n      flowDirection = window.getComputedStyle(slotElm).flexDirection as FlowDirection;\n    }\n\n    slots[slotName] = {\n      type: slotType as SlotType,\n      rect: slotRect,\n      flowDirection,\n    };\n  }\n\n  return { ...nodeInfo, rect, slots };\n}\n\ninterface OverlayProps {\n  children?: React.ReactNode;\n  container?: HTMLElement;\n}\n\nfunction Overlay(props: OverlayProps) {\n  const { children, container } = props;\n\n  const cache = React.useMemo(\n    () =>\n      createCache({\n        key: `toolpad-editor-overlay`,\n        prepend: true,\n        container,\n      }),\n    [container],\n  );\n\n  // See https://github.com/emotion-js/emotion/issues/1105#issuecomment-1058225197\n  cache.compat = true;\n\n  return <CacheProvider value={cache}>{children}</CacheProvider>;\n}\n\nexport interface EditorCanvasHostProps {\n  className?: string;\n  pageName: string;\n  runtimeState: RuntimeState;\n  savedNodes: NodeHashes;\n  overlay?: React.ReactNode;\n  onInit?: (bridge: ToolpadBridge) => void;\n  base: string;\n}\n\nconst CanvasRoot = styled('div')({\n  width: '100%',\n  position: 'relative',\n});\n\nconst CanvasFrame = styled('iframe')({\n  border: 'none',\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n});\n\nexport default function EditorCanvasHost({\n  pageName,\n  className,\n  runtimeState,\n  base,\n  savedNodes,\n  overlay,\n  onInit,\n}: EditorCanvasHostProps) {\n  const project = useProject();\n\n  const [canvasEvents, setCanvasEvents] = React.useState<Emitter<RuntimeEvents> | null>(null);\n\n  const [editorOverlayRoot, setEditorOverlayRoot] = React.useState<HTMLElement | null>(null);\n\n  const [portal, setPortal] = React.useState<HTMLElement | null>(null);\n\n  const appStateApi = useAppStateApi();\n\n  const handleIframeLoad = useEventCallback<React.ReactEventHandler<HTMLIFrameElement>>((event) => {\n    invariant(event.currentTarget.contentDocument, 'iframe contentDocument is not available');\n    const root = event.currentTarget.contentDocument.getElementById('root');\n    invariant(root, 'root element not found');\n\n    const iframeWindow = event.currentTarget.contentWindow;\n    invariant(iframeWindow, 'Iframe not attached');\n\n    const handleKeyDown = (keyDownEvent: KeyboardEvent) => {\n      const isZ = !!keyDownEvent.key && keyDownEvent.key.toLowerCase() === 'z';\n\n      const undoShortcut = isZ && (keyDownEvent.metaKey || keyDownEvent.ctrlKey);\n      const redoShortcut = undoShortcut && keyDownEvent.shiftKey;\n\n      if (redoShortcut) {\n        keyDownEvent.preventDefault();\n        appStateApi.redo();\n      } else if (undoShortcut) {\n        keyDownEvent.preventDefault();\n        appStateApi.undo();\n      }\n    };\n\n    iframeWindow.addEventListener('keydown', handleKeyDown);\n    iframeWindow.addEventListener('unload', () => {\n      iframeWindow.removeEventListener('keydown', handleKeyDown);\n    });\n\n    setPortal(root);\n  });\n\n  const viewState = React.useRef<PageViewState>({ nodes: {} });\n\n  const canvasHooks: CanvasHooks = React.useMemo(\n    () => ({\n      overlayRef: setEditorOverlayRoot,\n      savedNodes,\n      registerNode: (node, props, componentConfig) => {\n        viewState.current.nodes[node.id] = {\n          nodeId: node.id,\n          props,\n          componentConfig,\n        };\n\n        return () => {\n          delete viewState.current.nodes[node.id];\n        };\n      },\n    }),\n    [savedNodes],\n  );\n\n  const appRootCleanupRef = React.useRef<() => void>();\n  const projectEventSubscriptionRef = React.useRef<() => void>();\n  const onAppRoot = React.useCallback(\n    (appRoot: HTMLDivElement) => {\n      appRootCleanupRef.current?.();\n      appRootCleanupRef.current = undefined;\n\n      if (!appRoot) {\n        return;\n      }\n\n      const bridge: ToolpadBridge = {\n        canvasEvents: new Emitter(),\n        canvasCommands: {\n          isReady: () => true,\n          getPageViewState: () => {\n            let nodes = viewState.current.nodes;\n\n            for (const [nodeId, nodeInfo] of Object.entries(nodes)) {\n              nodes = update(nodes, {\n                [nodeId]: updateNodeInfo(nodeInfo, appRoot),\n              });\n            }\n\n            return { nodes };\n          },\n          getViewCoordinates: (clientX: number, clientY: number) => {\n            const rect = appRoot.getBoundingClientRect();\n            if (rectContainsPoint(rect, clientX, clientY)) {\n              return { x: clientX - rect.x, y: clientY - rect.y };\n            }\n            return null;\n          },\n          invalidateQueries: () => {\n            queryClient.invalidateQueries();\n          },\n          scrollComponent: (nodeId: NodeId) => {\n            if (!appRoot) {\n              return;\n            }\n            const node = appRoot.querySelector(`[data-node-id='${nodeId}']`);\n\n            if (node) {\n              scrollIntoViewIfNeeded(node, { behavior: 'instant', block: 'center', inline: 'end' });\n            }\n          },\n        },\n      };\n\n      const handleScreenUpdate = throttle(\n        () => {\n          bridge?.canvasEvents.emit('screenUpdate', {});\n        },\n        50,\n        { trailing: true },\n      );\n\n      projectEventSubscriptionRef.current = project.events.subscribe('queriesInvalidated', () => {\n        queryClient.invalidateQueries();\n      });\n\n      const mutationObserver = new MutationObserver(handleScreenUpdate);\n\n      mutationObserver.observe(appRoot, {\n        attributes: true,\n        childList: true,\n        subtree: true,\n        characterData: true,\n      });\n\n      const resizeObserver = new ResizeObserver(handleScreenUpdate);\n\n      resizeObserver.observe(appRoot);\n      appRoot.querySelectorAll('*').forEach((elm) => resizeObserver.observe(elm));\n\n      appRootCleanupRef.current = () => {\n        handleScreenUpdate.cancel();\n        mutationObserver.disconnect();\n        resizeObserver.disconnect();\n      };\n\n      onInit?.(bridge);\n      setCanvasEvents(bridge.canvasEvents);\n    },\n    [onInit, project.events],\n  );\n\n  React.useEffect(\n    () => () => {\n      appRootCleanupRef.current?.();\n      appRootCleanupRef.current = undefined;\n      projectEventSubscriptionRef.current?.();\n      projectEventSubscriptionRef.current = undefined;\n    },\n    [],\n  );\n\n  const page = appDom.getPageByName(runtimeState.dom, pageName);\n\n  const appHost = useAppHost();\n\n  return (\n    <CanvasRoot className={className}>\n      <CanvasFrame\n        name=\"data-toolpad-canvas\"\n        srcDoc={`\n          <!doctype html>\n          <html lang=\"en\">\n            <head>\n              <meta charset=\"UTF-8\" />\n              <title>Toolpad</title>\n              <link rel=\"preload\" href=\"${FONTS_URL}\" as=\"style\" onload=\"this.onload=null;this.rel='stylesheet'\">\n              <noscript><link rel=\"stylesheet\" href=\"${FONTS_URL}\"></noscript>\n              <link\n                rel=\"stylesheet\"\n                href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\"\n              />\n            </head>\n            <body className=\"notranslate\">\n              <div id=\"root\"></div>\n            </body>\n          </html>\n        `}\n        onLoad={handleIframeLoad}\n      />\n      {page && portal\n        ? ReactDOM.createPortal(\n            <Overlay container={portal}>\n              <CanvasHooksContext.Provider value={canvasHooks}>\n                <CanvasEventsContext.Provider value={canvasEvents}>\n                  <AppHostProvider {...appHost} isCanvas isPreview>\n                    <ToolpadAppProvider rootRef={onAppRoot} basename={base} state={runtimeState}>\n                      <RenderedPage page={page} />\n                    </ToolpadAppProvider>\n                  </AppHostProvider>\n                </CanvasEventsContext.Provider>\n              </CanvasHooksContext.Provider>\n            </Overlay>,\n            portal,\n          )\n        : null}\n      {editorOverlayRoot\n        ? ReactDOM.createPortal(\n            <Overlay container={editorOverlayRoot}>{overlay}</Overlay>,\n            editorOverlayRoot,\n          )\n        : null}\n    </CanvasRoot>\n  );\n}\n","import { Emitter } from '@toolpad/utils/events';\nimport { QueryClient, useQueryClient, useSuspenseQuery } from '@tanstack/react-query';\nimport * as React from 'react';\nimport { useNonNullableContext } from '@toolpad/utils/react';\nimport invariant from 'invariant';\nimport { ProjectEvents } from './types';\nimport { ServerDefinition } from './server/projectRpcServer';\nimport { createRpcApi } from './rpcClient';\n\nasync function fetchAppDevManifest(url: string) {\n  const response = await fetch(`${url}/__toolpad_dev__/manifest.json`);\n  if (!response.ok) {\n    throw new Error(`Failed to fetch app dev manifest: ${response.status}`);\n  }\n  return response.text();\n}\n\nfunction createProject(url: string, serializedManifest: string, queryClient: QueryClient) {\n  const manifest = JSON.parse(serializedManifest);\n  const events = new Emitter<ProjectEvents>();\n\n  const ws = new WebSocket(manifest.wsUrl);\n\n  ws.addEventListener('error', () => console.error(`Websocket failed to connect \"${ws.url}\"`));\n\n  ws.addEventListener('open', () => {\n    // eslint-disable-next-line no-console\n    console.log('Socket connected');\n  });\n\n  ws.addEventListener('message', (event) => {\n    const message = JSON.parse(event.data);\n    switch (message.kind) {\n      case 'projectEvent': {\n        events.emit(message.event, message.payload);\n        break;\n      }\n      default:\n        throw new Error(`Unknown message kind: ${message.kind}`);\n    }\n  });\n\n  const api = createRpcApi<ServerDefinition>(queryClient, `${url}/__toolpad_dev__/rpc`);\n\n  const unsubExternalChange = events.subscribe('externalChange', () => {\n    api.invalidateQueries('loadDom', []);\n  });\n\n  const unsubFunctionsChanged = events.subscribe('functionsChanged', () => {\n    api.invalidateQueries('introspect', []);\n  });\n\n  const dispose = () => {\n    if (ws.readyState === ws.OPEN) {\n      ws.close();\n    } else {\n      ws.onopen = () => {\n        ws.close();\n      };\n    }\n    unsubExternalChange();\n    unsubFunctionsChanged();\n  };\n\n  return {\n    url,\n    rootDir: manifest.rootDir,\n    api,\n    events,\n    dispose,\n  };\n}\n\ntype Project = Awaited<ReturnType<typeof createProject>>;\n\nconst ProjectContext = React.createContext<Project | undefined>(undefined);\n\nexport interface ProjectProviderProps {\n  url: string;\n  children: React.ReactNode;\n  fallback: React.ReactNode;\n}\n\nexport function ProjectProvider({ url, children, fallback }: ProjectProviderProps) {\n  const { data: manifest } = useSuspenseQuery({\n    queryKey: ['app-dev-manifest', url],\n    queryFn: () => fetchAppDevManifest(url),\n  });\n\n  invariant(manifest, \"manifest should be defined, we're using suspense\");\n\n  const queryClient = useQueryClient();\n\n  const [project, setProject] = React.useState<Project | undefined>();\n\n  React.useEffect(() => {\n    const newProject = createProject(url, manifest, queryClient);\n    setProject(newProject);\n    return () => {\n      newProject.dispose();\n    };\n  }, [url, manifest, queryClient]);\n\n  return (\n    <ProjectContext.Provider value={project}>\n      {project ? children : fallback}\n    </ProjectContext.Provider>\n  );\n}\n\nexport function useProject() {\n  return useNonNullableContext(ProjectContext);\n}\n","import { FlowDirection } from '@toolpad/studio-runtime';\n\nexport interface Rectangle {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\n/**\n * Calculates the Euclidian distance between two points\n */\nexport function distanceToPoint(x1: number, y1: number, x2: number, y2: number): number {\n  return Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n}\n/**\n * Calculates the shortest Euclidian distance from a point to a rectangle. Returns `0` if the\n * point falss within the rectangle.\n */\nexport function distanceToRect(rect: Rectangle, x: number, y: number) {\n  const left = rect.x;\n  const top = rect.y;\n  const right = rect.x + rect.width;\n  const bottom = rect.y + rect.height;\n  if (x < left && y < top) {\n    return distanceToPoint(x, y, left, top);\n  }\n  if (x > right && y < top) {\n    return distanceToPoint(x, y, right, top);\n  }\n  if (x > right && y > bottom) {\n    return distanceToPoint(x, y, right, bottom);\n  }\n  if (x < left && y > bottom) {\n    return distanceToPoint(x, y, left, bottom);\n  }\n  if (x < left) {\n    return left - x;\n  }\n  if (x > right) {\n    return x - right;\n  }\n  if (y < top) {\n    return top - y;\n  }\n  if (y > bottom) {\n    return y - bottom;\n  }\n  return 0;\n}\n\n/**\n * Calculates the shortes Euclidian distance from a point to a line segment.\n * All credit goes to https://stackoverflow.com/a/6853926/419436\n * I was too lazy to figure out the math\n */\nexport function distanceToLine(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  x: number,\n  y: number,\n): number {\n  const A = x - x1;\n  const B = y - y1;\n  const C = x2 - x1;\n  const D = y2 - y1;\n\n  const dot = A * C + B * D;\n  const lenSq = C * C + D * D;\n  let param = -1;\n  if (lenSq > 0) {\n    // in case of 0 length line\n    param = dot / lenSq;\n  }\n\n  let xx;\n  let yy;\n\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\n  const dx = x - xx;\n  const dy = y - yy;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\n/**\n * Translates a `Rectangle` into CSS properties for absolutely positioned elements.\n */\nexport function absolutePositionCss({ x, y, width, height }: Rectangle): React.CSSProperties {\n  return { left: x, top: y, width, height };\n}\n\nexport function isHorizontalFlow(flowDirection: FlowDirection): boolean {\n  return flowDirection === 'row' || flowDirection === 'row-reverse';\n}\n\nexport function isVerticalFlow(flowDirection: FlowDirection): boolean {\n  return flowDirection === 'column' || flowDirection === 'column-reverse';\n}\n\nexport function isReverseFlow(flowDirection: FlowDirection): boolean {\n  return flowDirection === 'row-reverse' || flowDirection === 'column-reverse';\n}\n\n/**\n * Returns the bounding client rect of an element relative to its container.\n */\nexport function getRelativeBoundingRect(containerElm: Element, childElm: Element): Rectangle {\n  const containerRect = containerElm.getBoundingClientRect();\n  const childRect = childElm.getBoundingClientRect();\n\n  return {\n    x: childRect.x - containerRect.x,\n    y: childRect.y - containerRect.y,\n    width: childRect.width,\n    height: childRect.height,\n  };\n}\n\n/**\n * Returns the bounding box of an element against another element.\n * Considers the box model to return the full dimensions, including padding/border/margin.\n */\nexport function getRelativeOuterRect(containerElm: Element, childElm: Element): Rectangle {\n  const { x, y, width, height } = getRelativeBoundingRect(containerElm, childElm);\n  const styles = window.getComputedStyle(childElm);\n\n  const parseMarginStyle = (style: string): number => (style === 'auto' ? 0 : parseFloat(style));\n\n  let offsetLeft = parseMarginStyle(styles.marginLeft);\n  let offsetRight = parseMarginStyle(styles.marginRight);\n  let offsetTop = parseMarginStyle(styles.marginTop);\n  let offsetBottom = parseMarginStyle(styles.marginBottom);\n\n  if (styles.boxSizing === 'content-box') {\n    offsetLeft += parseFloat(styles.paddingLeft) + parseFloat(styles.borderLeftWidth);\n    offsetRight += parseFloat(styles.paddingRight) + parseFloat(styles.borderRightWidth);\n    offsetTop += parseFloat(styles.paddingTop) + parseFloat(styles.borderTopWidth);\n    offsetBottom += parseFloat(styles.paddingBottom) + parseFloat(styles.borderBottomWidth);\n  }\n\n  return {\n    x: x - offsetLeft,\n    y: y - offsetTop,\n    width: width + offsetLeft + offsetRight,\n    height: height + offsetTop + offsetBottom,\n  };\n}\n\n/**\n * Checks whether a point falls within a reactangle\n */\nexport function rectContainsPoint(rect: Rectangle, x: number, y: number): boolean {\n  return rect.x <= x && rect.x + rect.width >= x && rect.y <= y && rect.y + rect.height >= y;\n}\n\nexport const RECTANGLE_EDGE_TOP = 'top';\nexport const RECTANGLE_EDGE_BOTTOM = 'bottom';\nexport const RECTANGLE_EDGE_LEFT = 'left';\nexport const RECTANGLE_EDGE_RIGHT = 'right';\nexport type RectangleEdge =\n  | typeof RECTANGLE_EDGE_TOP\n  | typeof RECTANGLE_EDGE_BOTTOM\n  | typeof RECTANGLE_EDGE_LEFT\n  | typeof RECTANGLE_EDGE_RIGHT;\n\nexport function getRectanglePointActiveEdge(\n  rect: Rectangle,\n  x: number,\n  y: number,\n): RectangleEdge | null {\n  const { height: rectHeight, width: rectWidth } = rect;\n\n  // Out of bounds\n  if (x < 0 || x > rectWidth || y < 0 || y > rectHeight) {\n    return null;\n  }\n\n  const isOverFirstDiagonal = y < (rectHeight / rectWidth) * x;\n  const isOverSecondDiagonal = y < -1 * (rectHeight / rectWidth) * x + rectHeight;\n\n  if (isOverFirstDiagonal && isOverSecondDiagonal) {\n    return RECTANGLE_EDGE_TOP;\n  }\n  if (isOverFirstDiagonal) {\n    return RECTANGLE_EDGE_RIGHT;\n  }\n  if (isOverSecondDiagonal) {\n    return RECTANGLE_EDGE_LEFT;\n  }\n  return RECTANGLE_EDGE_BOTTOM;\n}\n","import * as React from 'react';\nimport { NodeHashes, NodeId } from '@toolpad/studio-runtime';\nimport { createProvidedContext } from '@toolpad/utils/react';\nimport invariant from 'invariant';\nimport { debounce, DebouncedFunc } from 'lodash-es';\nimport { useLocation } from 'react-router-dom';\nimport { mapValues } from '@toolpad/utils/collections';\nimport useDebouncedHandler from '@toolpad/utils/hooks/useDebouncedHandler';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { omit, update } from '@toolpad/utils/immutability';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { useProjectApi } from '../projectApi';\nimport useShortcut from '../utils/useShortcut';\nimport insecureHash from '../utils/insecureHash';\nimport { ClientDataSource } from '../types';\nimport { hasFieldFocus } from '../utils/fields';\nimport { DomView, getViewFromPathname, PageViewTab, QueryTab } from '../utils/domView';\n\nexport function getNodeHashes(dom: appDom.AppDom): NodeHashes {\n  return mapValues(dom.nodes, (node) => insecureHash(JSON.stringify(omit(node, 'id'))));\n}\n\nexport type DomAction = {\n  type: 'UPDATE';\n  updater?: (dom: appDom.AppDom) => appDom.AppDom;\n  view?: DomView;\n};\n\nexport type DomLoaderAction =\n  | DomAction\n  | {\n      type: 'DOM_SAVING';\n    }\n  | {\n      type: 'DOM_SAVED';\n      savedDom: appDom.AppDom;\n    }\n  | {\n      type: 'DOM_SAVING_ERROR';\n      error: string;\n    }\n  | {\n      type: 'DOM_SERVER_UPDATE';\n      dom: appDom.AppDom;\n    };\n\nexport type AppStateAction =\n  | DomLoaderAction\n  | {\n      type: 'UPDATE_HISTORY';\n    }\n  | {\n      type: 'UNDO';\n    }\n  | {\n      type: 'REDO';\n    }\n  | {\n      type: 'SET_VIEW';\n      view: DomView;\n    }\n  | {\n      type: 'OPEN_QUERY_TAB';\n      queryId: NodeId;\n    }\n  | {\n      type: 'CREATE_QUERY_TAB';\n      dataSource: ClientDataSource;\n      dataSourceId: string;\n      mode?: appDom.FetchMode;\n    }\n  | {\n      type: 'CLOSE_QUERY_TAB';\n      queryId: NodeId;\n      queryIndex?: number;\n      deleteQuery?: boolean;\n    }\n  | {\n      type: 'UPDATE_QUERY_TAB';\n      updater: (tab: QueryTab) => QueryTab;\n    }\n  | {\n      type: 'CLOSE_QUERY_PANEL';\n    }\n  | {\n      type: 'UPDATE_QUERY_DRAFT';\n      updater: (draft: appDom.QueryNode) => appDom.QueryNode;\n    }\n  | {\n      type: 'SAVE_QUERY_DRAFT';\n      draft: appDom.QueryNode;\n    }\n  | {\n      type: 'SET_PAGE_VIEW_TAB';\n      tab: PageViewTab;\n    }\n  | {\n      type: 'SELECT_NODE';\n      nodeId: NodeId;\n    }\n  | {\n      type: 'DESELECT_NODE';\n    }\n  | {\n      type: 'HOVER_NODE';\n      nodeId: NodeId;\n    }\n  | {\n      type: 'BLUR_HOVER_NODE';\n    }\n  | {\n      type: 'SET_HAS_UNSAVED_CHANGES';\n      hasUnsavedChanges: boolean;\n    };\n\nexport function domReducer(dom: appDom.AppDom, action: AppStateAction): appDom.AppDom {\n  switch (action.type) {\n    case 'UPDATE': {\n      return action.updater ? action.updater(dom) : dom;\n    }\n    default:\n      return dom;\n  }\n}\n\nexport interface AppState {\n  dom: appDom.AppDom;\n  appUrl: string;\n  savedDom: appDom.AppDom;\n  savingDom: boolean;\n  unsavedDomChanges: number;\n  saveDomError: string | null;\n  currentView: DomView;\n  undoStack: UndoRedoStackEntry[];\n  redoStack: UndoRedoStackEntry[];\n  hasUnsavedChanges: boolean;\n}\n\nexport interface UndoRedoStackEntry {\n  dom: appDom.AppDom;\n  view: DomView;\n  timestamp: number;\n}\n\nconst UNDO_HISTORY_LIMIT = 100;\n\nexport function appStateReducer(state: AppState, action: AppStateAction): AppState {\n  if (state.dom) {\n    const newDom = domReducer(state.dom, action);\n    const hasUnsavedDomChanges = newDom !== state.dom;\n\n    state = update(state, {\n      dom: newDom,\n      unsavedDomChanges: hasUnsavedDomChanges\n        ? state.unsavedDomChanges + 1\n        : state.unsavedDomChanges,\n    });\n  }\n\n  switch (action.type) {\n    case 'DOM_SAVING': {\n      return update(state, {\n        savingDom: true,\n        saveDomError: null,\n      });\n    }\n    case 'DOM_SAVED': {\n      return update(state, {\n        savedDom: action.savedDom,\n        savingDom: false,\n        saveDomError: null,\n        unsavedDomChanges: 0,\n      });\n    }\n    case 'DOM_SAVING_ERROR': {\n      return update(state, {\n        savingDom: false,\n        saveDomError: action.error,\n      });\n    }\n    case 'DOM_SERVER_UPDATE': {\n      if (state.unsavedDomChanges > 0) {\n        // Ignore this server update\n        return state;\n      }\n\n      return update(state, { dom: action.dom, savedDom: action.dom });\n    }\n    case 'UPDATE_HISTORY': {\n      const updatedUndoStack = [\n        ...state.undoStack,\n        {\n          dom: state.dom,\n          view: state.currentView,\n          timestamp: Date.now(),\n        },\n      ];\n\n      if (updatedUndoStack.length > UNDO_HISTORY_LIMIT) {\n        updatedUndoStack.shift();\n      }\n\n      return update(state, {\n        undoStack: updatedUndoStack,\n        redoStack: [],\n      });\n    }\n    case 'UNDO': {\n      const undoStack = [...state.undoStack];\n      const redoStack = [...state.redoStack];\n\n      if (undoStack.length < 2) {\n        return state;\n      }\n\n      const currentState = undoStack.pop();\n\n      const previousStackEntry = undoStack[undoStack.length - 1];\n\n      if (!previousStackEntry || !currentState) {\n        return state;\n      }\n\n      redoStack.push(currentState);\n\n      return update(state, {\n        dom: previousStackEntry.dom,\n        currentView: previousStackEntry.view,\n        undoStack,\n        redoStack,\n      });\n    }\n    case 'REDO': {\n      const undoStack = [...state.undoStack];\n      const redoStack = [...state.redoStack];\n\n      const nextStackEntry = redoStack.pop();\n\n      if (!nextStackEntry) {\n        return state;\n      }\n\n      undoStack.push(nextStackEntry);\n\n      return update(state, {\n        dom: nextStackEntry.dom,\n        currentView: nextStackEntry.view,\n        undoStack,\n        redoStack,\n      });\n    }\n    case 'SELECT_NODE': {\n      if (state.currentView.kind === 'page') {\n        return update(state, {\n          currentView: {\n            ...state.currentView,\n            selectedNodeId: action.nodeId,\n            pageViewTab: 'component',\n          },\n        });\n      }\n      return state;\n    }\n    case 'DESELECT_NODE': {\n      if (state.currentView.kind === 'page') {\n        return update(state, {\n          currentView: { ...state.currentView, selectedNodeId: null, pageViewTab: 'page' },\n        });\n      }\n      return state;\n    }\n    case 'HOVER_NODE': {\n      if (state.currentView.kind === 'page') {\n        return update(state, {\n          currentView: { ...state.currentView, hoveredNodeId: action.nodeId },\n        });\n      }\n      return state;\n    }\n    case 'BLUR_HOVER_NODE': {\n      if (state.currentView.kind === 'page') {\n        return update(state, {\n          currentView: { ...state.currentView, hoveredNodeId: null },\n        });\n      }\n      return state;\n    }\n    case 'SET_VIEW':\n    case 'UPDATE': {\n      if (!action.view) {\n        return state;\n      }\n\n      let newView = action.view;\n      if (action.view.kind === 'page') {\n        if (typeof action.view.selectedNodeId === 'undefined') {\n          const isSameNode = action.view.name === state.currentView.name;\n\n          newView = {\n            ...action.view,\n            selectedNodeId:\n              state.currentView.kind === 'page' && isSameNode\n                ? state.currentView.selectedNodeId\n                : null,\n          };\n        }\n        if (action.view.selectedNodeId && typeof action.view.pageViewTab === 'undefined') {\n          newView = {\n            ...action.view,\n            pageViewTab: 'component',\n          };\n        }\n      }\n\n      return update(state, {\n        currentView: newView,\n      });\n    }\n    case 'SET_PAGE_VIEW_TAB': {\n      if (state.currentView.kind === 'page') {\n        return update(state, {\n          currentView: { ...state.currentView, pageViewTab: action.tab },\n        });\n      }\n      return state;\n    }\n    case 'SET_HAS_UNSAVED_CHANGES': {\n      return update(state, {\n        hasUnsavedChanges: action.hasUnsavedChanges,\n      });\n    }\n    case 'SAVE_QUERY_DRAFT': {\n      if (state.currentView.kind === 'page' && state.currentView.view?.kind === 'query') {\n        const queryTabs = state.currentView.queryPanel?.queryTabs || [];\n        const currentTabIndex = state.currentView.queryPanel?.currentTabIndex;\n        if (currentTabIndex !== undefined && queryTabs) {\n          let newDom = state.dom;\n          let nodeName = action.draft.name;\n          let target = action.draft;\n          // Check if the dom contains this query draft via its id\n          try {\n            appDom.getNode(state.dom, action.draft.id);\n          } catch (err) {\n            if (state.currentView?.name) {\n              const pageNode = appDom.getPageByName(state.dom, state.currentView.name);\n              if (pageNode) {\n                newDom = appDom.addNode(state.dom, action.draft, pageNode, 'queries');\n                const createdNode = appDom.getNode(newDom, action.draft.id, 'query');\n                nodeName = createdNode.name;\n                newDom = appDom.saveNode(newDom, createdNode);\n                target = createdNode;\n              }\n            }\n          }\n\n          newDom = appDom.saveNode(newDom, target);\n\n          return update(state, {\n            currentView: {\n              ...state.currentView,\n              queryPanel: {\n                ...state.currentView.queryPanel,\n                queryTabs: state.currentView?.queryPanel?.queryTabs?.map((tab, index) => {\n                  if (index === currentTabIndex) {\n                    return {\n                      ...tab,\n                      draft: target,\n                      meta: {\n                        ...tab.meta,\n                        name: nodeName,\n                      },\n                      saved: target,\n                    };\n                  }\n                  return tab;\n                }),\n              },\n            },\n            dom: newDom,\n          });\n        }\n      }\n      return state;\n    }\n    case 'UPDATE_QUERY_DRAFT': {\n      if (state.currentView.kind === 'page' && state.currentView.view?.kind === 'query') {\n        const queryTabs = state.currentView.queryPanel?.queryTabs || [];\n        const currentTabIndex = state.currentView.queryPanel?.currentTabIndex;\n        if (currentTabIndex !== undefined && queryTabs) {\n          return update(state, {\n            currentView: {\n              ...state.currentView,\n              queryPanel: {\n                ...state.currentView.queryPanel,\n                queryTabs: state.currentView?.queryPanel?.queryTabs?.map((tab, index) => {\n                  if (index === currentTabIndex) {\n                    if (action.updater && tab.draft) {\n                      return {\n                        ...tab,\n                        draft: action.updater(tab.draft),\n                      };\n                    }\n                  }\n                  return tab;\n                }),\n              },\n            },\n          });\n        }\n      }\n      return state;\n    }\n    case 'CREATE_QUERY_TAB': {\n      if (state.currentView.kind !== 'page' || !state.currentView.name) {\n        return state;\n      }\n      // const pageNode = appDom.getNode(state.dom, state.currentView.nodeId, 'page');\n      const draftNode = appDom.createNode(state.dom, 'query', {\n        name: action.mode === 'mutation' ? 'action' : 'query',\n        attributes: {\n          query: action.dataSource?.getInitialQueryValue(),\n          mode: action.mode ?? undefined,\n          connectionId: null,\n          dataSource: action?.dataSourceId,\n        },\n      });\n\n      // const newDom = appDom.addNode(state.dom, draftNode, pageNode, 'queries');\n      const newView = { ...state.currentView };\n      // const createdNode = newDom.nodes[draftNode.id] as appDom.QueryNode;\n\n      /**\n       * To make the app state updates atomic, we must also simultaneously\n       * update the dom and the currentView\n       */\n\n      /**\n       * If tabs are open, simply add the new tab as the latest tab\n       */\n\n      if (state.currentView.queryPanel?.queryTabs) {\n        newView.view = { kind: 'query', nodeId: draftNode.id };\n        newView.queryPanel = {\n          queryTabs: [\n            ...state.currentView.queryPanel.queryTabs,\n            {\n              meta: {\n                id: draftNode.id,\n                name: draftNode.name,\n                dataSource: action.dataSourceId,\n                mode: draftNode.attributes?.mode,\n              },\n              saved: draftNode,\n              draft: draftNode,\n              toolsTabType: 'preview',\n              isPreviewLoading: false,\n            },\n          ],\n          currentTabIndex: state.currentView.queryPanel.queryTabs.length,\n        };\n      } else {\n        /**\n         * If no tabs are open, initialise the query panel\n         */\n        newView.view = { kind: 'query', nodeId: draftNode.id };\n        newView.queryPanel = {\n          queryTabs: [\n            {\n              meta: {\n                id: draftNode.id,\n                name: draftNode.name,\n                dataSource: action.dataSourceId,\n                mode: draftNode.attributes?.mode,\n              },\n              saved: draftNode,\n              draft: draftNode,\n              isPreviewLoading: false,\n              toolsTabType: 'preview',\n            },\n          ],\n          currentTabIndex: 0,\n        };\n      }\n\n      return update(state, {\n        currentView: newView,\n      });\n    }\n    case 'OPEN_QUERY_TAB': {\n      if (state.currentView.kind !== 'page' || !state.currentView.name) {\n        return state;\n      }\n      if (state.currentView.name) {\n        /**\n         * Selected query is already open, do nothing\n         */\n        if (\n          state.currentView?.view?.kind === 'query' &&\n          action.queryId === state.currentView.view?.nodeId\n        ) {\n          return state;\n        }\n        /**\n         * Selected query is open but not the active tab, set it as active\n         * and update the view\n         */\n\n        const selectedQueryTabIndex = state?.currentView?.queryPanel?.queryTabs?.findIndex(\n          (tab) => {\n            return tab.meta.id === action.queryId;\n          },\n        );\n\n        if (selectedQueryTabIndex !== undefined && selectedQueryTabIndex > -1) {\n          return update(state, {\n            currentView: update(state.currentView, {\n              view: { kind: 'query', nodeId: action.queryId },\n              queryPanel: update(state.currentView.queryPanel, {\n                currentTabIndex: selectedQueryTabIndex,\n              }),\n            }),\n          });\n        }\n        /**\n         * Selected query is not open, add it as a tab\n         * and update the view\n         */\n\n        let newTabIndex;\n        let newTabs;\n        const pageNode = appDom.getPageByName(state.dom, state.currentView.name);\n        if (pageNode) {\n          const queries = appDom.getChildNodes(state.dom, pageNode).queries ?? [];\n          if (queries.length) {\n            const selectedQuery = queries?.find((query) => query?.id === action.queryId);\n            const newTab: QueryTab = {\n              meta: {\n                id: action.queryId,\n                name: selectedQuery?.name,\n                dataSource: selectedQuery?.attributes?.dataSource,\n                mode: selectedQuery?.attributes?.mode,\n              },\n              saved: selectedQuery,\n              draft: selectedQuery,\n              toolsTabType: 'preview',\n              isPreviewLoading: false,\n            };\n\n            /**\n             * If no tabs are open, set the currentTabIndex to 0\n             */\n            if (\n              !state.currentView?.queryPanel?.queryTabs ||\n              state?.currentView?.queryPanel?.queryTabs?.length === 0\n            ) {\n              newTabIndex = 0;\n              newTabs = [newTab];\n            } else {\n              /*\n               * If tabs are open, set the currentTabIndex to the next index\n               */\n              newTabIndex = state.currentView?.queryPanel.queryTabs.length;\n              newTabs = [...state.currentView.queryPanel.queryTabs, newTab];\n            }\n            return update(state, {\n              currentView: {\n                ...state.currentView,\n                view: { kind: 'query', nodeId: action.queryId },\n                queryPanel: {\n                  currentTabIndex: newTabIndex,\n                  queryTabs: newTabs,\n                },\n              },\n            });\n          }\n        }\n      }\n      return state;\n    }\n    case 'UPDATE_QUERY_TAB': {\n      if (state.currentView.kind !== 'page' || !state.currentView.name) {\n        return state;\n      }\n\n      return update(state, {\n        currentView: {\n          ...state.currentView,\n          queryPanel: {\n            ...state.currentView.queryPanel,\n            queryTabs: state.currentView.queryPanel?.queryTabs?.map((tab, index) => {\n              if (index === state.currentView.queryPanel?.currentTabIndex) {\n                return action.updater ? action.updater(tab) : tab;\n              }\n              return tab;\n            }),\n          },\n        },\n      });\n    }\n    case 'CLOSE_QUERY_TAB': {\n      if (state.currentView.kind !== 'page' || !state.currentView.name) {\n        return state;\n      }\n\n      const tabs = state.currentView.queryPanel?.queryTabs;\n      const newView = { ...state.currentView };\n      const newTabs = tabs?.filter((tab) => tab.meta.id !== action.queryId);\n      let newDom = state.dom;\n\n      if (tabs && action.queryId !== undefined) {\n        /*\n         * if this is the only tab,\n         * remove the tab and set the view to the page\n         */\n        if (tabs.length === 1) {\n          newView.view = undefined;\n          newView.queryPanel = {\n            queryTabs: undefined,\n            currentTabIndex: undefined,\n          };\n        }\n      }\n\n      const currentTabIndex = state.currentView.queryPanel?.currentTabIndex;\n\n      if (currentTabIndex !== undefined && action.queryId && action.queryIndex !== undefined) {\n        /*\n         * if the query being closed is not the one open,\n         * decrement the current tab index if it is greater than the index of the tab being closed\n         */\n        if (action.queryIndex !== currentTabIndex) {\n          const newTabIndex =\n            currentTabIndex > action.queryIndex ? currentTabIndex - 1 : currentTabIndex;\n          newView.queryPanel = {\n            queryTabs: newTabs,\n            currentTabIndex: newTabIndex,\n          };\n        }\n        // if there are multiple tabs open, and\n        // the query being closed is the one open,\n        // select the previous tab, or the next tab if there is no previous tab\n        else {\n          const queryIds = tabs?.map((tab) => tab.meta.id);\n\n          const replacementQueryId =\n            queryIds?.[action.queryIndex === 0 ? currentTabIndex + 1 : currentTabIndex - 1];\n          const replacementTabIndex =\n            action.queryIndex === 0 ? currentTabIndex : currentTabIndex - 1;\n          if (replacementQueryId) {\n            newView.view = { kind: 'query', nodeId: replacementQueryId };\n            newView.queryPanel = {\n              queryTabs: newTabs,\n              currentTabIndex: replacementTabIndex,\n            };\n          }\n        }\n      }\n\n      // If a delete action is also involved, remove the query from the dom\n      if (action.deleteQuery) {\n        newDom = appDom.removeNode(state.dom, action.queryId);\n      }\n\n      return update(state, {\n        dom: newDom,\n        currentView: newView,\n      });\n    }\n    case 'CLOSE_QUERY_PANEL': {\n      if (state.currentView.kind === 'page') {\n        return update(state, {\n          currentView: {\n            ...state.currentView,\n            view: undefined,\n            queryPanel: undefined,\n          },\n        });\n      }\n      return state;\n    }\n    default:\n      return state;\n  }\n}\n\nfunction createDomApi(dispatch: React.Dispatch<AppStateAction>) {\n  return {\n    update(updater: (dom: appDom.AppDom) => appDom.AppDom) {\n      dispatch({\n        type: 'UPDATE',\n        updater,\n      });\n    },\n    setNodeName(nodeId: NodeId, name: string) {\n      dispatch({\n        type: 'UPDATE',\n        updater(dom) {\n          const node = appDom.getNode(dom, nodeId);\n          return appDom.setNodeName(dom, node, name);\n        },\n      });\n    },\n    saveNode(node: appDom.AppDomNode) {\n      dispatch({\n        type: 'UPDATE',\n        updater(dom) {\n          return appDom.saveNode(dom, node);\n        },\n      });\n    },\n  };\n}\n\nfunction createAppStateApi(\n  dispatch: React.Dispatch<AppStateAction>,\n  scheduleTextInputHistoryUpdate?: DebouncedFunc<() => void>,\n) {\n  return {\n    update(updater: (dom: appDom.AppDom) => appDom.AppDom, view?: DomView) {\n      dispatch({\n        type: 'UPDATE',\n        updater,\n        view,\n      });\n    },\n    undo() {\n      scheduleTextInputHistoryUpdate?.flush();\n\n      dispatch({ type: 'UNDO' });\n    },\n    redo() {\n      dispatch({ type: 'REDO' });\n    },\n    setView(view: DomView) {\n      dispatch({\n        type: 'SET_VIEW',\n        view,\n      });\n    },\n    setPageViewTab(tab: PageViewTab) {\n      dispatch({\n        type: 'SET_PAGE_VIEW_TAB',\n        tab,\n      });\n    },\n    selectNode(nodeId: NodeId) {\n      dispatch({\n        type: 'SELECT_NODE',\n        nodeId,\n      });\n    },\n    hoverNode(nodeId: NodeId) {\n      dispatch({\n        type: 'HOVER_NODE',\n        nodeId,\n      });\n    },\n    blurHoverNode() {\n      dispatch({\n        type: 'BLUR_HOVER_NODE',\n      });\n    },\n    deselectNode() {\n      dispatch({\n        type: 'DESELECT_NODE',\n      });\n    },\n    setHasUnsavedChanges(hasUnsavedChanges: boolean) {\n      dispatch({\n        type: 'SET_HAS_UNSAVED_CHANGES',\n        hasUnsavedChanges,\n      });\n    },\n    openQueryTab(queryId: NodeId) {\n      dispatch({\n        type: 'OPEN_QUERY_TAB',\n        queryId,\n      });\n    },\n    createQueryTab(dataSource: ClientDataSource, dataSourceId: string, mode?: appDom.FetchMode) {\n      dispatch({\n        type: 'CREATE_QUERY_TAB',\n        dataSource,\n        dataSourceId,\n        mode,\n      });\n    },\n    updateQueryTab(updater: (tab: QueryTab) => QueryTab) {\n      dispatch({\n        type: 'UPDATE_QUERY_TAB',\n        updater,\n      });\n    },\n    closeQueryTab(queryId: NodeId, queryIndex?: number, deleteQuery?: boolean) {\n      dispatch({\n        type: 'CLOSE_QUERY_TAB',\n        queryId,\n        queryIndex,\n        deleteQuery,\n      });\n    },\n    closeQueryPanel() {\n      dispatch({\n        type: 'CLOSE_QUERY_PANEL',\n      });\n    },\n    updateQueryDraft(updater: (draft: appDom.QueryNode) => appDom.QueryNode) {\n      dispatch({\n        type: 'UPDATE_QUERY_DRAFT',\n        updater,\n      });\n    },\n    saveQueryDraft(draft: appDom.QueryNode) {\n      dispatch({\n        type: 'SAVE_QUERY_DRAFT',\n        draft,\n      });\n    },\n  };\n}\n\nexport const [useAppStateContext, AppStateProvider] = createProvidedContext<AppState>('AppState');\n\nexport function useAppState(): AppState {\n  return useAppStateContext();\n}\n\nconst DomApiContext = React.createContext<DomApi>(createDomApi(() => undefined));\n\nexport type DomApi = ReturnType<typeof createDomApi>;\n\nexport function useDomApi(): DomApi {\n  return React.useContext(DomApiContext);\n}\n\nconst AppStateApiContext = React.createContext<AppStateApi>(createAppStateApi(() => undefined));\n\nexport type AppStateApi = ReturnType<typeof createAppStateApi>;\n\nexport function useAppStateApi(): AppStateApi {\n  return React.useContext(AppStateApiContext);\n}\n\nlet previousUnsavedChanges = 0;\nfunction logUnsavedChanges(unsavedChanges: number) {\n  const hasUnsavedChanges = unsavedChanges >= 1;\n\n  if (!hasUnsavedChanges && previousUnsavedChanges > 0) {\n    // eslint-disable-next-line no-console\n    console.log(`${previousUnsavedChanges} changes saved.`);\n  }\n\n  previousUnsavedChanges = unsavedChanges;\n}\n\ntype AppStateActionType = AppStateAction['type'];\n\nconst UNDOABLE_ACTIONS = new Set<AppStateActionType>([\n  'UPDATE',\n  'SET_VIEW',\n  'SET_PAGE_VIEW_TAB',\n  'SELECT_NODE',\n  'DESELECT_NODE',\n  'UPDATE_QUERY_DRAFT',\n  'OPEN_QUERY_TAB',\n  'CREATE_QUERY_TAB',\n  'CLOSE_QUERY_TAB',\n]);\n\nfunction isCancellableAction(action: AppStateAction): boolean {\n  return Boolean(\n    action.type === 'SET_VIEW' ||\n      (action.type === 'UPDATE' && action.view) ||\n      (action.type === 'UPDATE_QUERY_DRAFT' && action.updater),\n  );\n}\n\nexport interface DomContextProps {\n  appUrl: string;\n  children?: React.ReactNode;\n}\n\nexport default function AppProvider({ appUrl, children }: DomContextProps) {\n  const projectApi = useProjectApi();\n  const { data: dom } = projectApi.useSuspenseQuery('loadDom', []);\n\n  invariant(dom, 'Suspense should load the dom');\n\n  const location = useLocation();\n\n  const app = appDom.getApp(dom);\n  const { pages = [] } = appDom.getChildNodes(dom, app);\n  const firstPage = pages.length > 0 ? pages[0] : null;\n\n  const initialView: DomView = getViewFromPathname(location.pathname) || {\n    kind: 'page',\n    name: firstPage?.name,\n    selectedNodeId: null,\n    pageViewTab: 'page',\n  };\n\n  const [state, dispatch] = React.useReducer(appStateReducer, {\n    // DOM state\n    dom,\n    // base path of the running application\n    appUrl,\n    // DOM loader state\n    savingDom: false,\n    unsavedDomChanges: 0,\n    saveDomError: null,\n    savedDom: dom,\n    // App state\n    currentView: initialView,\n    undoStack: [\n      {\n        dom,\n        view: initialView,\n        timestamp: Date.now(),\n      },\n    ],\n    redoStack: [],\n    hasUnsavedChanges: false,\n  });\n\n  React.useEffect(() => {\n    dispatch({\n      type: 'DOM_SERVER_UPDATE',\n      dom,\n    });\n  }, [dom]);\n\n  const scheduleTextInputHistoryUpdate = React.useMemo(\n    () =>\n      debounce(() => {\n        dispatch({ type: 'UPDATE_HISTORY' });\n      }, 500),\n    [],\n  );\n\n  const dispatchWithHistory = useEventCallback((action: AppStateAction) => {\n    if (state.hasUnsavedChanges && isCancellableAction(action)) {\n      // eslint-disable-next-line no-alert\n      const ok = window.confirm(\n        'You have unsaved changes. Are you sure you want to navigate away? All changes will be discarded.',\n      );\n\n      if (!ok) {\n        return;\n      }\n    }\n\n    dispatch(action);\n\n    if (UNDOABLE_ACTIONS.has(action.type)) {\n      if (hasFieldFocus()) {\n        scheduleTextInputHistoryUpdate();\n      } else {\n        dispatch({ type: 'UPDATE_HISTORY' });\n      }\n    }\n  });\n\n  const domApi = React.useMemo(() => createDomApi(dispatchWithHistory), [dispatchWithHistory]);\n  const appStateApi = React.useMemo(\n    () => createAppStateApi(dispatchWithHistory, scheduleTextInputHistoryUpdate),\n    [dispatchWithHistory, scheduleTextInputHistoryUpdate],\n  );\n\n  const handleSave = React.useCallback(() => {\n    if (!state.dom || state.savingDom || state.savedDom === state.dom) {\n      return;\n    }\n\n    const domToSave = state.dom;\n    dispatch({ type: 'DOM_SAVING' });\n    const domDiff = appDom.createDiff(state.savedDom, domToSave);\n    projectApi.methods\n      .applyDomDiff(domDiff)\n      .then(() => {\n        dispatch({ type: 'DOM_SAVED', savedDom: domToSave });\n      })\n      .catch((err) => {\n        dispatch({ type: 'DOM_SAVING_ERROR', error: err.message });\n      });\n  }, [projectApi, state]);\n\n  const debouncedHandleSave = useDebouncedHandler(handleSave, 100);\n\n  React.useEffect(() => {\n    debouncedHandleSave();\n  }, [state.dom, debouncedHandleSave]);\n\n  React.useEffect(() => {\n    logUnsavedChanges(state.unsavedDomChanges);\n\n    if (state.unsavedDomChanges <= 0 && !state.hasUnsavedChanges) {\n      return () => {};\n    }\n\n    const onBeforeUnload = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = `You have unsaved changes. Are you sure you want to navigate away?`;\n    };\n\n    window.addEventListener('beforeunload', onBeforeUnload);\n    return () => window.removeEventListener('beforeunload', onBeforeUnload);\n  }, [state.hasUnsavedChanges, state.unsavedDomChanges]);\n\n  useShortcut({ key: 's', metaKey: true }, handleSave);\n\n  return (\n    <AppStateProvider value={state}>\n      <AppStateApiContext.Provider value={appStateApi}>\n        <DomApiContext.Provider value={domApi}>{children}</DomApiContext.Provider>\n      </AppStateApiContext.Provider>\n    </AppStateProvider>\n  );\n}\n","import { useProject } from './project';\n\nexport function useProjectApi() {\n  const project = useProject();\n  return project.api;\n}\n","import * as React from 'react';\n\nexport interface ShortCut {\n  key: string;\n  metaKey?: boolean;\n  shiftKey?: boolean;\n  disabled?: boolean;\n  preventDefault?: boolean;\n}\n\nexport default function useShortcut(\n  { key, metaKey = false, disabled = false, shiftKey = false, preventDefault = true }: ShortCut,\n  handler: (event: KeyboardEvent) => void,\n) {\n  React.useEffect(() => {\n    if (disabled) {\n      return () => {};\n    }\n\n    const handleKeydown = (event: KeyboardEvent) => {\n      if (\n        event.key.toLowerCase() === key &&\n        (event.metaKey === metaKey || event.ctrlKey === metaKey) &&\n        event.shiftKey === shiftKey\n      ) {\n        handler(event);\n        if (preventDefault) {\n          event.preventDefault();\n        }\n      }\n    };\n\n    document.addEventListener('keydown', handleKeydown);\n    return () => document.removeEventListener('keydown', handleKeydown);\n  }, [key, metaKey, shiftKey, handler, disabled, preventDefault]);\n}\n","const SINGLE_ACTION_INPUT_TYPES = ['checkbox', 'radio', 'range', 'color'];\n\nexport function hasFieldFocus(documentTarget = document): boolean {\n  const activeElement = documentTarget.activeElement as HTMLElement | HTMLInputElement;\n\n  if (!activeElement) {\n    return false;\n  }\n  const { nodeName, contentEditable } = activeElement;\n\n  const type = activeElement.getAttribute('type') || '';\n\n  const focusedInput = nodeName === 'INPUT' && !SINGLE_ACTION_INPUT_TYPES.includes(type);\n  const focusedTextarea = nodeName === 'TEXTAREA';\n  const focusedContentEditable = contentEditable === 'true';\n\n  return focusedInput || focusedTextarea || focusedContentEditable;\n}\n","import { NodeId } from '@toolpad/studio-runtime';\nimport { matchPath } from 'react-router-dom';\nimport { QueryNode, FetchMode } from '@toolpad/studio-runtime/appDom';\n\nexport type QueryMeta = {\n  name?: string;\n  id?: NodeId;\n  dataSource?: string;\n  mode?: FetchMode;\n};\n\nexport type QueryEditorTabType = 'config' | 'settings';\n\nexport type QueryEditorToolsTabType = 'preview' | 'devTools';\n\nexport type QueryTab = {\n  meta: QueryMeta;\n  saved?: QueryNode;\n  draft?: QueryNode;\n  tabType?: QueryEditorTabType;\n  toolsTabType: QueryEditorToolsTabType;\n  isPreviewLoading: boolean;\n  previewHandler?: () => void;\n};\n\nexport type QueryPanel = {\n  queryTabs?: QueryTab[];\n  currentTabIndex?: number;\n};\n\nexport type PageView = { kind: 'query'; nodeId: NodeId };\n\nexport type PageViewTab = 'page' | 'component' | 'theme';\n\nexport type DomView = {\n  kind: 'page';\n  name?: string;\n  view?: PageView;\n  selectedNodeId?: NodeId | null;\n  hoveredNodeId?: NodeId | null;\n  pageViewTab?: PageViewTab;\n  queryPanel?: QueryPanel;\n  pageParametersDialogOpen?: boolean;\n};\n\nconst PREFIX = '/editor';\n\nexport function getPathnameFromView(view: DomView): string {\n  switch (view.kind) {\n    case 'page':\n      return view.name ? `${PREFIX}/app/pages/${view.name}` : `${PREFIX}/app/pages`;\n    default:\n      throw new Error(`Unknown view \"${(view as DomView).kind}\".`);\n  }\n}\n\nexport function getViewFromPathname(pathname: string): DomView | null {\n  const pageRouteMatch = matchPath(`${PREFIX}/app/pages/:pageName`, pathname);\n  if (pageRouteMatch?.params.pageName) {\n    return {\n      kind: 'page',\n      name: pageRouteMatch.params.pageName,\n      selectedNodeId: null,\n      pageViewTab: 'page',\n    };\n  }\n\n  return null;\n}\n","export const FONTS_URL =\n  'https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap';\n","export function scrollIntoViewIfNeeded(target: Element, options?: boolean | ScrollIntoViewOptions) {\n  if (target.getBoundingClientRect().bottom > window.innerHeight) {\n    target.scrollIntoView(options ?? false);\n  }\n  if (target.getBoundingClientRect().top < 0) {\n    target.scrollIntoView(options);\n  }\n}\n","import { NodeId, LiveBindings, ScopeMeta, ApplicationVm } from '@toolpad/studio-runtime';\nimport * as React from 'react';\nimport { update, updateOrCreate } from '@toolpad/utils/immutability';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { PageViewState } from '../../../types';\nimport { RectangleEdge } from '../../../utils/geometry';\n\nexport const DROP_ZONE_TOP = 'top';\nexport const DROP_ZONE_BOTTOM = 'bottom';\nexport const DROP_ZONE_LEFT = 'left';\nexport const DROP_ZONE_RIGHT = 'right';\nexport const DROP_ZONE_CENTER = 'center';\nexport type DropZone =\n  | typeof DROP_ZONE_TOP\n  | typeof DROP_ZONE_BOTTOM\n  | typeof DROP_ZONE_LEFT\n  | typeof DROP_ZONE_RIGHT\n  | typeof DROP_ZONE_CENTER;\n\nexport interface PageEditorState {\n  readonly type: 'page';\n  readonly nodeId: NodeId;\n  readonly newNode: appDom.ElementNode | null;\n  readonly draggedNodeId: NodeId | null;\n  readonly isDraggingOver: boolean;\n  readonly dragOverNodeId: NodeId | null;\n  readonly dragOverSlotParentProp: appDom.ParentProp<appDom.ElementNode | appDom.PageNode> | null;\n  readonly dragOverZone: DropZone | null;\n  readonly draggedEdge: RectangleEdge | null;\n  readonly viewState: PageViewState;\n  readonly pageState: Record<string, unknown>;\n  readonly nodeData: Record<NodeId, Record<string, unknown> | undefined>;\n  readonly globalScopeMeta: ScopeMeta;\n  readonly bindings: LiveBindings;\n  readonly vm: ApplicationVm;\n}\n\nexport type PageEditorAction =\n  | {\n      type: 'REPLACE';\n      state: PageEditorState;\n    }\n  | {\n      type: 'PAGE_NEW_NODE_DRAG_START';\n      newNode: appDom.ElementNode;\n    }\n  | {\n      type: 'PAGE_EXISTING_NODE_DRAG_START';\n      node: appDom.ElementNode;\n    }\n  | {\n      type: 'PAGE_EDGE_DRAG_START';\n      edgeDragState: {\n        nodeId: NodeId | null;\n        edge: RectangleEdge;\n      };\n    }\n  | {\n      type: 'PAGE_NODE_DRAG_OVER';\n      dragOverState: {\n        nodeId: NodeId | null;\n        parentProp: appDom.ParentProp<appDom.ElementNode | appDom.PageNode> | null;\n        zone: DropZone | null;\n      };\n    }\n  | {\n      type: 'PAGE_DRAG_END';\n    }\n  | {\n      type: 'PAGE_STATE_UPDATE';\n      pageState: Record<string, unknown>;\n      globalScopeMeta: ScopeMeta;\n    }\n  | {\n      type: 'NODE_DATA_UPDATE';\n      nodeId: NodeId;\n      prop: string;\n      value: unknown;\n    }\n  | {\n      type: 'PAGE_VIEW_STATE_UPDATE';\n      viewState: PageViewState;\n    }\n  | {\n      type: 'PAGE_BINDINGS_UPDATE';\n      bindings: LiveBindings;\n    }\n  | {\n      type: 'VM_UPDATE';\n      vm: ApplicationVm;\n    };\n\nexport function createPageEditorState(nodeId: NodeId): PageEditorState {\n  return {\n    type: 'page',\n    nodeId,\n    newNode: null,\n    draggedNodeId: null,\n    isDraggingOver: false,\n    dragOverNodeId: null,\n    dragOverSlotParentProp: null,\n    dragOverZone: null,\n    draggedEdge: null,\n    viewState: { nodes: {} },\n    pageState: {},\n    globalScopeMeta: {},\n    bindings: {},\n    nodeData: {},\n    vm: {\n      scopes: {},\n      bindingScopes: {},\n    },\n  };\n}\n\nexport function pageEditorReducer(\n  state: PageEditorState,\n  action: PageEditorAction,\n): PageEditorState {\n  switch (action.type) {\n    case 'REPLACE': {\n      return action.state;\n    }\n    case 'PAGE_NEW_NODE_DRAG_START': {\n      if (state.newNode) {\n        return state;\n      }\n      return update(state, {\n        newNode: action.newNode,\n      });\n    }\n    case 'PAGE_EXISTING_NODE_DRAG_START': {\n      return update(state, {\n        draggedNodeId: action.node.id,\n      });\n    }\n    case 'PAGE_EDGE_DRAG_START': {\n      const { nodeId, edge } = action.edgeDragState;\n\n      return update(state, {\n        draggedNodeId: nodeId,\n        draggedEdge: edge,\n      });\n    }\n    case 'PAGE_DRAG_END':\n      return update(state, {\n        newNode: null,\n        draggedNodeId: null,\n        isDraggingOver: false,\n        dragOverNodeId: null,\n        dragOverSlotParentProp: null,\n        dragOverZone: null,\n        draggedEdge: null,\n      });\n    case 'PAGE_NODE_DRAG_OVER': {\n      const { nodeId, parentProp, zone } = action.dragOverState;\n\n      return update(state, {\n        isDraggingOver: true,\n        dragOverNodeId: nodeId,\n        dragOverSlotParentProp: parentProp,\n        dragOverZone: zone,\n      });\n    }\n    case 'PAGE_VIEW_STATE_UPDATE': {\n      const { viewState } = action;\n      return update(state, {\n        viewState,\n      });\n    }\n    case 'PAGE_STATE_UPDATE': {\n      const { pageState, globalScopeMeta } = action;\n      return update(state, {\n        pageState,\n        globalScopeMeta,\n      });\n    }\n    case 'NODE_DATA_UPDATE': {\n      const { nodeId, prop, value } = action;\n      return update(state, {\n        nodeData: update(state.nodeData, {\n          [nodeId]: updateOrCreate(state.nodeData[nodeId], {\n            [prop]: value,\n          }),\n        }),\n      });\n    }\n    case 'PAGE_BINDINGS_UPDATE': {\n      const { bindings } = action;\n      return update(state, {\n        bindings,\n      });\n    }\n    case 'VM_UPDATE': {\n      const { vm } = action;\n      return update(state, { vm });\n    }\n    default:\n      return state;\n  }\n}\n\nfunction createPageEditorApi(dispatch: React.Dispatch<PageEditorAction>) {\n  return {\n    replace: (state: PageEditorState) => dispatch({ type: 'REPLACE', state }),\n    newNodeDragStart(newNode: appDom.ElementNode) {\n      dispatch({ type: 'PAGE_NEW_NODE_DRAG_START', newNode });\n    },\n    existingNodeDragStart(node: appDom.ElementNode) {\n      dispatch({ type: 'PAGE_EXISTING_NODE_DRAG_START', node });\n    },\n    edgeDragStart({ nodeId, edge }: { nodeId: NodeId | null; edge: RectangleEdge }) {\n      dispatch({\n        type: 'PAGE_EDGE_DRAG_START',\n        edgeDragState: { nodeId, edge },\n      });\n    },\n    dragEnd() {\n      dispatch({ type: 'PAGE_DRAG_END' });\n    },\n    nodeDragOver({\n      nodeId,\n      parentProp,\n      zone,\n    }: {\n      nodeId: NodeId | null;\n      parentProp: appDom.ParentProp<appDom.ElementNode | appDom.PageNode> | null;\n      zone: DropZone | null;\n    }) {\n      dispatch({\n        type: 'PAGE_NODE_DRAG_OVER',\n        dragOverState: { nodeId, parentProp, zone },\n      });\n    },\n    pageViewStateUpdate(viewState: PageViewState) {\n      dispatch({\n        type: 'PAGE_VIEW_STATE_UPDATE',\n        viewState,\n      });\n    },\n    pageStateUpdate(pageState: Record<string, unknown>, globalScopeMeta: ScopeMeta) {\n      dispatch({\n        type: 'PAGE_STATE_UPDATE',\n        pageState,\n        globalScopeMeta,\n      });\n    },\n    nodeDataUpdate(nodeId: NodeId, prop: string, value: unknown) {\n      dispatch({\n        type: 'NODE_DATA_UPDATE',\n        nodeId,\n        prop,\n        value,\n      });\n    },\n    pageBindingsUpdate(bindings: LiveBindings) {\n      dispatch({\n        type: 'PAGE_BINDINGS_UPDATE',\n        bindings,\n      });\n    },\n    vmUpdate(vm: ApplicationVm) {\n      dispatch({\n        type: 'VM_UPDATE',\n        vm,\n      });\n    },\n  };\n}\n\nconst PageEditorContext = React.createContext<PageEditorState | null>(null);\n\nexport function usePageEditorState() {\n  const state = React.useContext(PageEditorContext);\n\n  if (!state) {\n    throw new Error(`Missing PageEditorContext`);\n  }\n\n  return state;\n}\n\nexport interface PageEditorProviderProps {\n  children?: React.ReactNode;\n  nodeId: NodeId;\n}\n\nexport type PageEditorApi = ReturnType<typeof createPageEditorApi>;\n\nconst PageEditorApiContext = React.createContext<PageEditorApi>(\n  createPageEditorApi(() => undefined),\n);\n\nexport function PageEditorProvider({ children, nodeId }: PageEditorProviderProps) {\n  const initialState = createPageEditorState(nodeId);\n  const [state, dispatch] = React.useReducer(pageEditorReducer, initialState);\n  const api = React.useMemo(() => createPageEditorApi(dispatch), []);\n\n  React.useEffect(() => {\n    api.replace(createPageEditorState(nodeId));\n  }, [api, nodeId]);\n\n  return (\n    <PageEditorContext.Provider value={state}>\n      <PageEditorApiContext.Provider value={api}>{children}</PageEditorApiContext.Provider>\n    </PageEditorContext.Provider>\n  );\n}\n\nexport function usePageEditorApi() {\n  return React.useContext(PageEditorApiContext);\n}\n","import * as React from 'react';\nimport { NodeId } from '@toolpad/studio-runtime';\nimport { styled } from '@mui/material';\nimport clsx from 'clsx';\nimport invariant from 'invariant';\n\nimport { omit } from '@toolpad/utils/immutability';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { useAppStateApi, useAppState, useDomApi } from '../../../AppState';\nimport {\n  DropZone,\n  DROP_ZONE_BOTTOM,\n  DROP_ZONE_CENTER,\n  DROP_ZONE_LEFT,\n  DROP_ZONE_RIGHT,\n  DROP_ZONE_TOP,\n  usePageEditorApi,\n  usePageEditorState,\n} from '../PageEditorProvider';\nimport {\n  isPageRow,\n  isPageColumn,\n  PAGE_ROW_COMPONENT_ID,\n  PAGE_COLUMN_COMPONENT_ID,\n  isFormComponent,\n  FORM_COMPONENT_ID,\n  getElementNodeComponentId,\n} from '../../../../runtime/toolpadComponents';\nimport {\n  getRectanglePointActiveEdge,\n  isHorizontalFlow,\n  isReverseFlow,\n  isVerticalFlow,\n  Rectangle,\n  RectangleEdge,\n  RECTANGLE_EDGE_BOTTOM,\n  RECTANGLE_EDGE_LEFT,\n  RECTANGLE_EDGE_RIGHT,\n  RECTANGLE_EDGE_TOP,\n  rectContainsPoint,\n} from '../../../../utils/geometry';\nimport NodeHud from './NodeHud';\nimport { OverlayGrid, OverlayGridHandle } from './OverlayGrid';\nimport { NodeInfo } from '../../../../types';\nimport NodeDropArea from './NodeDropArea';\nimport { PinholeOverlay } from '../../../../PinholeOverlay';\nimport {\n  deleteOrphanedLayoutNodes,\n  normalizePageRowColumnSizes,\n  removePageLayoutNode,\n} from '../../pageLayout';\nimport { ToolpadBridge } from '../EditorCanvasHost';\n\nconst VERTICAL_RESIZE_SNAP_UNITS = 4; // px\n\nconst overlayClasses = {\n  hud: 'Toolpad_Hud',\n  nodeHud: 'Toolpad_NodeHud',\n  container: 'Toolpad_Container',\n  hudOverlay: 'Toolpad_HudOverlay',\n  nodeDrag: 'Toolpad_NodeDrag',\n  resizeHorizontal: 'Toolpad_ResizeHorizontal',\n  resizeVertical: 'Toolpad_ResizeVertical',\n};\n\nconst OverlayRoot = styled('div')({\n  pointerEvents: 'none',\n  width: '100%',\n  height: '100%',\n  '&:focus': {\n    outline: 'none',\n  },\n  [`&.${overlayClasses.nodeDrag}`]: {\n    cursor: 'copy',\n  },\n  [`&.${overlayClasses.resizeHorizontal}`]: {\n    cursor: 'ew-resize',\n  },\n  [`&.${overlayClasses.resizeVertical}`]: {\n    cursor: 'ns-resize',\n  },\n  [`.${overlayClasses.hudOverlay}`]: {\n    position: 'absolute',\n    inset: '0 0 0 0',\n  },\n});\n\nexport function findAreaAt(\n  areaRects: Record<string, Rectangle>,\n  x: number,\n  y: number,\n): string | null {\n  const rectEntries = Object.entries(areaRects);\n\n  // Search deepest nested first\n  for (let i = rectEntries.length - 1; i >= 0; i -= 1) {\n    const areaRectEntry = rectEntries[i];\n\n    const areaId = areaRectEntry[0];\n    const areaRect = areaRectEntry[1];\n\n    if (rectContainsPoint(areaRect, x, y)) {\n      return areaId;\n    }\n  }\n  return null;\n}\n\nfunction hasFreeNodeSlots(nodeInfo: NodeInfo): boolean {\n  return Object.keys(nodeInfo.slots || []).length > 0;\n}\n\nfunction getRectangleEdgeDropZone(edge: RectangleEdge | null): DropZone | null {\n  switch (edge) {\n    case RECTANGLE_EDGE_TOP:\n      return DROP_ZONE_TOP;\n    case RECTANGLE_EDGE_RIGHT:\n      return DROP_ZONE_RIGHT;\n    case RECTANGLE_EDGE_BOTTOM:\n      return DROP_ZONE_BOTTOM;\n    case RECTANGLE_EDGE_LEFT:\n      return DROP_ZONE_LEFT;\n    default:\n      return null;\n  }\n}\n\nfunction getDropAreaId(nodeId: string, parentProp: string): string {\n  return `${nodeId}:${parentProp}`;\n}\n\nfunction getDropAreaNodeId(dropAreaId: string): NodeId {\n  return dropAreaId.split(':')[0] as NodeId;\n}\n\nfunction getDropAreaParentProp(dropAreaId: string): string | null {\n  return dropAreaId.split(':')[1] || null;\n}\n\ninterface RenderOverlayProps {\n  bridge: ToolpadBridge | null;\n}\n\nexport default function RenderOverlay({ bridge }: RenderOverlayProps) {\n  const { dom } = useAppState();\n  const { currentView } = useAppState();\n  const selectedNodeId = currentView.kind === 'page' ? currentView.selectedNodeId : null;\n  const hoveredNodeId = currentView.kind === 'page' ? currentView.hoveredNodeId : null;\n\n  const domApi = useDomApi();\n  const appStateApi = useAppStateApi();\n  const api = usePageEditorApi();\n  const {\n    viewState,\n    nodeId: pageNodeId,\n    newNode,\n    draggedNodeId,\n    draggedEdge,\n    dragOverNodeId,\n    dragOverSlotParentProp,\n    dragOverZone,\n    isDraggingOver,\n  } = usePageEditorState();\n\n  const { nodes: nodesInfo } = viewState;\n\n  const pageNode = appDom.getNode(dom, pageNodeId, 'page');\n\n  const pageNodes = React.useMemo(() => {\n    return [pageNode, ...appDom.getDescendants(dom, pageNode)];\n  }, [dom, pageNode]);\n\n  const selectedNode = selectedNodeId && appDom.getMaybeNode(dom, selectedNodeId);\n\n  const overlayRef = React.useRef<HTMLDivElement | null>(null);\n\n  const draggedNode = React.useMemo(\n    (): appDom.ElementNode | null =>\n      newNode || (draggedNodeId && appDom.getNode(dom, draggedNodeId, 'element')),\n    [dom, draggedNodeId, newNode],\n  );\n\n  const selectionRects = React.useMemo(() => {\n    const rects: Record<string, Rectangle> = {};\n\n    pageNodes.forEach((node) => {\n      const nodeInfo = nodesInfo[node.id];\n      const nodeRect = nodeInfo?.rect || null;\n\n      if (nodeRect) {\n        rects[node.id] = nodeRect;\n      }\n    });\n\n    return rects;\n  }, [nodesInfo, pageNodes]);\n\n  const selectNode = React.useCallback(\n    (nodeId: NodeId) => {\n      if (selectedNodeId !== nodeId) {\n        appStateApi.selectNode(nodeId);\n      }\n    },\n    [appStateApi, selectedNodeId],\n  );\n\n  const deselectNode = React.useCallback(() => {\n    if (selectedNodeId) {\n      appStateApi.deselectNode();\n    }\n  }, [appStateApi, selectedNodeId]);\n\n  const handleNodeMouseUp = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement>) => {\n      const cursorPos = bridge?.canvasCommands.getViewCoordinates(event.clientX, event.clientY);\n\n      if (!cursorPos || draggedNodeId) {\n        return;\n      }\n\n      const newSelectedNodeId = findAreaAt(selectionRects, cursorPos.x, cursorPos.y);\n      const newSelectedNode =\n        newSelectedNodeId && appDom.getMaybeNode(dom, newSelectedNodeId as NodeId);\n      if (newSelectedNode && appDom.isElement(newSelectedNode)) {\n        selectNode(newSelectedNodeId as NodeId);\n      } else {\n        deselectNode();\n      }\n    },\n    [bridge, deselectNode, dom, draggedNodeId, selectNode, selectionRects],\n  );\n\n  const handleNodeDelete = React.useCallback(\n    (nodeId: NodeId) => (event?: React.MouseEvent<HTMLElement>) => {\n      if (event) {\n        event.stopPropagation();\n      }\n\n      appStateApi.update(\n        (draft) => {\n          const toRemove = appDom.getNode(draft, nodeId);\n\n          if (appDom.isElement(toRemove)) {\n            draft = removePageLayoutNode(draft, toRemove);\n          }\n\n          return draft;\n        },\n        currentView.kind === 'page'\n          ? {\n              ...currentView,\n              selectedNodeId: null,\n            }\n          : currentView,\n      );\n    },\n    [appStateApi, currentView],\n  );\n\n  const selectedRect = (selectedNode && !newNode && nodesInfo[selectedNode.id]?.rect) || null;\n\n  const interactiveNodes = React.useMemo<Set<NodeId>>(() => {\n    if (!selectedNode) {\n      return new Set();\n    }\n    return new Set(\n      [...appDom.getPageAncestors(dom, selectedNode), selectedNode].map(\n        (interactiveNode) => interactiveNode.id,\n      ),\n    );\n  }, [dom, selectedNode]);\n\n  const handleNodeDragStart = React.useCallback(\n    (node: appDom.ElementNode) => (event: React.DragEvent<HTMLDivElement>) => {\n      event.stopPropagation();\n\n      if (appDom.isElement(node)) {\n        event.dataTransfer.dropEffect = 'move';\n        selectNode(node.id);\n        api.existingNodeDragStart(node);\n      }\n    },\n    [api, selectNode],\n  );\n\n  const handleNodeDuplicate = React.useCallback(\n    (node: appDom.ElementNode) => (event: React.MouseEvent) => {\n      event.stopPropagation();\n\n      domApi.update((draft) => {\n        draft = appDom.duplicateNode(draft, node);\n        draft = normalizePageRowColumnSizes(draft, pageNode);\n\n        return draft;\n      });\n    },\n    [domApi, pageNode],\n  );\n\n  const getNodeDraggableHorizontalEdges = React.useCallback(\n    (node: appDom.AppDomNode): RectangleEdge[] => {\n      const nodeParentProp = node.parentProp;\n\n      const parent = appDom.getParent(dom, node);\n\n      const isFirstChild =\n        parent && appDom.isElement(parent) && nodeParentProp\n          ? appDom.getNodeFirstChild(dom, parent, nodeParentProp)?.id === node.id\n          : false;\n      const isLastChild =\n        parent && appDom.isElement(parent) && nodeParentProp\n          ? appDom.getNodeLastChild(dom, parent, nodeParentProp)?.id === node.id\n          : false;\n\n      const isPageRowChild = parent ? appDom.isElement(parent) && isPageRow(parent) : false;\n\n      const isDraggableLeft = isPageRowChild ? !isFirstChild : false;\n      const isDraggableRight = isPageRowChild ? !isLastChild : false;\n\n      return [\n        ...(isDraggableLeft ? [RECTANGLE_EDGE_LEFT] : []),\n        ...(isDraggableRight ? [RECTANGLE_EDGE_RIGHT] : []),\n      ] as RectangleEdge[];\n    },\n    [dom],\n  );\n\n  const handleEdgeDragStart = React.useCallback(\n    (node: appDom.AppDomNode) =>\n      (edge: RectangleEdge) =>\n      (event: React.MouseEvent<HTMLElement>) => {\n        event.stopPropagation();\n\n        const parent = appDom.getParent(dom, node);\n\n        const isPageColumnChild = parent ? appDom.isElement(parent) && isPageColumn(parent) : false;\n        const isResizingVertically = edge === RECTANGLE_EDGE_TOP || edge === RECTANGLE_EDGE_BOTTOM;\n\n        const nodeToResize = parent && isPageColumnChild && !isResizingVertically ? parent : node;\n\n        api.edgeDragStart({ nodeId: nodeToResize.id, edge });\n\n        selectNode(nodeToResize.id);\n      },\n    [api, dom, selectNode],\n  );\n\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (selectedNodeId && event.key === 'Backspace') {\n        handleNodeDelete(selectedNodeId)();\n      }\n    },\n    [handleNodeDelete, selectedNodeId],\n  );\n\n  const isEmptyPage = pageNodes.length <= 1;\n\n  /**\n   * Return all nodes that are available for insertion.\n   * i.e. Exclude all descendants of the current selection since inserting in one of\n   * them would create a cyclic structure.\n   */\n  const availableDropTargets = React.useMemo((): appDom.AppDomNode[] => {\n    if (!draggedNode) {\n      return [];\n    }\n\n    let excludedNodes = new Set();\n\n    if (selectedNode && !newNode) {\n      excludedNodes = new Set<appDom.AppDomNode>([\n        selectedNode,\n        ...appDom.getDescendants(dom, selectedNode),\n      ]);\n    }\n\n    if (isFormComponent(draggedNode)) {\n      const formNodes = appDom.getComponentTypeNodes(dom, FORM_COMPONENT_ID);\n      const formNodeDescendants = formNodes\n        .map((formNode) => appDom.getDescendants(dom, formNode))\n        .flat();\n\n      formNodeDescendants.forEach(excludedNodes.add, excludedNodes);\n    }\n\n    return pageNodes.filter((n) => !excludedNodes.has(n));\n  }, [dom, draggedNode, newNode, pageNodes, selectedNode]);\n\n  const availableDropTargetIds = React.useMemo(\n    () => new Set(availableDropTargets.map((n) => n.id)),\n    [availableDropTargets],\n  );\n\n  const availableDropZones = React.useMemo((): DropZone[] => {\n    const dragOverNode = dragOverNodeId && appDom.getNode(dom, dragOverNodeId);\n    const dragOverNodeInfo = dragOverNodeId && nodesInfo[dragOverNodeId];\n\n    const dragOverNodeParentProp = dragOverNode?.parentProp;\n\n    const dragOverNodeSlots = dragOverNodeInfo?.slots;\n    const dragOverSlot =\n      dragOverNodeSlots && dragOverSlotParentProp && dragOverNodeSlots[dragOverSlotParentProp];\n\n    const dragOverParent = dragOverNode && appDom.getParent(dom, dragOverNode);\n    const dragOverParentInfo = dragOverParent && nodesInfo[dragOverParent.id];\n\n    const dragOverParentFreeSlots = dragOverParentInfo?.slots;\n    const dragOverParentFreeSlot =\n      dragOverParentFreeSlots &&\n      dragOverNodeParentProp &&\n      dragOverParentFreeSlots[dragOverNodeParentProp];\n\n    const isDraggingOverLayoutChild =\n      dragOverParent && dragOverParentFreeSlot\n        ? appDom.isPage(dragOverParent) || dragOverParentFreeSlot.type === 'layout'\n        : false;\n\n    const isDraggingOverPageRowChild =\n      dragOverParent && appDom.isElement(dragOverParent) ? isPageRow(dragOverParent) : false;\n    const isDraggingOverPageColumnChild =\n      dragOverParent && appDom.isElement(dragOverParent) ? isPageColumn(dragOverParent) : false;\n    const isDraggingOverHorizontalContainerChild = dragOverParentFreeSlot\n      ? isHorizontalFlow(dragOverParentFreeSlot.flowDirection)\n      : false;\n    const isDraggingOverVerticalContainerChild = dragOverParentFreeSlot\n      ? isVerticalFlow(dragOverParentFreeSlot.flowDirection)\n      : false;\n\n    const hasChildHorizontalDropZones =\n      !isDraggingOverVerticalContainerChild ||\n      isDraggingOverLayoutChild ||\n      isDraggingOverPageColumnChild;\n    const hasChildVerticalDropZones =\n      !isDraggingOverHorizontalContainerChild ||\n      isDraggingOverLayoutChild ||\n      isDraggingOverPageRowChild;\n\n    if (draggedNode && dragOverNode) {\n      if (appDom.isPage(dragOverNode)) {\n        return [...(isEmptyPage ? [] : [DROP_ZONE_TOP]), DROP_ZONE_CENTER] as DropZone[];\n      }\n\n      if (dragOverNodeInfo && !hasFreeNodeSlots(dragOverNodeInfo) && !dragOverParentFreeSlot) {\n        return [];\n      }\n\n      const isDraggingPageRow = draggedNode ? isPageRow(draggedNode) : false;\n      const isDraggingPageColumn = draggedNode ? isPageColumn(draggedNode) : false;\n\n      const isDraggingOverHorizontalContainer =\n        dragOverSlot && isHorizontalFlow(dragOverSlot.flowDirection);\n      const isDraggingOverVerticalContainer =\n        dragOverSlot && isVerticalFlow(dragOverSlot.flowDirection);\n\n      const isDraggingOverPageRow = appDom.isElement(dragOverNode) && isPageRow(dragOverNode);\n\n      if (isDraggingPageRow) {\n        return [\n          ...(hasChildVerticalDropZones ? [DROP_ZONE_TOP, DROP_ZONE_BOTTOM] : []),\n          ...(isDraggingOverVerticalContainer ? [DROP_ZONE_CENTER] : []),\n        ] as DropZone[];\n      }\n\n      if (isDraggingPageColumn) {\n        return [\n          ...(hasChildHorizontalDropZones ? [DROP_ZONE_RIGHT, DROP_ZONE_LEFT] : []),\n          ...(isDraggingOverPageRow && hasChildVerticalDropZones\n            ? [DROP_ZONE_TOP, DROP_ZONE_BOTTOM]\n            : []),\n          ...(isDraggingOverHorizontalContainer ? [DROP_ZONE_CENTER] : []),\n        ] as DropZone[];\n      }\n\n      if (isDraggingOverHorizontalContainer) {\n        return [\n          DROP_ZONE_TOP,\n          DROP_ZONE_BOTTOM,\n          DROP_ZONE_CENTER,\n          ...((isDraggingOverLayoutChild ? [DROP_ZONE_LEFT, DROP_ZONE_RIGHT] : []) as DropZone[]),\n        ];\n      }\n      if (isDraggingOverVerticalContainer) {\n        return [DROP_ZONE_RIGHT, DROP_ZONE_LEFT, DROP_ZONE_CENTER];\n      }\n    }\n\n    return [\n      ...(hasChildHorizontalDropZones ? [DROP_ZONE_RIGHT, DROP_ZONE_LEFT] : []),\n      ...(hasChildVerticalDropZones ? [DROP_ZONE_TOP, DROP_ZONE_BOTTOM] : []),\n    ] as DropZone[];\n  }, [dom, dragOverNodeId, dragOverSlotParentProp, draggedNode, isEmptyPage, nodesInfo]);\n\n  const dropAreaRects = React.useMemo(() => {\n    const rects: Record<string, Rectangle> = {};\n\n    pageNodes.forEach((node) => {\n      const nodeId = node.id;\n      const nodeInfo = nodesInfo[nodeId];\n\n      const nodeRect = nodeInfo?.rect;\n\n      const nodeParentProp = node.parentProp;\n\n      const nodeSlots = nodeInfo?.slots || [];\n      const nodeSlotEntries = Object.entries(nodeSlots);\n\n      const hasFreeSlots = nodeSlotEntries.length > 0;\n\n      const baseRects = [\n        nodeRect,\n        ...nodeSlotEntries.map(([, slot]) => (slot ? slot.rect : null)).filter(Boolean),\n      ];\n\n      baseRects.forEach((baseRect, baseRectIndex) => {\n        const parent = appDom.getParent(dom, node);\n        const parentInfo = parent && nodesInfo[parent.id];\n\n        const parentRect = parentInfo?.rect;\n\n        const parentProp = hasFreeSlots ? Object.keys(nodeSlots)[baseRectIndex - 1] : null;\n\n        let parentAwareBaseRect = baseRect;\n\n        const isPageChild = parent ? appDom.isPage(parent) : false;\n\n        if (\n          nodeInfo &&\n          parentInfo &&\n          baseRect &&\n          (isPageChild || appDom.isElement(parent)) &&\n          hasFreeNodeSlots(parentInfo)\n        ) {\n          const parentChildren = nodeParentProp\n            ? (appDom.getChildNodes(dom, parent) as appDom.NodeChildren<appDom.ElementNode>)[\n                nodeParentProp\n              ]\n            : [];\n\n          const parentChildrenCount = parentChildren.length;\n\n          const isFirstChild = parentChildrenCount > 0 ? parentChildren[0].id === node.id : true;\n          const isLastChild =\n            parentChildren.length > 0\n              ? parentChildren[parentChildrenCount - 1].id === node.id\n              : true;\n\n          let gapCount = 2;\n          if (isFirstChild || isLastChild) {\n            gapCount = 1;\n          }\n          if (isFirstChild && isLastChild) {\n            gapCount = 0;\n          }\n\n          const parentSlots = parentInfo?.slots;\n          const parentSlot = (parentSlots && nodeParentProp && parentSlots[nodeParentProp]) || null;\n\n          const isParentVerticalContainer = parentSlot\n            ? isVerticalFlow(parentSlot.flowDirection)\n            : false;\n          const isParentHorizontalContainer = parentSlot\n            ? isHorizontalFlow(parentSlot.flowDirection)\n            : false;\n\n          const isParentReverseContainer = parentSlot\n            ? isReverseFlow(parentSlot.flowDirection)\n            : false;\n\n          let parentGap = 0;\n          if (nodesInfo && gapCount > 0) {\n            const firstChildInfo = nodesInfo[parentChildren[0].id];\n            const secondChildInfo = nodesInfo[parentChildren[1].id];\n\n            const firstChildRect = firstChildInfo?.rect;\n            const secondChildRect = secondChildInfo?.rect;\n\n            if (firstChildRect && secondChildRect) {\n              if (isParentHorizontalContainer) {\n                parentGap =\n                  (isParentReverseContainer\n                    ? firstChildRect.x - secondChildRect.x - secondChildRect.width\n                    : secondChildRect.x - firstChildRect.x - firstChildRect.width) / 2;\n              }\n              if (isParentVerticalContainer) {\n                parentGap =\n                  (isParentReverseContainer\n                    ? firstChildRect.y - secondChildRect.y - secondChildRect.height\n                    : secondChildRect.y - firstChildRect.y - firstChildRect.height) / 2;\n              }\n            }\n          }\n\n          const hasPositionGap = isParentReverseContainer ? isLastChild : isFirstChild;\n          if (isParentVerticalContainer) {\n            parentAwareBaseRect = {\n              x: isPageChild ? 0 : baseRect.x,\n              y: hasPositionGap ? baseRect.y : baseRect.y - parentGap,\n              width:\n                isPageChild && parentRect ? parentRect.x * 2 + parentRect.width : baseRect.width,\n              height: baseRect.height + gapCount * parentGap,\n            };\n          }\n          if (isParentHorizontalContainer) {\n            parentAwareBaseRect = {\n              ...baseRect,\n              x: hasPositionGap ? baseRect.x : baseRect.x - parentGap,\n              width: baseRect.width + gapCount * parentGap,\n            };\n          }\n\n          if (parentAwareBaseRect) {\n            if (parentProp) {\n              rects[getDropAreaId(nodeId, parentProp)] = parentAwareBaseRect;\n            } else {\n              rects[nodeId] = parentAwareBaseRect;\n            }\n          }\n        } else if (parentProp && baseRect) {\n          rects[getDropAreaId(nodeId, parentProp)] = baseRect;\n        } else if (baseRect) {\n          rects[nodeId] = baseRect;\n        }\n      });\n    });\n\n    return rects;\n  }, [dom, nodesInfo, pageNodes]);\n\n  const getDropAreaRect = React.useCallback(\n    (nodeId: NodeId, parentProp?: string) => {\n      if (parentProp) {\n        const dropAreaId = getDropAreaId(nodeId, parentProp);\n        return dropAreaRects[dropAreaId];\n      }\n      return dropAreaRects[nodeId];\n    },\n    [dropAreaRects],\n  );\n\n  const handleNodeDragOver = React.useCallback(\n    (event: React.DragEvent<Element>) => {\n      event.preventDefault();\n\n      const cursorPos = bridge?.canvasCommands.getViewCoordinates(event.clientX, event.clientY);\n\n      if (!cursorPos || !draggedNode) {\n        return;\n      }\n\n      const activeDropAreaId = findAreaAt(dropAreaRects, cursorPos.x, cursorPos.y);\n\n      const activeDropNodeId: NodeId =\n        (activeDropAreaId && getDropAreaNodeId(activeDropAreaId)) || pageNode.id;\n\n      const activeDropNode = appDom.getNode(dom, activeDropNodeId);\n\n      const activeDropNodeInfo = nodesInfo[activeDropNodeId];\n      const activeDropNodeRect = activeDropNodeInfo?.rect;\n\n      const activeDropNodeParent = appDom.getParent(dom, activeDropNode);\n      const activeDropNodeSiblings = appDom.getSiblings(dom, activeDropNode);\n\n      const isDraggingOverPage = appDom.isPage(activeDropNode);\n      const isDraggingOverElement = appDom.isElement(activeDropNode);\n\n      const activeDropSlotParentProp = isDraggingOverPage\n        ? 'children'\n        : activeDropAreaId && getDropAreaParentProp(activeDropAreaId);\n\n      const isDraggingOverContainer = activeDropNodeInfo\n        ? hasFreeNodeSlots(activeDropNodeInfo) && activeDropSlotParentProp\n        : false;\n\n      let activeDropZone = null;\n\n      const activeDropNodeSlots = activeDropNodeInfo?.slots || null;\n      const activeDropSlot =\n        activeDropNodeSlots &&\n        activeDropSlotParentProp &&\n        activeDropNodeSlots[activeDropSlotParentProp];\n\n      const activeDropNodeChildren =\n        (activeDropSlotParentProp &&\n          (isDraggingOverPage || appDom.isElement(activeDropNode)) &&\n          (appDom.getChildNodes(dom, activeDropNode) as appDom.NodeChildren<appDom.ElementNode>)[\n            activeDropSlotParentProp\n          ]) ||\n        [];\n\n      const isDraggingOverEmptyContainer = activeDropNodeInfo\n        ? isDraggingOverContainer && activeDropNodeChildren.length === 0\n        : false;\n\n      const activeDropAreaRect =\n        isDraggingOverContainer && activeDropSlotParentProp\n          ? getDropAreaRect(activeDropNodeId, activeDropSlotParentProp)\n          : getDropAreaRect(activeDropNodeId);\n\n      if (activeDropAreaRect) {\n        const relativeX = cursorPos.x - activeDropAreaRect.x;\n        const relativeY = cursorPos.y - activeDropAreaRect.y;\n\n        activeDropZone = isDraggingOverEmptyContainer\n          ? DROP_ZONE_CENTER\n          : getRectangleEdgeDropZone(\n              getRectanglePointActiveEdge(activeDropAreaRect, relativeX, relativeY),\n            );\n\n        if (isDraggingOverPage) {\n          if (activeDropNodeRect && relativeY < 0 && !isEmptyPage) {\n            activeDropZone = DROP_ZONE_TOP;\n          } else {\n            activeDropZone = DROP_ZONE_CENTER;\n          }\n        }\n\n        const edgeDetectionMargin = 10; // px\n\n        // Detect center in layout containers\n        if (isDraggingOverElement && activeDropNodeInfo) {\n          const isDraggingOverPageChild = activeDropNodeParent\n            ? appDom.isPage(activeDropNodeParent)\n            : false;\n\n          if (!activeDropSlot || isHorizontalFlow(activeDropSlot.flowDirection)) {\n            if (\n              isDraggingOverPageChild &&\n              activeDropNodeRect &&\n              relativeX <= activeDropNodeRect.x\n            ) {\n              activeDropZone = DROP_ZONE_LEFT;\n            } else if (\n              isDraggingOverPageChild &&\n              activeDropNodeRect &&\n              relativeX >= activeDropNodeRect.x + activeDropNodeRect.width\n            ) {\n              activeDropZone = DROP_ZONE_RIGHT;\n            } else if (relativeY <= edgeDetectionMargin && !isDraggingOverEmptyContainer) {\n              activeDropZone = DROP_ZONE_TOP;\n            } else if (\n              activeDropAreaRect.height - relativeY <= edgeDetectionMargin &&\n              !isDraggingOverEmptyContainer\n            ) {\n              activeDropZone = DROP_ZONE_BOTTOM;\n            } else if (activeDropSlot) {\n              activeDropZone = DROP_ZONE_CENTER;\n            }\n          }\n          if (\n            activeDropSlot &&\n            !isDraggingOverEmptyContainer &&\n            isVerticalFlow(activeDropSlot.flowDirection)\n          ) {\n            if (relativeX <= edgeDetectionMargin) {\n              activeDropZone = DROP_ZONE_LEFT;\n            } else if (activeDropAreaRect.width - relativeX <= edgeDetectionMargin) {\n              activeDropZone = DROP_ZONE_RIGHT;\n            } else {\n              activeDropZone = DROP_ZONE_CENTER;\n            }\n          }\n        }\n      }\n\n      const hasChangedDropArea =\n        activeDropNodeId !== dragOverNodeId ||\n        activeDropSlotParentProp !== dragOverSlotParentProp ||\n        activeDropZone !== dragOverZone;\n\n      if (activeDropZone && hasChangedDropArea && availableDropTargetIds.has(activeDropNodeId)) {\n        const isDragOverParentPageRow =\n          activeDropNodeParent &&\n          appDom.isElement(activeDropNodeParent) &&\n          isPageRow(activeDropNodeParent);\n\n        const activeDropNodeParentParent =\n          activeDropNodeParent && appDom.getParent(dom, activeDropNodeParent);\n        const activeDropNodeParentParentInfo =\n          activeDropNodeParentParent && nodesInfo[activeDropNodeParentParent.id];\n        const hasActiveDropNodeParentParentSlot = !!(\n          activeDropNodeParentParentInfo?.slots &&\n          activeDropNodeParentParentInfo?.slots[activeDropSlotParentProp || 'children']\n        );\n\n        const hasDragOverParentRowOverride =\n          isDragOverParentPageRow &&\n          hasActiveDropNodeParentParentSlot &&\n          activeDropNodeSiblings.length === 0 &&\n          (activeDropZone === DROP_ZONE_TOP || activeDropZone === DROP_ZONE_BOTTOM);\n\n        api.nodeDragOver({\n          nodeId: hasDragOverParentRowOverride ? activeDropNodeParent.id : activeDropNodeId,\n          parentProp: activeDropSlotParentProp as appDom.ParentProp<\n            appDom.ElementNode | appDom.PageNode\n          >,\n          zone: activeDropZone as DropZone,\n        });\n      }\n    },\n    [\n      bridge,\n      draggedNode,\n      dropAreaRects,\n      pageNode.id,\n      dom,\n      nodesInfo,\n      getDropAreaRect,\n      dragOverNodeId,\n      dragOverSlotParentProp,\n      dragOverZone,\n      availableDropTargetIds,\n      isEmptyPage,\n      api,\n    ],\n  );\n\n  const handleNodeDrop = React.useCallback(\n    (event: React.DragEvent<Element>) => {\n      const cursorPos = bridge?.canvasCommands.getViewCoordinates(event.clientX, event.clientY);\n\n      if (\n        !draggedNode ||\n        !cursorPos ||\n        !dragOverNodeId ||\n        !dragOverZone ||\n        !availableDropZones.includes(dragOverZone)\n      ) {\n        return;\n      }\n\n      let dragOverNode = appDom.getNode(dom, dragOverNodeId) as appDom.ElementNode;\n\n      if (!appDom.isElement(dragOverNode) && !appDom.isPage(dragOverNode)) {\n        return;\n      }\n\n      const dragOverNodeInfo = nodesInfo[dragOverNodeId];\n\n      const dragOverNodeParentProp =\n        (dragOverNode?.parentProp as appDom.ParentPropOf<\n          appDom.ElementNode<any>,\n          appDom.PageNode | appDom.ElementNode<any>\n        >) || null;\n\n      if (!dragOverNodeParentProp) {\n        return;\n      }\n\n      const dragOverNodeSlots = dragOverNodeInfo?.slots || null;\n      const dragOverSlot =\n        (dragOverNodeSlots &&\n          dragOverSlotParentProp &&\n          dragOverNodeSlots[dragOverSlotParentProp]) ||\n        null;\n\n      const isDraggingOverLayout =\n        dragOverNode && dragOverSlot\n          ? appDom.isPage(dragOverNode) || dragOverSlot.type === 'layout'\n          : false;\n      const isDraggingOverElement = appDom.isElement(dragOverNode);\n\n      appStateApi.update(\n        (draft) => {\n          let parent = appDom.getParent(draft, dragOverNode);\n\n          const originalParent = parent;\n          const originalParentInfo = parent && nodesInfo[parent.id];\n\n          const originalParentFreeSlots = originalParentInfo?.slots;\n          const originalParentFreeSlot =\n            originalParentFreeSlots &&\n            dragOverNodeParentProp &&\n            originalParentFreeSlots[dragOverNodeParentProp];\n\n          const isOriginalParentLayout =\n            originalParent && originalParentFreeSlot\n              ? appDom.isPage(originalParent) || originalParentFreeSlot.type === 'layout'\n              : false;\n\n          const isOriginalParentRow =\n            originalParent && appDom.isElement(originalParent) ? isPageRow(originalParent) : false;\n          const isOriginalParentColumn =\n            originalParent && appDom.isElement(originalParent)\n              ? isPageColumn(originalParent)\n              : false;\n\n          const isMovingNode = selectedNodeId && !newNode;\n\n          let addOrMoveNode = appDom.addNode;\n          if (isMovingNode) {\n            addOrMoveNode = appDom.moveNode;\n          }\n\n          // Drop on page or layout slot\n          if (isDraggingOverLayout && dragOverSlotParentProp) {\n            const newParentIndex =\n              dragOverZone === DROP_ZONE_TOP\n                ? appDom.getNewFirstParentIndexInNode(draft, dragOverNode, dragOverSlotParentProp)\n                : appDom.getNewLastParentIndexInNode(draft, dragOverNode, dragOverSlotParentProp);\n\n            draft = addOrMoveNode(\n              draft,\n              draggedNode,\n              dragOverNode,\n              dragOverSlotParentProp,\n              newParentIndex,\n            );\n          }\n\n          if (\n            isDraggingOverElement &&\n            parent &&\n            (appDom.isPage(parent) || appDom.isElement(parent))\n          ) {\n            const isDraggingOverRow = isDraggingOverElement && isPageRow(dragOverNode);\n\n            const isDraggingOverHorizontalContainer = dragOverSlot\n              ? isHorizontalFlow(dragOverSlot.flowDirection)\n              : false;\n            const isDraggingOverVerticalContainer = dragOverSlot\n              ? isVerticalFlow(dragOverSlot.flowDirection)\n              : false;\n\n            if (dragOverZone === DROP_ZONE_CENTER && dragOverSlotParentProp) {\n              draft = addOrMoveNode(draft, draggedNode, dragOverNode, dragOverSlotParentProp);\n            }\n\n            if ([DROP_ZONE_TOP, DROP_ZONE_BOTTOM].includes(dragOverZone)) {\n              if (!isDraggingOverVerticalContainer) {\n                const newParentIndex =\n                  dragOverZone === DROP_ZONE_TOP\n                    ? appDom.getNewParentIndexBeforeNode(\n                        draft,\n                        dragOverNode,\n                        dragOverNodeParentProp,\n                      )\n                    : appDom.getNewParentIndexAfterNode(\n                        draft,\n                        dragOverNode,\n                        dragOverNodeParentProp,\n                      );\n\n                if (isDraggingOverRow && !isPageRow(draggedNode)) {\n                  draft = addOrMoveNode(\n                    draft,\n                    draggedNode,\n                    parent,\n                    dragOverNodeParentProp,\n                    newParentIndex,\n                  );\n                }\n\n                if (isOriginalParentRow) {\n                  const columnContainer = appDom.createElement(\n                    draft,\n                    PAGE_COLUMN_COMPONENT_ID,\n                    {},\n                    {\n                      columnSize: dragOverNode.layout?.columnSize || 1,\n                    },\n                  );\n\n                  draft = appDom.setNodeNamespacedProp(\n                    draft,\n                    dragOverNode,\n                    'layout',\n                    'columnSize',\n                    1,\n                  );\n                  dragOverNode = appDom.getNode(draft, dragOverNodeId) as appDom.ElementNode;\n\n                  draft = appDom.addNode(\n                    draft,\n                    columnContainer,\n                    parent,\n                    dragOverNodeParentProp,\n                    appDom.getNewParentIndexAfterNode(draft, dragOverNode, dragOverNodeParentProp),\n                  );\n                  parent = columnContainer;\n\n                  // Move existing element inside column right away if drag over zone is bottom\n                  if (dragOverZone === DROP_ZONE_BOTTOM) {\n                    draft = appDom.moveNode(draft, dragOverNode, parent, dragOverNodeParentProp);\n                  }\n                }\n\n                if (!isDraggingOverRow || isPageRow(draggedNode)) {\n                  draft = addOrMoveNode(\n                    draft,\n                    draggedNode,\n                    parent,\n                    dragOverNodeParentProp,\n                    newParentIndex,\n                  );\n                }\n\n                // Only move existing element inside column in the end if drag over zone is top\n                if (\n                  isOriginalParentRow &&\n                  !isDraggingOverVerticalContainer &&\n                  dragOverZone === DROP_ZONE_TOP\n                ) {\n                  draft = appDom.moveNode(draft, dragOverNode, parent, dragOverNodeParentProp);\n                }\n              }\n\n              if (dragOverSlotParentProp && isDraggingOverVerticalContainer) {\n                const isDraggingOverDirectionStart =\n                  dragOverZone ===\n                  (dragOverSlot?.flowDirection === 'column' ? DROP_ZONE_TOP : DROP_ZONE_BOTTOM);\n\n                const newParentIndex = isDraggingOverDirectionStart\n                  ? appDom.getNewFirstParentIndexInNode(draft, dragOverNode, dragOverSlotParentProp)\n                  : appDom.getNewLastParentIndexInNode(draft, dragOverNode, dragOverSlotParentProp);\n\n                draft = addOrMoveNode(\n                  draft,\n                  draggedNode,\n                  dragOverNode,\n                  dragOverSlotParentProp,\n                  newParentIndex,\n                );\n              }\n            }\n\n            if ([DROP_ZONE_RIGHT, DROP_ZONE_LEFT].includes(dragOverZone)) {\n              if (!isDraggingOverHorizontalContainer) {\n                const hasNewPageRow = isOriginalParentLayout || isOriginalParentColumn;\n\n                if (hasNewPageRow) {\n                  const rowContainer = appDom.createElement(draft, PAGE_ROW_COMPONENT_ID, {\n                    justifyContent: originalParentInfo?.props.alignItems || 'start',\n                  });\n                  draft = appDom.addNode(\n                    draft,\n                    rowContainer,\n                    parent,\n                    dragOverNodeParentProp,\n                    appDom.getNewParentIndexAfterNode(draft, dragOverNode, dragOverNodeParentProp),\n                  );\n                  parent = rowContainer;\n\n                  // Move existing element inside right away if drag over zone is right\n                  if (dragOverZone === DROP_ZONE_RIGHT) {\n                    draft = appDom.moveNode(draft, dragOverNode, parent, 'children');\n                  }\n                }\n\n                const newParentIndex =\n                  dragOverZone === DROP_ZONE_RIGHT\n                    ? appDom.getNewParentIndexAfterNode(draft, dragOverNode, dragOverNodeParentProp)\n                    : appDom.getNewParentIndexBeforeNode(\n                        draft,\n                        dragOverNode,\n                        dragOverNodeParentProp,\n                      );\n\n                draft = addOrMoveNode(\n                  draft,\n                  draggedNode,\n                  parent,\n                  hasNewPageRow ? 'children' : dragOverNodeParentProp,\n                  newParentIndex,\n                );\n\n                // Only move existing element inside page/column in the end if drag over zone is left\n                if (hasNewPageRow && dragOverZone === DROP_ZONE_LEFT) {\n                  draft = appDom.moveNode(draft, dragOverNode, parent, 'children');\n                }\n              }\n\n              if (dragOverSlotParentProp && isDraggingOverHorizontalContainer) {\n                const isDraggingOverDirectionStart =\n                  dragOverZone ===\n                  (dragOverSlot?.flowDirection === 'row' ? DROP_ZONE_LEFT : DROP_ZONE_RIGHT);\n\n                const newParentIndex = isDraggingOverDirectionStart\n                  ? appDom.getNewFirstParentIndexInNode(draft, dragOverNode, dragOverSlotParentProp)\n                  : appDom.getNewLastParentIndexInNode(draft, dragOverNode, dragOverSlotParentProp);\n\n                draft = addOrMoveNode(\n                  draft,\n                  draggedNode,\n                  dragOverNode,\n                  dragOverSlotParentProp,\n                  newParentIndex,\n                );\n              }\n            }\n\n            const draggedNodeParent = isMovingNode ? appDom.getParent(draft, draggedNode) : null;\n            if (\n              draggedNode.layout?.columnSize &&\n              draggedNodeParent &&\n              originalParent &&\n              draggedNodeParent.id !== originalParent.id\n            ) {\n              draft = appDom.setNodeNamespacedProp(draft, draggedNode, 'layout', 'columnSize', 1);\n            }\n          }\n\n          if (isMovingNode) {\n            draft = deleteOrphanedLayoutNodes(dom, draft, draggedNode, dragOverNodeId);\n          }\n\n          return normalizePageRowColumnSizes(draft, pageNode);\n        },\n        currentView.kind === 'page'\n          ? { ...omit(currentView, 'pageViewTab'), selectedNodeId: newNode?.id || draggedNodeId }\n          : currentView,\n      );\n\n      api.dragEnd();\n\n      if (newNode) {\n        // Refocus on overlay so that keyboard events can keep being caught by it\n        const overlayElement = overlayRef.current;\n        invariant(overlayElement, 'Overlay ref not bound');\n        overlayElement.focus();\n      }\n    },\n    [\n      api,\n      appStateApi,\n      availableDropZones,\n      bridge?.canvasCommands,\n      currentView,\n      dom,\n      dragOverNodeId,\n      dragOverSlotParentProp,\n      dragOverZone,\n      draggedNode,\n      draggedNodeId,\n      newNode,\n      nodesInfo,\n      pageNode,\n      selectedNodeId,\n    ],\n  );\n\n  const handleNodeDragEnd = React.useCallback(\n    (event: DragEvent | React.DragEvent) => {\n      event.preventDefault();\n      api.dragEnd();\n    },\n    [api],\n  );\n\n  React.useEffect(() => {\n    const handleNodeDragOverDefault = (event: DragEvent) => {\n      // Make the whole window a drop target to prevent the return animation happening on dragend\n      event.preventDefault();\n    };\n    window.addEventListener('dragover', handleNodeDragOverDefault);\n    window.addEventListener('dragend', handleNodeDragEnd);\n    return () => {\n      window.removeEventListener('dragover', handleNodeDragOverDefault);\n      window.removeEventListener('dragend', handleNodeDragEnd);\n    };\n  }, [handleNodeDragEnd]);\n\n  const scrollSelectedNode = React.useCallback(() => {\n    if (!selectedNode) {\n      return;\n    }\n    bridge?.canvasCommands.scrollComponent(selectedNode.id as string);\n  }, [bridge?.canvasCommands, selectedNode]);\n\n  React.useEffect(() => {\n    scrollSelectedNode();\n  }, [scrollSelectedNode]);\n\n  const resizePreviewElementRef = React.useRef<HTMLDivElement | null>(null);\n\n  const overlayGridRef = React.useRef<OverlayGridHandle>({\n    gridElement: null,\n    getMinColumnWidth: () => 0,\n    getLeftColumnEdges: () => [],\n    getRightColumnEdges: () => [],\n  });\n\n  const handleEdgeDragOver = React.useCallback(\n    (event: React.MouseEvent<Element>) => {\n      if (!draggedNode) {\n        return;\n      }\n\n      const resizePreviewElement = resizePreviewElementRef.current;\n      const draggedNodeInfo = nodesInfo[draggedNode.id];\n      const draggedNodeRect = draggedNodeInfo?.rect;\n\n      const parent = draggedNode && appDom.getParent(dom, draggedNode);\n\n      const parentInfo = parent ? nodesInfo[parent.id] : null;\n      const parentRect = parentInfo?.rect;\n\n      const cursorPos = bridge?.canvasCommands.getViewCoordinates(event.clientX, event.clientY);\n\n      const previousSibling = appDom.getSiblingBeforeNode(dom, draggedNode, 'children');\n      const previousSiblingInfo = previousSibling && nodesInfo[previousSibling.id];\n      const previousSiblingRect = previousSiblingInfo?.rect;\n\n      if (draggedNodeRect && parentRect && resizePreviewElement && cursorPos) {\n        if (draggedEdge === RECTANGLE_EDGE_LEFT || draggedEdge === RECTANGLE_EDGE_RIGHT) {\n          let snappedToGridCursorRelativePosX = cursorPos.x - draggedNodeRect.x;\n\n          const activeSnapGridColumnEdges =\n            draggedEdge === RECTANGLE_EDGE_LEFT\n              ? overlayGridRef.current.getLeftColumnEdges()\n              : overlayGridRef.current.getRightColumnEdges();\n\n          const minGridColumnWidth = overlayGridRef.current.getMinColumnWidth();\n\n          for (const gridColumnEdge of activeSnapGridColumnEdges) {\n            if (Math.abs(gridColumnEdge - cursorPos.x) <= minGridColumnWidth) {\n              snappedToGridCursorRelativePosX = gridColumnEdge - draggedNodeRect.x;\n            }\n          }\n\n          if (\n            draggedEdge === RECTANGLE_EDGE_LEFT &&\n            cursorPos.x >\n              Math.max(parentRect.x, previousSiblingRect?.x || 0) + minGridColumnWidth &&\n            cursorPos.x < draggedNodeRect.x + draggedNodeRect.width - minGridColumnWidth\n          ) {\n            const updatedTransformScale =\n              1 - snappedToGridCursorRelativePosX / draggedNodeRect.width;\n\n            resizePreviewElement.style.transformOrigin = '100% 50%';\n            resizePreviewElement.style.transform = `scaleX(${updatedTransformScale})`;\n          }\n\n          const nextSibling = appDom.getSiblingAfterNode(dom, draggedNode, 'children');\n          const nextSiblingInfo = nextSibling && nodesInfo[nextSibling.id];\n          const nextSiblingRect = nextSiblingInfo?.rect;\n\n          if (\n            draggedEdge === RECTANGLE_EDGE_RIGHT &&\n            cursorPos.x > draggedNodeRect.x + minGridColumnWidth &&\n            cursorPos.x <\n              Math.min(\n                parentRect.x + parentRect.width,\n                nextSiblingRect ? nextSiblingRect.x + nextSiblingRect.width : 0,\n              ) -\n                minGridColumnWidth\n          ) {\n            const updatedTransformScale = snappedToGridCursorRelativePosX / draggedNodeRect.width;\n\n            resizePreviewElement.style.transformOrigin = '0 50%';\n            resizePreviewElement.style.transform = `scaleX(${updatedTransformScale})`;\n          }\n        }\n\n        const defaultMinimumResizableHeight = 16;\n\n        const minimumVerticalResizeHeight =\n          draggedNodeInfo.componentConfig?.minimumLayoutHeight ?? defaultMinimumResizableHeight;\n\n        const previousSiblingMinimumVerticalResizeHeight =\n          previousSiblingInfo?.componentConfig?.minimumLayoutHeight ??\n          defaultMinimumResizableHeight;\n\n        if (\n          draggedEdge === RECTANGLE_EDGE_BOTTOM &&\n          cursorPos.y > draggedNodeRect.y + minimumVerticalResizeHeight\n        ) {\n          const snappedToGridCursorRelativePosY =\n            Math.ceil((cursorPos.y - draggedNodeRect.y) / VERTICAL_RESIZE_SNAP_UNITS) *\n            VERTICAL_RESIZE_SNAP_UNITS;\n\n          const updatedTransformScale = snappedToGridCursorRelativePosY / draggedNodeRect.height;\n\n          resizePreviewElement.style.transformOrigin = '50% 0';\n          resizePreviewElement.style.transform = `scaleY(${updatedTransformScale})`;\n        }\n\n        if (\n          draggedEdge === RECTANGLE_EDGE_TOP &&\n          cursorPos.y < draggedNodeRect.y + draggedNodeRect.height - minimumVerticalResizeHeight &&\n          (!previousSiblingRect ||\n            cursorPos.y >\n              draggedNodeRect.y -\n                previousSiblingRect.height +\n                previousSiblingMinimumVerticalResizeHeight)\n        ) {\n          const snappedToGridCursorRelativePosY =\n            Math.ceil(\n              (draggedNodeRect.y + draggedNodeRect.height - cursorPos.y) /\n                VERTICAL_RESIZE_SNAP_UNITS,\n            ) * VERTICAL_RESIZE_SNAP_UNITS;\n\n          const updatedTransformScale = snappedToGridCursorRelativePosY / draggedNodeRect.height;\n\n          resizePreviewElement.style.transformOrigin = '50% 100%';\n          resizePreviewElement.style.transform = `scaleY(${updatedTransformScale})`;\n        }\n      }\n    },\n    [bridge, dom, draggedEdge, draggedNode, nodesInfo],\n  );\n\n  const handleEdgeDragEnd = React.useCallback(\n    (event: React.MouseEvent<Element>) => {\n      event.preventDefault();\n\n      if (!draggedNode) {\n        return;\n      }\n\n      const draggedNodeInfo = nodesInfo[draggedNode.id];\n      const draggedNodeRect = draggedNodeInfo?.rect;\n\n      const resizePreviewElement = resizePreviewElementRef.current;\n      const resizePreviewRect = resizePreviewElement?.getBoundingClientRect();\n\n      if (draggedNodeRect && resizePreviewRect) {\n        domApi.update((draft) => {\n          const previousSibling = appDom.getSiblingBeforeNode(draft, draggedNode, 'children');\n\n          let previousSiblingInfo = null;\n          let previousSiblingRect = null;\n          if (previousSibling) {\n            previousSiblingInfo = nodesInfo[previousSibling.id];\n            previousSiblingRect = previousSiblingInfo?.rect;\n          }\n\n          if (draggedEdge === RECTANGLE_EDGE_LEFT || draggedEdge === RECTANGLE_EDGE_RIGHT) {\n            if (draggedEdge === RECTANGLE_EDGE_LEFT) {\n              if (previousSibling && previousSiblingRect) {\n                const totalResizedColumnsSize =\n                  (draggedNode.layout?.columnSize || 1) + (previousSibling.layout?.columnSize || 1);\n                const totalResizedColumnsWidth = draggedNodeRect.width + previousSiblingRect.width;\n\n                const updatedDraggedNodeColumnSize =\n                  (resizePreviewRect.width / totalResizedColumnsWidth) * totalResizedColumnsSize;\n                const updatedPreviousSiblingColumnSize =\n                  totalResizedColumnsSize - updatedDraggedNodeColumnSize;\n\n                draft = appDom.setNodeNamespacedProp(\n                  draft,\n                  draggedNode,\n                  'layout',\n                  'columnSize',\n                  updatedDraggedNodeColumnSize,\n                );\n                draft = appDom.setNodeNamespacedProp(\n                  draft,\n                  previousSibling,\n                  'layout',\n                  'columnSize',\n                  updatedPreviousSiblingColumnSize,\n                );\n              }\n            }\n            if (draggedEdge === RECTANGLE_EDGE_RIGHT) {\n              const nextSibling = appDom.getSiblingAfterNode(draft, draggedNode, 'children');\n\n              if (nextSibling) {\n                const nextSiblingInfo = nodesInfo[nextSibling.id];\n                const nextSiblingRect = nextSiblingInfo?.rect;\n\n                if (nextSiblingRect) {\n                  const totalResizedColumnsSize =\n                    (draggedNode.layout?.columnSize || 1) + (nextSibling.layout?.columnSize || 1);\n                  const totalResizedColumnsWidth = draggedNodeRect.width + nextSiblingRect.width;\n\n                  const updatedDraggedNodeColumnSize =\n                    (resizePreviewRect.width / totalResizedColumnsWidth) * totalResizedColumnsSize;\n                  const updatedNextSiblingColumnSize =\n                    totalResizedColumnsSize - updatedDraggedNodeColumnSize;\n\n                  draft = appDom.setNodeNamespacedProp(\n                    draft,\n                    draggedNode,\n                    'layout',\n                    'columnSize',\n                    updatedDraggedNodeColumnSize,\n                  );\n                  draft = appDom.setNodeNamespacedProp(\n                    draft,\n                    nextSibling,\n                    'layout',\n                    'columnSize',\n                    updatedNextSiblingColumnSize,\n                  );\n                }\n              }\n            }\n          }\n\n          if (draggedEdge === RECTANGLE_EDGE_BOTTOM || draggedEdge === RECTANGLE_EDGE_TOP) {\n            const isValidTopResize =\n              draggedEdge === RECTANGLE_EDGE_TOP &&\n              previousSibling &&\n              previousSiblingRect &&\n              !isPageRow(previousSibling);\n\n            if (draggedEdge === RECTANGLE_EDGE_BOTTOM || isValidTopResize) {\n              draft = appDom.setNodeNamespacedProp(\n                draft,\n                draggedNode,\n                'layout',\n                'height',\n                resizePreviewRect.height,\n              );\n            }\n\n            if (isValidTopResize && previousSiblingRect) {\n              draft = appDom.setNodeNamespacedProp(\n                draft,\n                previousSibling,\n                'layout',\n                'height',\n                previousSiblingRect.height + (draggedNodeRect.height - resizePreviewRect.height),\n              );\n            }\n          }\n\n          return draft;\n        });\n      }\n\n      api.dragEnd();\n    },\n    [api, domApi, draggedEdge, draggedNode, nodesInfo],\n  );\n\n  return (\n    <OverlayRoot\n      data-testid=\"page-overlay\"\n      ref={overlayRef}\n      className={clsx({\n        [overlayClasses.nodeDrag]: isDraggingOver,\n        [overlayClasses.resizeHorizontal]:\n          draggedEdge === RECTANGLE_EDGE_LEFT || draggedEdge === RECTANGLE_EDGE_RIGHT,\n        [overlayClasses.resizeVertical]:\n          draggedEdge === RECTANGLE_EDGE_TOP || draggedEdge === RECTANGLE_EDGE_BOTTOM,\n      })}\n      // Need this to be able to capture key events\n      tabIndex={0}\n      onKeyDown={handleKeyDown}\n      {...(draggedEdge\n        ? {\n            onMouseMove: handleEdgeDragOver,\n            onMouseUp: handleEdgeDragEnd,\n          }\n        : {\n            onDragOver: handleNodeDragOver,\n            onDrop: handleNodeDrop,\n            onDragEnd: handleNodeDragEnd,\n            // This component has `pointer-events: none`, but we will selectively enable pointer-events\n            // for its children. We can still capture the click gobally\n            onMouseUp: handleNodeMouseUp,\n          })}\n    >\n      {pageNodes.map((node) => {\n        const nodeInfo = nodesInfo[node.id];\n        const nodeRect = nodeInfo?.rect || null;\n\n        const parent = appDom.getParent(dom, node);\n\n        const isPageNode = appDom.isPage(node);\n        const isElementNode = appDom.isElement(node);\n\n        const isPageRowChild = parent ? appDom.isElement(parent) && isPageRow(parent) : false;\n        const isPageColumnChild = parent ? appDom.isElement(parent) && isPageColumn(parent) : false;\n\n        // @TODO: Improve solution for resizing from top, it's still not a great UX\n        // const nodeParentProp = node.parentProp;\n        // const isFirstChild =\n        //   parent && appDom.isElement(parent) && nodeParentProp\n        //     ? appDom.getNodeFirstChild(dom, parent, nodeParentProp)?.id === node.id\n        //     : false;\n\n        const isSelected = selectedNode && !newNode ? selectedNode.id === node.id : false;\n        const isHovered = hoveredNodeId === node.id;\n\n        const isHorizontallyResizable = isPageRowChild || isPageColumnChild;\n\n        const nodeComponentId = isElementNode ? getElementNodeComponentId(node) : null;\n\n        // @TODO: Enable vertical resizing for all component types when there is a better solution for adjusting size of other elements in same row after resizing\n        const isVerticallyResizable =\n          isElementNode &&\n          !isPageRow(node) &&\n          !isPageColumn(node) &&\n          (nodeComponentId === 'Chart' ||\n            nodeComponentId === 'DataGrid' ||\n            nodeComponentId === 'Spacer');\n\n        const isResizing = Boolean(draggedEdge);\n        const isResizingNode = isResizing && node.id === draggedNodeId;\n\n        const isInteractive = interactiveNodes.has(node.id) && !isResizing && !isDraggingOver;\n\n        if (!nodeRect) {\n          return null;\n        }\n\n        return (\n          <React.Fragment key={node.id}>\n            {!isPageNode ? (\n              <NodeHud\n                node={node}\n                rect={nodeRect}\n                selectedNodeRect={selectedRect}\n                isSelected={isSelected}\n                isInteractive={isInteractive}\n                onNodeDragStart={handleNodeDragStart(node as appDom.ElementNode)}\n                onDuplicate={handleNodeDuplicate(node as appDom.ElementNode)}\n                draggableEdges={[\n                  ...(isHorizontallyResizable\n                    ? getNodeDraggableHorizontalEdges(parent && isPageColumnChild ? parent : node)\n                    : []),\n                  ...(isVerticallyResizable\n                    ? [\n                        RECTANGLE_EDGE_BOTTOM as RectangleEdge,\n                        // @TODO: Improve solution for resizing from top, it's still not a great UX\n                        // ...(!isFirstChild ? [RECTANGLE_EDGE_TOP as RectangleEdge] : []),\n                      ]\n                    : []),\n                ]}\n                onEdgeDragStart={isSelected ? handleEdgeDragStart(node) : undefined}\n                onDelete={handleNodeDelete(node.id)}\n                isResizing={isResizingNode}\n                resizePreviewElementRef={resizePreviewElementRef}\n                isHovered={isHovered}\n                isHoverable={!isResizing && !isDraggingOver}\n                isOutlineVisible={isDraggingOver}\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      })}\n      {Object.entries(dropAreaRects).map(([dropAreaId, dropAreaRect]) => {\n        const dropAreaNodeId = getDropAreaNodeId(dropAreaId);\n        const dropAreaParentProp = getDropAreaParentProp(dropAreaId);\n\n        const dropAreaNode = appDom.getNode(dom, dropAreaNodeId);\n\n        return (\n          <NodeDropArea\n            key={dropAreaId}\n            node={dropAreaNode}\n            parentProp={dropAreaParentProp}\n            dropAreaRect={dropAreaRect}\n            availableDropZones={availableDropZones}\n          />\n        );\n      })}\n      {/* \n            This overlay allows passing through pointer-events through a pinhole\n            This allows interactivity on the selected element only, while maintaining\n            a reliable click target for the rest of the page \n      */}\n      <PinholeOverlay className={overlayClasses.hudOverlay} pinhole={selectedRect} />\n      {draggedEdge ? <OverlayGrid ref={overlayGridRef} /> : null}\n    </OverlayRoot>\n  );\n}\n","import * as React from 'react';\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContentCopy from '@mui/icons-material/ContentCopy';\nimport { IconButton, styled, Tooltip } from '@mui/material';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport {\n  absolutePositionCss,\n  Rectangle,\n  RectangleEdge,\n  RECTANGLE_EDGE_BOTTOM,\n  RECTANGLE_EDGE_LEFT,\n  RECTANGLE_EDGE_RIGHT,\n  RECTANGLE_EDGE_TOP,\n} from '../../../../utils/geometry';\n\nconst HINT_POSITION_TOP = 'top';\nconst HINT_POSITION_BOTTOM = 'bottom';\n\nconst HUD_HEIGHT = 30; // px\n\ntype HintPosition = typeof HINT_POSITION_TOP | typeof HINT_POSITION_BOTTOM;\n\nfunction stopPropagationHandler(event: React.SyntheticEvent) {\n  event.stopPropagation();\n}\n\nconst nodeHudClasses = {\n  selected: 'NodeHud_Selected',\n  hovered: 'NodeHud_Hovered',\n  selectionHint: 'NodeHud_SelectionHint',\n};\n\nconst NodeHudWrapper = styled('div', {\n  shouldForwardProp: (prop) => prop !== 'isOutlineVisible' && prop !== 'isHoverable',\n})<{\n  isOutlineVisible: boolean;\n  isHoverable: boolean;\n}>(({ isOutlineVisible, isHoverable, theme }) => {\n  const defaultOutline = `1px dotted ${\n    isOutlineVisible ? theme.palette.primary[500] : 'transparent'\n  }`;\n\n  return {\n    // capture mouse events\n    pointerEvents: 'initial',\n    position: 'absolute',\n    userSelect: 'none',\n    outline: defaultOutline,\n    zIndex: 80,\n    [`&:hover, &.${nodeHudClasses.hovered}`]: {\n      outline: `2px dashed ${isHoverable ? theme.palette.primary[500] : defaultOutline}`,\n    },\n    [`.${nodeHudClasses.selected}`]: {\n      position: 'absolute',\n      height: '100%',\n      width: '100%',\n      outline: `2px solid ${theme.palette.primary[500]}`,\n      left: 0,\n      top: 0,\n      zIndex: 80,\n    },\n  };\n});\n\nconst SelectionHintWrapper = styled('div', {\n  shouldForwardProp: (prop) => prop !== 'hintPosition',\n})<{\n  hintPosition: HintPosition;\n}>(({ hintPosition, theme }) => ({\n  position: 'absolute',\n  [`.${nodeHudClasses.selectionHint}`]: {\n    // capture mouse events\n    pointerEvents: 'initial',\n    cursor: 'grab',\n    display: 'flex',\n    position: 'absolute',\n    alignItems: 'center',\n    right: -1,\n    background: theme.palette.primary[500],\n    color: 'white',\n    fontSize: 11,\n    padding: `0 0 0 8px`,\n    height: HUD_HEIGHT,\n    zIndex: 1000,\n    ...(hintPosition === HINT_POSITION_TOP\n      ? { top: 0, transform: 'translate(0, -100%)' }\n      : {\n          bottom: 0,\n          transform: 'translate(0, 100%)',\n        }),\n  },\n}));\n\nconst DraggableEdgeWrapper = styled('div')({\n  userSelect: 'none',\n  position: 'absolute',\n  zIndex: 90,\n});\n\nconst DraggableEdge = styled('div', {\n  shouldForwardProp: (prop) => prop !== 'edge',\n})<{\n  edge: RectangleEdge;\n}>(({ edge }) => {\n  let dynamicStyles = {};\n  if (edge === RECTANGLE_EDGE_RIGHT) {\n    dynamicStyles = {\n      cursor: 'ew-resize',\n      top: 0,\n      right: -10,\n      height: '100%',\n      width: 22,\n    };\n  }\n  if (edge === RECTANGLE_EDGE_LEFT) {\n    dynamicStyles = {\n      cursor: 'ew-resize',\n      top: 0,\n      left: -10,\n      height: '100%',\n      width: 22,\n    };\n  }\n  if (edge === RECTANGLE_EDGE_BOTTOM) {\n    dynamicStyles = {\n      cursor: 'ns-resize',\n      bottom: -10,\n      height: 22,\n      left: 0,\n      width: '100%',\n    };\n  }\n  if (edge === RECTANGLE_EDGE_TOP) {\n    dynamicStyles = {\n      cursor: 'ns-resize',\n      top: -10,\n      height: 22,\n      left: 0,\n      width: '100%',\n    };\n  }\n\n  return {\n    ...dynamicStyles,\n    position: 'absolute',\n    pointerEvents: 'initial',\n    zIndex: 90,\n  };\n});\n\nconst ResizePreview = styled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.primary[500],\n  opacity: 0.2,\n  zIndex: 90,\n}));\n\ninterface NodeHudProps {\n  node: appDom.AppDomNode;\n  rect: Rectangle;\n  selectedNodeRect: Rectangle | null;\n  isSelected?: boolean;\n  isInteractive?: boolean;\n  onNodeDragStart?: React.DragEventHandler<HTMLElement>;\n  draggableEdges?: RectangleEdge[];\n  onEdgeDragStart?: (edge: RectangleEdge) => React.MouseEventHandler<HTMLElement>;\n  onDelete?: React.MouseEventHandler<HTMLElement>;\n  isResizing?: boolean;\n  resizePreviewElementRef: React.MutableRefObject<HTMLDivElement | null>;\n  onDuplicate?: (event: React.MouseEvent) => void;\n  isOutlineVisible?: boolean;\n  isHoverable?: boolean;\n  isHovered?: boolean;\n}\n\nexport default function NodeHud({\n  node,\n  rect,\n  selectedNodeRect,\n  isSelected,\n  isInteractive = false,\n  onNodeDragStart,\n  draggableEdges = [],\n  onEdgeDragStart,\n  onDelete,\n  isResizing = false,\n  resizePreviewElementRef,\n  onDuplicate,\n  isOutlineVisible = false,\n  isHoverable = true,\n  isHovered = false,\n}: NodeHudProps) {\n  let hintPosition: HintPosition = HINT_POSITION_BOTTOM;\n  if (rect.y > HUD_HEIGHT) {\n    hintPosition = HINT_POSITION_TOP;\n  }\n\n  const interactiveNodeClipPath = React.useMemo(\n    () =>\n      isInteractive && selectedNodeRect\n        ? `\n            polygon(\n              -100% -100%, \n              200% -100%,\n              200% 200%,\n              -100% 200%,\n              -100% ${selectedNodeRect.y - rect.y}px,\n              ${selectedNodeRect.x - rect.x}px ${selectedNodeRect.y - rect.y}px, \n              ${selectedNodeRect.x - rect.x}px \n              ${selectedNodeRect.y + selectedNodeRect.height - rect.y}px,\n              ${selectedNodeRect.x + selectedNodeRect.width - rect.x}px\n              ${selectedNodeRect.y + selectedNodeRect.height - rect.y}px, \n              ${selectedNodeRect.x + selectedNodeRect.width - rect.x}px \n              ${selectedNodeRect.y - rect.y}px,\n              -100% ${selectedNodeRect.y - rect.y}px\n          )`\n        : '',\n    [isInteractive, rect, selectedNodeRect],\n  );\n\n  return (\n    <React.Fragment>\n      <NodeHudWrapper\n        data-node-id={node.id}\n        style={{\n          ...absolutePositionCss(rect),\n          ...(interactiveNodeClipPath\n            ? {\n                clipPath: interactiveNodeClipPath,\n              }\n            : {}),\n        }}\n        className={isHovered ? nodeHudClasses.hovered : ''}\n        isOutlineVisible={isOutlineVisible}\n        isHoverable={isHoverable}\n      >\n        {isSelected ? <span className={nodeHudClasses.selected} /> : null}\n        {isResizing ? (\n          <ResizePreview ref={resizePreviewElementRef} style={absolutePositionCss(rect)} />\n        ) : null}\n      </NodeHudWrapper>\n      {isSelected ? (\n        <SelectionHintWrapper\n          style={absolutePositionCss(rect)}\n          hintPosition={hintPosition}\n          data-testid=\"node-hud-selection\"\n        >\n          <div\n            draggable\n            data-testid=\"node-hud-tag\"\n            className={nodeHudClasses.selectionHint}\n            onDragStart={onNodeDragStart}\n            role=\"presentation\"\n            onClick={stopPropagationHandler}\n            onMouseDown={stopPropagationHandler}\n            onMouseUp={stopPropagationHandler}\n          >\n            {node.name}\n            <DragIndicatorIcon color=\"inherit\" />\n            <IconButton aria-label=\"Duplicate\" color=\"inherit\" onMouseUp={onDuplicate}>\n              <Tooltip title=\"Duplicate\" enterDelay={400}>\n                <ContentCopy color=\"inherit\" />\n              </Tooltip>\n            </IconButton>\n            <IconButton aria-label=\"Remove\" color=\"inherit\" onMouseUp={onDelete}>\n              <Tooltip title=\"Remove\" enterDelay={400}>\n                <DeleteIcon color=\"inherit\" />\n              </Tooltip>\n            </IconButton>\n          </div>\n        </SelectionHintWrapper>\n      ) : null}\n      {onEdgeDragStart ? (\n        <DraggableEdgeWrapper style={absolutePositionCss(rect)}>\n          {draggableEdges.map((edge) => (\n            <DraggableEdge\n              key={`${node.id}-edge-${edge}`}\n              edge={edge}\n              onMouseDown={onEdgeDragStart(edge)}\n            />\n          ))}\n        </DraggableEdgeWrapper>\n      ) : null}\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material';\nimport Grid from '@mui/material/Grid2';\nimport invariant from 'invariant';\nimport { usePageEditorState } from '../PageEditorProvider';\nimport { useAppState } from '../../../AppState';\nimport { createToolpadAppTheme } from '../../../../runtime/AppThemeProvider';\nimport { absolutePositionCss } from '../../../../utils/geometry';\n\nexport interface OverlayGridHandle {\n  gridElement: HTMLDivElement | null;\n  getMinColumnWidth: () => number;\n  getLeftColumnEdges: () => number[];\n  getRightColumnEdges: () => number[];\n}\n\nexport const GRID_NUMBER_OF_COLUMNS = 12;\nexport const GRID_COLUMN_GAP = 1;\n\nconst GridContainer = styled('div')({\n  pointerEvents: 'none',\n  position: 'absolute',\n  zIndex: 1,\n});\n\nconst StyledGrid = styled(Grid)({\n  height: '100%',\n});\n\nconst StyledGridColumn = styled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.grey[400],\n  height: '100%',\n  opacity: 0.2,\n}));\n\nexport const OverlayGrid = React.forwardRef<OverlayGridHandle>(\n  function OverlayGrid(props, forwardedRef) {\n    const gridRef = React.useRef<HTMLDivElement | null>(null);\n\n    const { dom } = useAppState();\n    const { viewState, nodeId: pageNodeId } = usePageEditorState();\n\n    const { nodes: nodesInfo } = viewState;\n\n    const pageNode = nodesInfo[pageNodeId];\n\n    const appTheme = React.useMemo(() => createToolpadAppTheme(dom), [dom]);\n\n    React.useImperativeHandle(forwardedRef, () => {\n      const gridElement = gridRef.current;\n      invariant(gridElement, 'Overlay grid ref not bound');\n\n      let columnEdges: number[] = [];\n      const gridColumnContainers = Array.from(gridElement.children);\n      const gridColumnEdges = gridColumnContainers.map((container: Element) => {\n        const containerRect = container.firstElementChild?.getBoundingClientRect();\n        return containerRect\n          ? [Math.round(containerRect.x), Math.round(containerRect.x + containerRect.width)]\n          : [];\n      });\n      columnEdges = gridColumnEdges.flat();\n\n      return {\n        gridElement: gridRef.current,\n        getMinColumnWidth() {\n          return columnEdges[1] - columnEdges[0];\n        },\n        getLeftColumnEdges() {\n          return columnEdges.filter((column, index) => index % 2 === 0);\n        },\n        getRightColumnEdges() {\n          return columnEdges.filter((column, index) => index % 2 === 1);\n        },\n      };\n    }, []);\n\n    const pageChildrenSlotRect = pageNode?.slots?.children?.rect;\n\n    return pageChildrenSlotRect ? (\n      <GridContainer style={{ ...absolutePositionCss(pageChildrenSlotRect), height: '100%' }}>\n        <StyledGrid ref={gridRef} container columnSpacing={appTheme.spacing(GRID_COLUMN_GAP)}>\n          {[...Array(GRID_NUMBER_OF_COLUMNS)].map((column, index) => (\n            <Grid key={index} size={{ xs: 1 }}>\n              <StyledGridColumn />\n            </Grid>\n          ))}\n        </StyledGrid>\n      </GridContainer>\n    ) : null;\n  },\n);\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material';\nimport Typography from '@mui/material/Typography';\n\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { FlowDirection } from '../../../../types';\nimport {\n  absolutePositionCss,\n  isHorizontalFlow,\n  isVerticalFlow,\n  Rectangle,\n} from '../../../../utils/geometry';\n\nimport { useAppState } from '../../../AppState';\n\nimport {\n  DROP_ZONE_CENTER,\n  DROP_ZONE_BOTTOM,\n  DROP_ZONE_LEFT,\n  DROP_ZONE_RIGHT,\n  DROP_ZONE_TOP,\n  DropZone,\n  usePageEditorState,\n} from '../PageEditorProvider';\nimport { isPageRow } from '../../../../runtime/toolpadComponents';\n\nconst dropAreaHighlightClasses = {\n  highlightedTop: 'DropArea_HighlightedTop',\n  highlightedRight: 'DropArea_HighlightedRight',\n  highlightedBottom: 'DropArea_HighlightedBottom',\n  highlightedLeft: 'DropArea_HighlightedLeft',\n  highlightedCenter: 'DropArea_HighlightedCenter',\n};\n\nconst StyledNodeDropArea = styled('div', {\n  shouldForwardProp: (prop) => prop !== 'highlightRelativeRect',\n})<{\n  highlightRelativeRect?: Partial<Rectangle>;\n}>(({ highlightRelativeRect = {}, theme }) => {\n  const {\n    x: highlightRelativeX = 0,\n    y: highlightRelativeY = 0,\n    width: highlightWidth = '100%',\n    height: highlightHeight = '100%',\n  } = highlightRelativeRect;\n\n  return {\n    pointerEvents: 'none',\n    position: 'absolute',\n    [`&.${dropAreaHighlightClasses.highlightedTop}`]: {\n      '&::after': {\n        backgroundColor: theme.palette.primary[500],\n        content: \"''\",\n        position: 'absolute',\n        height: 2,\n        width: highlightWidth,\n        top: -1,\n        left: highlightRelativeX,\n      },\n    },\n    [`&.${dropAreaHighlightClasses.highlightedRight}`]: {\n      '&::after': {\n        backgroundColor: theme.palette.primary[500],\n        content: \"''\",\n        position: 'absolute',\n        height: highlightHeight,\n        width: 2,\n        top: highlightRelativeY,\n        right: -1,\n      },\n    },\n    [`&.${dropAreaHighlightClasses.highlightedBottom}`]: {\n      '&::after': {\n        backgroundColor: theme.palette.primary[500],\n        content: \"''\",\n        position: 'absolute',\n        height: 2,\n        width: highlightWidth,\n        bottom: -1,\n        left: highlightRelativeX,\n      },\n    },\n    [`&.${dropAreaHighlightClasses.highlightedLeft}`]: {\n      '&::after': {\n        backgroundColor: theme.palette.primary[500],\n        content: \"''\",\n        position: 'absolute',\n        height: highlightHeight,\n        width: 2,\n        left: -1,\n        top: highlightRelativeY,\n      },\n    },\n    [`&.${dropAreaHighlightClasses.highlightedCenter}`]: {\n      border: `2px solid ${theme.palette.primary[500]}`,\n    },\n  };\n});\n\nconst EmptySlot = styled('div')(({ theme }) => ({\n  alignItems: 'center',\n  border: `2px dotted ${theme.palette.primary[500]}`,\n  color: theme.palette.primary[500],\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  position: 'absolute',\n  textAlign: 'center',\n}));\n\nfunction getChildNodeHighlightedZone(parentFlowDirection: FlowDirection): DropZone | null {\n  switch (parentFlowDirection) {\n    case 'row':\n      return DROP_ZONE_RIGHT;\n    case 'column':\n      return DROP_ZONE_BOTTOM;\n    case 'row-reverse':\n      return DROP_ZONE_LEFT;\n    case 'column-reverse':\n      return DROP_ZONE_TOP;\n    default:\n      return null;\n  }\n}\n\nfunction getHighlightedZoneOverlayClass(\n  highlightedZone: DropZone,\n): (typeof dropAreaHighlightClasses)[keyof typeof dropAreaHighlightClasses] | null {\n  switch (highlightedZone) {\n    case DROP_ZONE_TOP:\n      return dropAreaHighlightClasses.highlightedTop;\n    case DROP_ZONE_RIGHT:\n      return dropAreaHighlightClasses.highlightedRight;\n    case DROP_ZONE_BOTTOM:\n      return dropAreaHighlightClasses.highlightedBottom;\n    case DROP_ZONE_LEFT:\n      return dropAreaHighlightClasses.highlightedLeft;\n    case DROP_ZONE_CENTER:\n      return dropAreaHighlightClasses.highlightedCenter;\n    default:\n      return null;\n  }\n}\n\ninterface NodeDropAreaProps {\n  node: appDom.AppDomNode;\n  parentProp: string | null;\n  dropAreaRect: Rectangle;\n  availableDropZones: DropZone[];\n}\n\nexport default function NodeDropArea({\n  node,\n  parentProp,\n  dropAreaRect,\n  availableDropZones,\n}: NodeDropAreaProps) {\n  const { dom } = useAppState();\n  const { dragOverNodeId, dragOverSlotParentProp, dragOverZone, viewState } = usePageEditorState();\n\n  const { nodes: nodesInfo } = viewState;\n\n  const dropAreaNodeInfo = nodesInfo[node.id];\n  const dropAreaNodeRect = dropAreaNodeInfo?.rect || null;\n  const dropAreaNodeSlots = dropAreaNodeInfo?.slots;\n\n  const slotRect = (dropAreaNodeSlots && parentProp && dropAreaNodeSlots[parentProp]?.rect) || null;\n\n  const dropAreaNodeParent = appDom.getParent(dom, node);\n  const dropAreaNodeParentInfo = dropAreaNodeParent && nodesInfo[dropAreaNodeParent.id];\n  const dropAreaNodeParentRect = dropAreaNodeParentInfo?.rect || null;\n  const dropAreaNodeParentSlots = dropAreaNodeParentInfo?.slots;\n  const dropAreaNodeParentSlot =\n    dropAreaNodeParentSlots && parentProp && dropAreaNodeParentSlots[parentProp];\n\n  const isPageNode = appDom.isPage(node);\n  const isPageChild = dropAreaNodeParent ? appDom.isPage(dropAreaNodeParent) : false;\n\n  const isPageRowNode = appDom.isElement(node) && isPageRow(node);\n\n  const isPageChildElement = isPageChild && appDom.isElement(node) && !isPageRow(node);\n  const isPageRowChild = dropAreaNodeParent\n    ? appDom.isElement(dropAreaNodeParent) && isPageRow(dropAreaNodeParent)\n    : false;\n\n  const dropAreaNodeChildNodes = React.useMemo(\n    () => appDom.getChildNodes(dom, node) as appDom.NodeChildren<appDom.ElementNode>,\n    [dom, node],\n  );\n\n  const dropAreaSlotChildNodes = parentProp ? dropAreaNodeChildNodes[parentProp] || [] : [];\n  const isEmptySlot = dropAreaSlotChildNodes.length === 0;\n\n  const highlightedZone = React.useMemo((): DropZone | null => {\n    if (dragOverZone && !availableDropZones.includes(dragOverZone)) {\n      return null;\n    }\n    if (isPageNode && parentProp && !isEmptySlot) {\n      return null;\n    }\n\n    const dropAreaParentParent = dropAreaNodeParent && appDom.getParent(dom, dropAreaNodeParent);\n\n    const pageAwareParentProp = isPageChild ? 'children' : parentProp;\n\n    if (dragOverZone === DROP_ZONE_TOP && !parentProp) {\n      // Is dragging over page top and is slot\n      if (\n        dropAreaNodeParent &&\n        dropAreaNodeParent.id === dragOverNodeId &&\n        appDom.isPage(dropAreaNodeParent) &&\n        pageAwareParentProp\n      ) {\n        const pageFirstChild = appDom.getNodeFirstChild(dom, dropAreaNodeParent, 'children');\n\n        const isPageFirstChild = pageFirstChild ? node.id === pageFirstChild.id : false;\n\n        return isPageFirstChild ? DROP_ZONE_TOP : null;\n      }\n    }\n\n    if (dragOverZone === DROP_ZONE_LEFT || dragOverZone === DROP_ZONE_RIGHT) {\n      // Is dragging beyond the left or right of parent row slot, and parent row is a child of the page\n      if (\n        dropAreaNodeParent &&\n        dropAreaParentParent &&\n        dropAreaNodeParent.id === dragOverNodeId &&\n        appDom.isElement(dropAreaNodeParent) &&\n        isPageRowChild &&\n        appDom.isPage(dropAreaParentParent) &&\n        !parentProp\n      ) {\n        const parentHighlightedChild =\n          dragOverZone === DROP_ZONE_LEFT\n            ? appDom.getNodeFirstChild(dom, dropAreaNodeParent, 'children')\n            : appDom.getNodeLastChild(dom, dropAreaNodeParent, 'children');\n\n        const isParentHighlightedChild = parentHighlightedChild\n          ? node.id === parentHighlightedChild.id\n          : false;\n\n        return isParentHighlightedChild ? dragOverZone : null;\n      }\n\n      // Is dragging over left, is page row and child of the page\n      if (dropAreaNodeParent && isPageRowNode && isPageChild) {\n        return null;\n      }\n    }\n\n    if (dragOverZone === DROP_ZONE_CENTER) {\n      // Is dragging over parent element center\n      if (\n        dropAreaNodeParent &&\n        dropAreaNodeParent.id === dragOverNodeId &&\n        (pageAwareParentProp === dragOverSlotParentProp || !parentProp)\n      ) {\n        const parentLastChild =\n          appDom.isPage(dropAreaNodeParent) || appDom.isElement(dropAreaNodeParent)\n            ? appDom.getNodeLastChild(dom, dropAreaNodeParent, pageAwareParentProp || 'children')\n            : null;\n\n        const isParentLastChild = parentLastChild ? node.id === parentLastChild.id : false;\n\n        const parentSlots = dropAreaNodeParentInfo?.slots || null;\n\n        const parentFlowDirection =\n          parentSlots && parentSlots[pageAwareParentProp || 'children']?.flowDirection;\n\n        return parentFlowDirection && isParentLastChild\n          ? getChildNodeHighlightedZone(parentFlowDirection)\n          : null;\n      }\n\n      // Is dragging over slot center\n      if (\n        node.id === dragOverNodeId &&\n        pageAwareParentProp &&\n        pageAwareParentProp === dragOverSlotParentProp &&\n        parentProp\n      ) {\n        if (isPageNode) {\n          return DROP_ZONE_CENTER;\n        }\n\n        const nodeChildren =\n          (pageAwareParentProp &&\n            appDom.isElement(node) &&\n            dropAreaNodeChildNodes[pageAwareParentProp]) ||\n          [];\n        return nodeChildren.length === 0 ? DROP_ZONE_CENTER : null;\n      }\n    }\n\n    // Common cases\n    return node.id === dragOverNodeId && parentProp === dragOverSlotParentProp\n      ? dragOverZone\n      : null;\n  }, [\n    dragOverZone,\n    availableDropZones,\n    isPageNode,\n    parentProp,\n    isEmptySlot,\n    dropAreaNodeParent,\n    dom,\n    isPageChild,\n    node,\n    dragOverNodeId,\n    dragOverSlotParentProp,\n    isPageRowChild,\n    isPageRowNode,\n    dropAreaNodeParentInfo?.slots,\n    dropAreaNodeChildNodes,\n  ]);\n\n  const highlightedZoneOverlayClass =\n    highlightedZone && getHighlightedZoneOverlayClass(highlightedZone);\n\n  const isHorizontalContainerChild = dropAreaNodeParentSlot\n    ? isHorizontalFlow(dropAreaNodeParentSlot.flowDirection)\n    : false;\n  const isVerticalContainerChild = dropAreaNodeParentSlot\n    ? isVerticalFlow(dropAreaNodeParentSlot.flowDirection)\n    : false;\n\n  const highlightParentRect = slotRect || dropAreaNodeParentRect;\n\n  if (!dropAreaNodeRect) {\n    return null;\n  }\n\n  const highlightHeight =\n    isHorizontalContainerChild && highlightParentRect && dropAreaNodeParentRect\n      ? highlightParentRect.height\n      : dropAreaNodeRect.height;\n  const highlightWidth =\n    !isPageChild && isVerticalContainerChild && highlightParentRect && dropAreaNodeParentRect\n      ? highlightParentRect.width\n      : dropAreaNodeRect.width;\n\n  const highlightRelativeX =\n    (!isPageChild && isVerticalContainerChild && highlightParentRect && dropAreaNodeParentRect\n      ? highlightParentRect.x\n      : dropAreaNodeRect.x) - dropAreaRect.x;\n  const highlightRelativeY =\n    (isHorizontalContainerChild && highlightParentRect && dropAreaNodeParentRect\n      ? highlightParentRect.y\n      : dropAreaNodeRect.y) - dropAreaRect.y;\n\n  const isHighlightingCenter = highlightedZone === DROP_ZONE_CENTER;\n\n  const highlightRect =\n    isHighlightingCenter && isEmptySlot && slotRect\n      ? slotRect\n      : {\n          ...dropAreaRect,\n          x: isPageChildElement ? dropAreaNodeRect.x : dropAreaRect.x,\n          width: isPageChildElement ? dropAreaNodeRect.width : dropAreaRect.width,\n        };\n\n  const highlightRelativeRect = {\n    x: isPageChildElement ? 0 : highlightRelativeX,\n    y: highlightRelativeY,\n    width: highlightWidth,\n    height: highlightHeight,\n  };\n\n  return (\n    <React.Fragment>\n      <StyledNodeDropArea\n        style={absolutePositionCss(highlightRect)}\n        className={clsx(\n          highlightedZoneOverlayClass\n            ? {\n                [highlightedZoneOverlayClass]: !isHighlightingCenter || isEmptySlot,\n              }\n            : {},\n        )}\n        highlightRelativeRect={highlightRelativeRect}\n      />\n      {isEmptySlot && slotRect ? (\n        <EmptySlot style={absolutePositionCss(slotRect)}>\n          <Typography variant=\"subtitle2\">Drop component here</Typography>\n        </EmptySlot>\n      ) : null}\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material';\nimport { Rectangle } from './utils/geometry';\n\nconst PinholeOverlayRoot = styled('div')({\n  pointerEvents: 'none !important' as 'none',\n  position: 'relative',\n  '> div': {\n    pointerEvents: 'initial !important',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    background: '#000',\n    opacity: 0,\n  },\n});\n\nexport interface PinholeOverlayprops {\n  className?: string;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n  pinhole?: Rectangle | null;\n}\n\nconst PinholeOverlay = React.forwardRef(function PinholeOverlay(\n  { className, onClick, pinhole }: PinholeOverlayprops,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  const left = React.useRef<HTMLDivElement>(null);\n  const topLeft = React.useRef<HTMLDivElement>(null);\n  const top = React.useRef<HTMLDivElement>(null);\n  const topRight = React.useRef<HTMLDivElement>(null);\n  const right = React.useRef<HTMLDivElement>(null);\n  const bottomRight = React.useRef<HTMLDivElement>(null);\n  const bottom = React.useRef<HTMLDivElement>(null);\n  const bottomLeft = React.useRef<HTMLDivElement>(null);\n\n  React.useLayoutEffect(() => {\n    if (left.current) {\n      left.current.style.top = pinhole ? `${pinhole.y}px` : '0';\n      left.current.style.width = pinhole ? `${pinhole.x}px` : 'unset';\n      left.current.style.height = pinhole ? `${pinhole.height}px` : 'unset';\n    }\n    if (topLeft.current) {\n      topLeft.current.style.width = pinhole ? `${pinhole.x}px` : 'unset';\n      topLeft.current.style.height = pinhole ? `${pinhole.y}px` : 'unset';\n    }\n    if (top.current) {\n      top.current.style.left = pinhole ? `${pinhole.x}px` : '0';\n      top.current.style.width = pinhole ? `${pinhole.width}px` : 'unset';\n      top.current.style.height = pinhole ? `${pinhole.y}px` : 'unset';\n    }\n    if (topRight.current) {\n      topRight.current.style.left = pinhole ? `${pinhole.x + pinhole.width}px` : '0';\n      topRight.current.style.height = pinhole ? `${pinhole.y}px` : 'unset';\n    }\n    if (right.current) {\n      right.current.style.top = pinhole ? `${pinhole.y}px` : '0';\n      right.current.style.left = pinhole ? `${pinhole.x + pinhole.width}px` : '0';\n      right.current.style.height = pinhole ? `${pinhole.height}px` : 'unset';\n    }\n    if (bottomRight.current) {\n      bottomRight.current.style.left = pinhole ? `${pinhole.x + pinhole.width}px` : '0';\n      bottomRight.current.style.top = pinhole ? `${pinhole.y + pinhole.height}px` : 'unset';\n    }\n    if (bottom.current) {\n      bottom.current.style.left = pinhole ? `${pinhole.x}px` : '0';\n      bottom.current.style.width = pinhole ? `${pinhole.width}px` : 'unset';\n      bottom.current.style.top = pinhole ? `${pinhole.y + pinhole.height}px` : 'unset';\n    }\n    if (bottomLeft.current) {\n      bottomLeft.current.style.width = pinhole ? `${pinhole.x}px` : '0';\n      bottomLeft.current.style.top = pinhole ? `${pinhole.y + pinhole.height}px` : 'unset';\n    }\n  }, [pinhole]);\n\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement>) => {\n      if (onClick) {\n        onClick(event);\n      }\n    },\n    [onClick],\n  );\n\n  // We key the elements so that React doesn't reuse between pinhole off or on\n  return (\n    <PinholeOverlayRoot ref={ref} className={className}>\n      {pinhole ? (\n        <React.Fragment>\n          {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n          <div key=\"left\" ref={left} onClick={handleClick} />\n          {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n          <div key=\"topLeft\" ref={topLeft} onClick={handleClick} />\n          {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n          <div key=\"top\" ref={top} onClick={handleClick} />\n          {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n          <div key=\"topRight\" ref={topRight} onClick={handleClick} />\n          {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n          <div key=\"right\" ref={right} onClick={handleClick} />\n          {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n          <div key=\"bottomRight\" ref={bottomRight} onClick={handleClick} />\n          {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n          <div key=\"bottom\" ref={bottom} onClick={handleClick} />\n          {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n          <div key=\"bottomLeft\" ref={bottomLeft} onClick={handleClick} />\n        </React.Fragment>\n      ) : (\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n        <div key=\"full\" onClick={handleClick} />\n      )}\n    </PinholeOverlayRoot>\n  );\n});\n\nexport { PinholeOverlay };\n","import { NodeId } from '@toolpad/studio-runtime';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport {\n  getElementNodeComponentId,\n  isPageColumn,\n  isPageLayoutComponent,\n  isPageRow,\n} from '../../runtime/toolpadComponents';\n\nexport function deleteOrphanedLayoutNodes(\n  domBeforeChange: appDom.AppDom,\n  domAfterChange: appDom.AppDom,\n  movedOrDeletedNode: appDom.ElementNode,\n  moveTargetNodeId: NodeId | null = null,\n): appDom.AppDom {\n  let updatedDom = domAfterChange;\n  let orphanedLayoutNodeIds: NodeId[] = [];\n\n  const movedOrDeletedNodeParentProp = movedOrDeletedNode.parentProp;\n\n  const parent = appDom.getParent(domBeforeChange, movedOrDeletedNode);\n  const parentParent = parent && appDom.getParent(domBeforeChange, parent);\n  const parentParentParent = parentParent && appDom.getParent(domBeforeChange, parentParent);\n\n  const parentChildren =\n    parent && movedOrDeletedNodeParentProp\n      ? (appDom.getChildNodes(domBeforeChange, parent) as appDom.NodeChildren<appDom.ElementNode>)[\n          movedOrDeletedNodeParentProp\n        ]\n      : [];\n\n  const isOnlyLayoutContainerChild =\n    parent &&\n    appDom.isElement(parent) &&\n    isPageLayoutComponent(parent) &&\n    parentChildren.length === 1;\n\n  const isParentOnlyLayoutContainerChild =\n    parentParent &&\n    parent.parentProp &&\n    appDom.isElement(parentParent) &&\n    isPageLayoutComponent(parentParent) &&\n    appDom.getChildNodes(domBeforeChange, parentParent)[parent.parentProp].length === 1;\n\n  const isSecondLastLayoutContainerChild =\n    parent &&\n    appDom.isElement(parent) &&\n    isPageLayoutComponent(parent) &&\n    parentChildren.length === 2;\n\n  if (isSecondLastLayoutContainerChild) {\n    if (parent.parentIndex && parentParent) {\n      const lastContainerChild = parentChildren.filter(\n        (child) => child.id !== movedOrDeletedNode.id,\n      )[0];\n\n      if (\n        lastContainerChild.parentProp &&\n        parentParent.parentIndex &&\n        moveTargetNodeId !== lastContainerChild.id\n      ) {\n        if (\n          moveTargetNodeId !== parent.id &&\n          (appDom.isPage(parentParent) ||\n            (appDom.isElement(parentParent) &&\n              getElementNodeComponentId(lastContainerChild) !==\n                getElementNodeComponentId(parentParent)))\n        ) {\n          updatedDom = appDom.moveNode(\n            updatedDom,\n            lastContainerChild,\n            parentParent,\n            (lastContainerChild.parentProp || 'children') as appDom.ParentPropOf<\n              appDom.ElementNode<any>,\n              appDom.PageNode | appDom.ElementNode<any>\n            >,\n            parent.parentIndex,\n          );\n\n          if (isPageColumn(parent)) {\n            updatedDom = appDom.setNodeNamespacedProp(\n              updatedDom,\n              lastContainerChild,\n              'layout',\n              'columnSize',\n              parent.layout?.columnSize || 1,\n            );\n          }\n\n          if (isPageColumn(lastContainerChild) && appDom.isPage(parentParent)) {\n            updatedDom = appDom.spreadNode(updatedDom, lastContainerChild);\n          }\n\n          orphanedLayoutNodeIds = [...orphanedLayoutNodeIds, parent.id];\n        }\n\n        if (\n          parentParentParent &&\n          appDom.isElement(parentParentParent) &&\n          isPageLayoutComponent(parentParentParent) &&\n          isParentOnlyLayoutContainerChild\n        ) {\n          updatedDom = appDom.moveNode(\n            updatedDom,\n            lastContainerChild,\n            parentParentParent,\n            lastContainerChild.parentProp,\n            parentParent.parentIndex,\n          );\n\n          if (isPageColumn(parentParent)) {\n            updatedDom = appDom.setNodeNamespacedProp(\n              updatedDom,\n              lastContainerChild,\n              'layout',\n              'columnSize',\n              parentParent.layout?.columnSize || 1,\n            );\n          }\n\n          orphanedLayoutNodeIds = [...orphanedLayoutNodeIds, parentParent.id];\n        }\n      }\n    }\n  }\n\n  if (isOnlyLayoutContainerChild) {\n    if (isParentOnlyLayoutContainerChild && moveTargetNodeId !== parentParent.id) {\n      orphanedLayoutNodeIds = [...orphanedLayoutNodeIds, parentParent.id];\n    }\n\n    orphanedLayoutNodeIds = [...orphanedLayoutNodeIds, parent.id];\n  }\n\n  orphanedLayoutNodeIds.forEach((nodeId) => {\n    updatedDom = appDom.removeMaybeNode(updatedDom, nodeId);\n  });\n\n  return updatedDom;\n}\n\nexport function normalizePageRowColumnSizes(\n  dom: appDom.AppDom,\n  pageNode: appDom.PageNode,\n): appDom.AppDom {\n  const allPageNodes = appDom.getDescendants(dom, pageNode);\n\n  allPageNodes.forEach((node: appDom.AppDomNode) => {\n    if (appDom.isElement(node) && isPageRow(node)) {\n      const nodeChildren = appDom.getChildNodes(dom, node).children;\n      const nodeChildrenCount = nodeChildren.length;\n\n      const columnSizes = nodeChildren.map((child) => child.layout?.columnSize || 1);\n      const totalColumnsSize = columnSizes.reduce((acc, size) => acc + size, 0);\n\n      if (totalColumnsSize.toFixed(4) !== nodeChildrenCount.toFixed(4)) {\n        const normalizedLayoutColumnSizes = columnSizes.map(\n          (size) => (size * nodeChildren.length) / totalColumnsSize,\n        );\n\n        nodeChildren.forEach((child, childIndex) => {\n          dom = appDom.setNodeNamespacedProp(\n            dom,\n            child,\n            'layout',\n            'columnSize',\n            normalizedLayoutColumnSizes[childIndex],\n          );\n        });\n      }\n    }\n  });\n\n  return dom;\n}\n\nexport function removePageLayoutNode(dom: appDom.AppDom, node: appDom.ElementNode): appDom.AppDom {\n  const pageNode = appDom.getPageAncestor(dom, node);\n\n  let updatedDom = dom;\n\n  updatedDom = appDom.removeMaybeNode(updatedDom, node.id);\n  updatedDom = deleteOrphanedLayoutNodes(dom, updatedDom, node);\n\n  if (pageNode) {\n    updatedDom = normalizePageRowColumnSizes(updatedDom, pageNode);\n  }\n\n  return updatedDom;\n}\n","import RenderPanel from './RenderPanel';\n\nexport default RenderPanel;\n","import { TabContext, TabList, TabPanel } from '@mui/lab';\nimport { Tab, Box, styled, Typography, Link } from '@mui/material';\nimport * as React from 'react';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport PageOptionsPanel from './PageOptionsPanel';\nimport ComponentEditor from './ComponentEditor';\nimport ThemeEditor from './ThemeEditor';\nimport { useAppState, useAppStateApi } from '../../AppState';\nimport { PageViewTab } from '../../../utils/domView';\n\nconst classes = {\n  panel: 'Toolpad_Panel',\n  themesDocsLink: 'Toolpad_ThemesDocsLink',\n};\n\nconst ComponentPanelRoot = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100%',\n  [`& .${classes.panel}`]: {\n    flex: 1,\n    padding: theme.spacing(2),\n    overflow: 'auto',\n  },\n  [`& .${classes.themesDocsLink}`]: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nexport interface ComponentPanelProps {\n  className?: string;\n}\n\nexport default function ComponentPanel({ className }: ComponentPanelProps) {\n  const { dom, currentView } = useAppState();\n  const appStateApi = useAppStateApi();\n\n  const currentTab = currentView.kind === 'page' ? currentView.pageViewTab : null;\n\n  const selectedNodeId = currentView.kind === 'page' ? currentView.selectedNodeId : null;\n  const selectedNode = selectedNodeId ? appDom.getMaybeNode(dom, selectedNodeId) : null;\n\n  const handleChange = (_: React.SyntheticEvent, newValue: PageViewTab) => {\n    appStateApi.setPageViewTab(newValue);\n  };\n\n  return (\n    <ComponentPanelRoot className={className}>\n      <TabContext value={currentTab || 'page'}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <TabList onChange={handleChange} aria-label=\"Component options\">\n            <Tab label=\"Page\" value=\"page\" />\n            <Tab label=\"Component\" value=\"component\" disabled={!selectedNode} />\n            <Tab label=\"Theme\" value=\"theme\" />\n          </TabList>\n        </Box>\n        <TabPanel value=\"page\" className={classes.panel}>\n          <PageOptionsPanel />\n        </TabPanel>\n        <TabPanel value=\"component\" className={classes.panel}>\n          {selectedNode && appDom.isElement(selectedNode) ? (\n            <ComponentEditor node={selectedNode} />\n          ) : (\n            <Typography variant=\"body1\">No component selected.</Typography>\n          )}\n        </TabPanel>\n        <TabPanel value=\"theme\" className={classes.panel}>\n          <Typography className={classes.themesDocsLink} variant=\"body2\">\n            Customize the app with a Material&nbsp;UI theme. Read more about theming in the{' '}\n            <Link\n              href=\"https://mui.com/toolpad/studio/concepts/theming/\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              docs\n            </Link>\n            .\n          </Typography>\n          <ThemeEditor />\n        </TabPanel>\n      </TabContext>\n    </ComponentPanelRoot>\n  );\n}\n","import {\n  Stack,\n  Tooltip,\n  Typography,\n  Divider,\n  Link,\n  ToggleButtonGroup,\n  ToggleButton,\n  Autocomplete,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n} from '@mui/material';\nimport * as React from 'react';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { useAppState, useDomApi } from '../../AppState';\nimport { usePageEditorState } from './PageEditorProvider';\n\nimport UrlQueryEditor from './UrlQueryEditor';\nimport NodeNameEditor from '../NodeNameEditor';\nimport PageTitleEditor from '../PageTitleEditor';\nimport PageDisplayNameEditor from '../PageDisplayNameEditor';\nimport { UpgradeChip } from '../UpgradeNotification';\n\nconst PAGE_DISPLAY_OPTIONS: { value: appDom.PageDisplayMode; label: string }[] = [\n  { value: 'shell', label: 'App shell' },\n  { value: 'standalone', label: 'No shell' },\n];\n\nconst PAGE_CONTAINER_WIDTH_OPTIONS: { value: appDom.ContainerWidth; label: string }[] = [\n  { value: 'xs', label: 'xs' },\n  { value: 'sm', label: 'sm' },\n  { value: 'md', label: 'md' },\n  { value: 'lg', label: 'lg' },\n  { value: 'xl', label: 'xl' },\n  { value: 'none', label: 'None' },\n];\n\nexport default function PageOptionsPanel() {\n  const { nodeId: pageNodeId } = usePageEditorState();\n  const { dom } = useAppState();\n  const plan = appDom.getPlan(dom);\n  const isPaidPlan = plan !== undefined && plan !== 'free';\n  const domApi = useDomApi();\n\n  const appNode = appDom.getApp(dom);\n\n  const page = appDom.getNode(dom, pageNodeId, 'page');\n\n  const handleDisplayModeChange = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>, newValue: appDom.PageDisplayMode) => {\n      domApi.update((draft) =>\n        appDom.setNodeNamespacedProp(draft, page, 'attributes', 'display', newValue),\n      );\n    },\n    [domApi, page],\n  );\n\n  const handleContainerModeChange = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>, newValue: appDom.ContainerWidth) => {\n      domApi.update((draft) =>\n        appDom.setNodeNamespacedProp(draft, page, 'attributes', 'maxWidth', newValue),\n      );\n    },\n    [domApi, page],\n  );\n\n  const availableRoles = React.useMemo(() => {\n    return new Map(appNode.attributes?.authorization?.roles?.map((role) => [role.name, role]));\n  }, [appNode]);\n\n  const handleAllowedRolesChange = React.useCallback(\n    (event: React.SyntheticEvent, newValue: string[]) => {\n      domApi.update((draft) =>\n        appDom.setNodeNamespacedProp(draft, page, 'attributes', 'authorization', {\n          ...page.attributes.authorization,\n          allowedRoles: newValue,\n        }),\n      );\n    },\n    [domApi, page],\n  );\n\n  const handleAllowAllChange = React.useCallback(\n    (event: React.SyntheticEvent, isAllowed: boolean) => {\n      domApi.update((draft) =>\n        appDom.setNodeNamespacedProp(draft, page, 'attributes', 'authorization', {\n          allowAll: isAllowed,\n          ...(isAllowed ? { allowedRoles: [] } : {}),\n        }),\n      );\n    },\n    [domApi, page],\n  );\n\n  const allowAll = page.attributes.authorization?.allowAll ?? true;\n  const allowedRoles = page.attributes.authorization?.allowedRoles ?? [];\n\n  return (\n    <Stack spacing={2} alignItems=\"stretch\" data-testid=\"page-editor\">\n      <Typography variant=\"subtitle1\">Page</Typography>\n      <div>\n        <NodeNameEditor node={page} />\n        <PageDisplayNameEditor node={page} />\n        <PageTitleEditor node={page} />\n      </div>\n      <div>\n        <Typography variant=\"overline\">Display mode</Typography>\n        <Tooltip\n          arrow\n          placement=\"left-start\"\n          title={\n            <Typography variant=\"inherit\">\n              Control how the app shell is displayed in the final application. Read more in the{' '}\n              <Link\n                href=\"https://mui.com/toolpad/studio/concepts/page-properties/#display-mode\"\n                target=\"_blank\"\n                rel=\"noopener\"\n              >\n                docs\n              </Link>\n              .\n            </Typography>\n          }\n        >\n          <ToggleButtonGroup\n            exclusive\n            value={page.attributes.display ?? 'shell'}\n            onChange={handleDisplayModeChange}\n            aria-label=\"Display mode\"\n            fullWidth\n          >\n            {PAGE_DISPLAY_OPTIONS.map((option) => {\n              return (\n                <ToggleButton key={option.value} value={option.value}>\n                  {option.label}\n                </ToggleButton>\n              );\n            })}\n          </ToggleButtonGroup>\n        </Tooltip>\n      </div>\n      <div>\n        <Typography variant=\"overline\">Container width</Typography>\n        <Tooltip\n          arrow\n          placement=\"left-start\"\n          title={\n            <Typography variant=\"inherit\">\n              Set the maximum width of the top-level container.\n            </Typography>\n          }\n        >\n          <ToggleButtonGroup\n            exclusive\n            value={page.attributes.maxWidth ?? appDom.DEFAULT_CONTAINER_WIDTH}\n            onChange={handleContainerModeChange}\n            aria-label=\"Container mode\"\n            fullWidth\n          >\n            {PAGE_CONTAINER_WIDTH_OPTIONS.map((option) => {\n              return (\n                <ToggleButton key={option.value} value={option.value}>\n                  {option.label}\n                </ToggleButton>\n              );\n            })}\n          </ToggleButtonGroup>\n        </Tooltip>\n      </div>\n      <div>\n        <Typography variant=\"overline\">\n          Authorization\n          {!isPaidPlan ? (\n            <UpgradeChip message=\"Authorization requires a paid plan.\" sx={{ ml: 1 }} />\n          ) : null}\n        </Typography>\n\n        {isPaidPlan ? (\n          <React.Fragment>\n            <FormControlLabel\n              control={<Checkbox checked={allowAll} onChange={handleAllowAllChange} />}\n              label=\"Allow access to all roles\"\n            />\n            <Autocomplete\n              multiple\n              options={Array.from(availableRoles.keys())}\n              value={allowAll ? [] : allowedRoles}\n              onChange={handleAllowedRolesChange}\n              disabled={allowAll}\n              fullWidth\n              noOptionsText=\"No roles defined\"\n              renderInput={(params) => (\n                <TextField {...params} label=\"Allowed roles\" placeholder=\"Roles\" />\n              )}\n            />\n          </React.Fragment>\n        ) : null}\n      </div>\n      <div>\n        <Divider variant=\"middle\" sx={{ alignSelf: 'stretch' }} />\n        <Typography variant=\"overline\">Page State</Typography>\n        <UrlQueryEditor pageNodeId={pageNodeId} />\n      </div>\n    </Stack>\n  );\n}\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Typography,\n  Link,\n  Divider,\n} from '@mui/material';\nimport * as React from 'react';\nimport AddIcon from '@mui/icons-material/Add';\nimport { NodeId } from '@toolpad/studio-runtime';\nimport useBoolean from '@toolpad/utils/hooks/useBoolean';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { useAppState, useDomApi, useAppStateApi } from '../../AppState';\nimport MapEntriesEditor from '../../../components/MapEntriesEditor';\nimport useUnsavedChangesConfirm from '../../hooks/useUnsavedChangesConfirm';\n\nexport interface UrlQueryEditorProps {\n  pageNodeId: NodeId;\n}\n\ninterface UrlQueryStringProps {\n  input: [string, string][] | undefined;\n}\n\nfunction UrlQueryString({ input }: UrlQueryStringProps) {\n  const queryString = React.useMemo(() => {\n    const search = new URLSearchParams(input).toString();\n    return search.length ? search : '';\n  }, [input]);\n\n  return (\n    <React.Fragment>\n      <Divider variant=\"middle\" sx={{ alignSelf: 'stretch', marginTop: '20px' }} />\n      <Typography variant=\"overline\">Usage Preview:</Typography>\n      <Typography>\n        <code>{queryString}</code>\n      </Typography>\n    </React.Fragment>\n  );\n}\n\nexport default function UrlQueryEditor({ pageNodeId }: UrlQueryEditorProps) {\n  const { dom } = useAppState();\n  const { currentView } = useAppState();\n\n  const domApi = useDomApi();\n  const appStateApi = useAppStateApi();\n\n  const page = appDom.getNode(dom, pageNodeId, 'page');\n\n  const { value: isDialogOpen, setTrue: openDialog, setFalse: closeDialog } = useBoolean(false);\n\n  const value = page.attributes.parameters;\n\n  const [input, setInput] = React.useState(value);\n\n  const hasUnsavedChanges = input !== value;\n\n  React.useEffect(() => {\n    if (isDialogOpen) {\n      setInput(value);\n    }\n  }, [isDialogOpen, value]);\n\n  const handleButtonClick = React.useCallback(() => {\n    appStateApi.setView({\n      ...currentView,\n      kind: 'page',\n      name: page.name,\n      pageParametersDialogOpen: true,\n    });\n  }, [appStateApi, page.name, currentView]);\n\n  const handleDialogClose = React.useCallback(() => {\n    appStateApi.setView({\n      ...currentView,\n      kind: 'page',\n      name: page.name,\n      pageParametersDialogOpen: false,\n    });\n  }, [appStateApi, page.name, currentView]);\n\n  const { handleCloseWithUnsavedChanges } = useUnsavedChangesConfirm({\n    hasUnsavedChanges,\n    onClose: handleDialogClose,\n  });\n\n  const handleSave = React.useCallback(() => {\n    domApi.update((draft) =>\n      appDom.setNodeNamespacedProp(draft, page, 'attributes', 'parameters', input || []),\n    );\n    handleDialogClose();\n  }, [domApi, handleDialogClose, input, page]);\n\n  React.useEffect(() => {\n    if (currentView.kind === 'page' && currentView.pageParametersDialogOpen) {\n      openDialog();\n    } else {\n      closeDialog();\n    }\n  }, [closeDialog, currentView, openDialog]);\n\n  return (\n    <div>\n      <Button color=\"inherit\" startIcon={<AddIcon />} onClick={handleButtonClick}>\n        Add page parameters\n      </Button>\n      <Dialog fullWidth open={isDialogOpen} onClose={handleCloseWithUnsavedChanges}>\n        <DialogTitle>Edit page parameters</DialogTitle>\n        <DialogContent>\n          <Typography>\n            Page parameters allow you to pass external data into the Toolpad Studio page state via\n            the URL query. Read more in the{' '}\n            <Link\n              href=\"https://mui.com/toolpad/studio/concepts/page-properties/#page-parameters\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              docs\n            </Link>\n            .\n          </Typography>\n          <UrlQueryString input={input} />\n          <MapEntriesEditor\n            sx={{ my: 3 }}\n            fieldLabel=\"Parameter\"\n            valueLabel=\"Default value\"\n            value={input || []}\n            onChange={setInput}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"inherit\" variant=\"text\" onClick={handleDialogClose}>\n            Close\n          </Button>\n          <Button disabled={value === input} onClick={handleSave}>\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { Box, TextField, IconButton, SxProps } from '@mui/material';\nimport * as React from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { WithControlledProp } from '@toolpad/utils/types';\n\nfunction renderStringValueEditor({\n  label,\n  disabled,\n  value,\n  onChange,\n}: RenderValueEditorParams<string>) {\n  return (\n    <TextField\n      label={label}\n      disabled={disabled}\n      value={value}\n      onChange={(event) => onChange(event.target.value)}\n    />\n  );\n}\n\ninterface RenderValueEditorParams<V> extends WithControlledProp<V> {\n  label?: string;\n  disabled?: boolean;\n}\n\ninterface RenderValueEditor<V> {\n  (params: RenderValueEditorParams<V>): React.ReactNode;\n}\n\ninterface MapEntriesEditorExtraProps<V> {\n  defaultValue: V;\n  renderValueEditor: RenderValueEditor<V>;\n}\n\ntype MapEntriesEditorTypedProps<V> = string extends V\n  ? Partial<MapEntriesEditorExtraProps<V>>\n  : MapEntriesEditorExtraProps<V>;\n\nexport type MapEntriesEditorProps<V> = WithControlledProp<[string, V][]> & {\n  label?: string;\n  fieldLabel?: string;\n  valueLabel?: string;\n  autoFocus?: boolean;\n  sx?: SxProps;\n  disabled?: boolean;\n  isEntryDisabled?: (entry: [string, V], i: number) => boolean;\n} & MapEntriesEditorTypedProps<V>;\n\nexport default function MapEntriesEditor<V = string>({\n  value,\n  onChange,\n  label,\n  fieldLabel = 'field',\n  valueLabel = 'value',\n  defaultValue: defaultValueProp,\n  autoFocus = false,\n  sx,\n  renderValueEditor: renderValueEditorProp,\n  disabled,\n  isEntryDisabled,\n}: MapEntriesEditorProps<V>) {\n  const fieldInputRef = React.useRef<HTMLInputElement>(null);\n\n  const handleRemove = React.useCallback(\n    (index: number) => () => {\n      onChange(value.filter((entry, i) => i !== index));\n    },\n    [onChange, value],\n  );\n\n  const isValidFieldName: boolean[] = React.useMemo(() => {\n    const counts: Record<string, number> = {};\n    value.forEach(([field]) => {\n      counts[field] = counts[field] ? counts[field] + 1 : 1;\n    });\n    return value.map(([field]) => !!field && counts[field] <= 1);\n  }, [value]);\n\n  const renderValueEditor =\n    renderValueEditorProp ?? (renderStringValueEditor as unknown as RenderValueEditor<V>);\n\n  const defaultValue = defaultValueProp ?? ('' as unknown as V);\n\n  return (\n    <Box sx={sx} display=\"grid\" gridTemplateColumns=\"1fr 2fr auto\" alignItems=\"center\" gap={1}>\n      {label ? <Box gridColumn=\"span 3\">{label}:</Box> : null}\n      {value.map((entry, index) => {\n        const [field, fieldValue] = entry;\n        const entryDisabled = disabled || isEntryDisabled?.(entry, index);\n        return (\n          <React.Fragment key={index}>\n            <TextField\n              disabled={entryDisabled}\n              label={fieldLabel}\n              value={field}\n              autoFocus\n              onChange={(event) =>\n                onChange(\n                  value.map((existingEntry, i) =>\n                    i === index ? [event.target.value, existingEntry[1]] : existingEntry,\n                  ),\n                )\n              }\n              error={!isValidFieldName[index]}\n            />\n\n            {renderValueEditor({\n              label: valueLabel,\n              value: fieldValue,\n              onChange(newValue) {\n                onChange(\n                  value.map((existingEntry, i) =>\n                    i === index ? [existingEntry[0], newValue] : existingEntry,\n                  ),\n                );\n              },\n              disabled: entryDisabled,\n            })}\n\n            <IconButton\n              aria-label=\"Delete property\"\n              onClick={handleRemove(index)}\n              disabled={entryDisabled}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </React.Fragment>\n        );\n      })}\n\n      <form autoComplete=\"off\" style={{ display: 'contents' }}>\n        <TextField\n          inputRef={fieldInputRef}\n          label={fieldLabel}\n          value=\"\"\n          onChange={(event) => {\n            onChange([...value, [event.target.value, defaultValue]]);\n          }}\n          autoFocus={autoFocus}\n          disabled={disabled}\n        />\n      </form>\n    </Box>\n  );\n}\n","import * as React from 'react';\n\ntype OnCloseType = (...args: unknown[]) => void | Promise<void>;\n\ninterface UseUnsavedChangesConfirmInput {\n  hasUnsavedChanges: boolean;\n  onClose: OnCloseType;\n}\n\ninterface UseUnsavedChangesConfirmPayload {\n  handleCloseWithUnsavedChanges: OnCloseType;\n}\n\nexport default function useUnsavedChangesConfirm({\n  hasUnsavedChanges,\n  onClose,\n}: UseUnsavedChangesConfirmInput): UseUnsavedChangesConfirmPayload {\n  const handleCloseWithUnsavedChanges = React.useCallback(() => {\n    if (hasUnsavedChanges) {\n      // eslint-disable-next-line no-alert\n      const hasConfirmed = window.confirm(\n        'You have unsaved changes. Are you sure you want to navigate away? All changes will be discarded when you press \"OK\".',\n      );\n\n      if (!hasConfirmed) {\n        return;\n      }\n    }\n\n    onClose();\n  }, [hasUnsavedChanges, onClose]);\n\n  return { handleCloseWithUnsavedChanges };\n}\n","import { SxProps, TextField } from '@mui/material';\nimport * as React from 'react';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { useAppState, useDomApi } from '../AppState';\nimport { useNodeNameValidation } from './PagesExplorer/validation';\nimport { useProjectApi } from '../../projectApi';\n\ninterface NodeNameEditorProps {\n  node: appDom.AppDomNode;\n  sx?: SxProps;\n}\n\nexport default function NodeNameEditor({ node, sx }: NodeNameEditorProps) {\n  const domApi = useDomApi();\n  const { dom } = useAppState();\n  const projectApi = useProjectApi();\n\n  const [nameInput, setNameInput] = React.useState(node.name);\n  React.useEffect(() => setNameInput(node.name), [node.name]);\n\n  const handleNameInputChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => setNameInput(event.target.value),\n    [],\n  );\n\n  const existingNames = React.useMemo(() => appDom.getExistingNamesForNode(dom, node), [dom, node]);\n  const nodeNameError = useNodeNameValidation(nameInput, existingNames, node.type);\n  const isNameValid = !nodeNameError;\n\n  const handleNameCommit = React.useCallback(() => {\n    if (isNameValid) {\n      domApi.setNodeName(node.id, nameInput);\n    } else {\n      setNameInput(node.name);\n    }\n    const oldname = dom.nodes[node.id];\n    if (isNameValid && oldname.type === 'page' && nameInput !== oldname.name) {\n      setTimeout(async () => {\n        await projectApi.methods.deletePage(oldname.name);\n      }, 300);\n    }\n  }, [projectApi, isNameValid, domApi, node.id, node.name, nameInput, dom]);\n\n  const handleKeyPress = React.useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (event.key === 'Enter') {\n        handleNameCommit();\n      }\n    },\n    [handleNameCommit],\n  );\n\n  return (\n    <TextField\n      sx={sx}\n      fullWidth\n      label=\"Node name\"\n      error={!isNameValid}\n      helperText={nodeNameError}\n      value={nameInput}\n      onChange={handleNameInputChange}\n      onBlur={handleNameCommit}\n      onKeyPress={handleKeyPress}\n    />\n  );\n}\n","import * as React from 'react';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\n\nexport function useNodeNameValidation(name: string, disallowedNames: Set<string>, kind: string) {\n  return React.useMemo(\n    () => appDom.validateNodeName(name, disallowedNames, kind),\n    [name, disallowedNames, kind],\n  );\n}\n","import { TextField } from '@mui/material';\nimport * as React from 'react';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { useDomApi } from '../AppState';\n\ninterface PageTitleEditorProps {\n  node: appDom.PageNode;\n}\n\nfunction validateInput(input: string) {\n  if (!input) {\n    return 'Input required';\n  }\n  return null;\n}\n\nexport default function PageTitleEditor({ node }: PageTitleEditorProps) {\n  const domApi = useDomApi();\n  const [pageTitleInput, setPageTitleInput] = React.useState(appDom.getPageTitle(node));\n\n  const handlePageTitleChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => setPageTitleInput(event.target.value),\n    [],\n  );\n\n  const handleCommit = React.useCallback(() => {\n    domApi.update((dom: appDom.AppDom) =>\n      appDom.setNodeNamespacedProp(dom, node, 'attributes', 'title', pageTitleInput),\n    );\n  }, [node, pageTitleInput, domApi]);\n\n  const handleKeyPress = React.useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (event.code === 'Enter') {\n        handleCommit();\n      }\n    },\n    [handleCommit],\n  );\n\n  return (\n    <TextField\n      fullWidth\n      label=\"Page title\"\n      value={pageTitleInput}\n      onChange={handlePageTitleChange}\n      onBlur={handleCommit}\n      onKeyDown={handleKeyPress}\n      error={!pageTitleInput}\n      helperText={validateInput(pageTitleInput)}\n    />\n  );\n}\n","import { IconButton, InputAdornment, TextField, Tooltip } from '@mui/material';\nimport * as React from 'react';\nimport ResetIcon from '@mui/icons-material/RestartAlt';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { useDomApi } from '../AppState';\n\ninterface PageDisplayNameEditorProps {\n  node: appDom.PageNode;\n}\n\nfunction validateInput(input: string) {\n  if (!input) {\n    return 'Input required';\n  }\n  return null;\n}\n\nexport default function PageDisplayNameEditor({ node }: PageDisplayNameEditorProps) {\n  const domApi = useDomApi();\n\n  const pageDisplayName = React.useMemo(() => appDom.getPageDisplayName(node), [node]);\n\n  const [pageDisplayNameInput, setPageDisplayNameInput] = React.useState(pageDisplayName);\n  React.useEffect(() => setPageDisplayNameInput(pageDisplayName), [pageDisplayName]);\n\n  const handlePageDisplayNameChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => setPageDisplayNameInput(event.target.value),\n    [],\n  );\n\n  const handleCommit = React.useCallback(() => {\n    domApi.update((dom: appDom.AppDom) =>\n      appDom.setNodeNamespacedProp(dom, node, 'attributes', 'displayName', pageDisplayNameInput),\n    );\n  }, [node, pageDisplayNameInput, domApi]);\n\n  const handleReset = React.useCallback(() => {\n    domApi.update((dom: appDom.AppDom) =>\n      appDom.setNodeNamespacedProp(dom, node, 'attributes', 'displayName', undefined),\n    );\n  }, [node, domApi]);\n\n  const handleKeyPress = React.useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (event.code === 'Enter') {\n        handleCommit();\n      }\n    },\n    [handleCommit],\n  );\n\n  return (\n    <TextField\n      fullWidth\n      label=\"Display name\"\n      value={pageDisplayNameInput}\n      onChange={handlePageDisplayNameChange}\n      onBlur={handleCommit}\n      onKeyDown={handleKeyPress}\n      error={!pageDisplayNameInput}\n      helperText={validateInput(pageDisplayNameInput)}\n      slotProps={{\n        input: {\n          endAdornment:\n            pageDisplayNameInput === node.attributes.displayName ? (\n              <InputAdornment position=\"end\">\n                <Tooltip title=\"Reset to default value\">\n                  <IconButton onClick={handleReset} edge=\"end\">\n                    <ResetIcon />\n                  </IconButton>\n                </Tooltip>\n              </InputAdornment>\n            ) : null,\n        },\n      }}\n    />\n  );\n}\n","import * as React from 'react';\nimport Alert, { AlertColor } from '@mui/material/Alert';\nimport Button from '@mui/material/Button';\nimport Chip from '@mui/material/Chip';\nimport Tooltip from '@mui/material/Tooltip';\nimport { styled, SxProps } from '@mui/material';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport { UPGRADE_URL } from '../../constants';\n\nconst AlertRoot = styled(Alert)({\n  '.MuiAlert-action': {\n    paddingTop: 0,\n  },\n});\n\nexport interface UpgradeAlertProps {\n  sx?: SxProps;\n  type?: AlertColor;\n  action?: boolean;\n  message?: string;\n}\n\nexport function UpgradeAlert({ sx, type, action, message }: UpgradeAlertProps) {\n  return (\n    <AlertRoot\n      severity={type ?? 'info'}\n      sx={sx}\n      action={\n        action ? (\n          <Button\n            variant=\"text\"\n            size=\"small\"\n            href={UPGRADE_URL}\n            target=\"_blank\"\n            rel=\"noopener\"\n            endIcon={<OpenInNewIcon fontSize=\"small\" />}\n          >\n            Upgrade\n          </Button>\n        ) : null\n      }\n    >\n      {message}\n    </AlertRoot>\n  );\n}\n\nexport interface UpgradeChipProps {\n  sx?: SxProps;\n  message?: string;\n  url?: string;\n}\n\nexport function UpgradeChip({\n  sx,\n  message = `This feature requires a paid plan.`,\n  url = UPGRADE_URL,\n}: UpgradeChipProps) {\n  return (\n    <Tooltip title={`${message} Click to learn more.`}>\n      <Chip\n        variant=\"outlined\"\n        color=\"primary\"\n        component=\"a\"\n        href={url}\n        target=\"_blank\"\n        rel=\"noopener\"\n        size=\"small\"\n        clickable\n        label=\"Pro\"\n        sx={sx}\n      />\n    </Tooltip>\n  );\n}\n","import { Stack, styled, Typography, Divider } from '@mui/material';\nimport * as React from 'react';\n// TODO: Remove lodash-es import here\n// eslint-disable-next-line no-restricted-imports\nimport { groupBy } from 'lodash-es';\nimport {\n  ArgTypeDefinition,\n  ArgTypeDefinitions,\n  ComponentConfig,\n  LiveBinding,\n} from '@toolpad/studio-runtime';\nimport { ExactEntriesOf } from '@toolpad/utils/types';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport Box from '@mui/system/Box';\nimport NodeAttributeEditor from './NodeAttributeEditor';\nimport { usePageEditorState } from './PageEditorProvider';\nimport { useToolpadComponent } from '../toolpadComponents';\nimport { getElementNodeComponentId } from '../../../runtime/toolpadComponents';\nimport {\n  layoutBoxArgTypes,\n  LAYOUT_DIRECTION_BOTH,\n  LAYOUT_DIRECTION_HORIZONTAL,\n  LAYOUT_DIRECTION_VERTICAL,\n} from '../../../runtime/toolpadComponents/layoutBox';\nimport ElementContext from '../ElementContext';\nimport MarkdownTooltip from '../../../components/MarkdownTooltip';\n\nconst classes = {\n  control: 'Toolpad_Control',\n  sectionHeading: 'Toolpad_ControlsSectionHeading',\n};\n\nconst ComponentEditorRoot = styled('div')(({ theme }) => ({\n  [`& .${classes.control}`]: {\n    margin: theme.spacing(0, 0),\n  },\n  [`& .${classes.sectionHeading}`]: {\n    margin: theme.spacing(0, 0, -0.5, 0),\n  },\n}));\n\nfunction shouldRenderControl<P extends object>(\n  propTypeDef: ArgTypeDefinition<P>,\n  propName: keyof P,\n  props: P,\n) {\n  if (propTypeDef.type === 'element' || propTypeDef.type === 'template') {\n    return (\n      propTypeDef.control?.type !== 'slot' &&\n      propTypeDef.control?.type !== 'slots' &&\n      propTypeDef.control?.type !== 'layoutSlot'\n    );\n  }\n\n  if (typeof propTypeDef.visible === 'boolean') {\n    return propTypeDef.visible;\n  }\n\n  if (typeof propTypeDef.visible === 'function') {\n    return propTypeDef.visible(props);\n  }\n\n  return true;\n}\n\ninterface ComponentPropsEditorProps<P extends object> {\n  node: appDom.ElementNode<P>;\n  bindings: Partial<Record<string, LiveBinding>>;\n  componentConfig: ComponentConfig<P>;\n}\n\nfunction ComponentPropsEditor<P extends object>({\n  componentConfig,\n  bindings,\n  node,\n}: ComponentPropsEditorProps<P>) {\n  const { layoutDirection } = componentConfig;\n\n  const hasLayoutHorizontalControls =\n    layoutDirection === LAYOUT_DIRECTION_HORIZONTAL || layoutDirection === LAYOUT_DIRECTION_BOTH;\n  const hasLayoutVerticalControls =\n    layoutDirection === LAYOUT_DIRECTION_VERTICAL || layoutDirection === LAYOUT_DIRECTION_BOTH;\n  const hasLayoutControls = hasLayoutHorizontalControls || hasLayoutVerticalControls;\n\n  const props = React.useMemo(() => {\n    const propsPattern = new RegExp(`(?<=${node.id}.props.)(.*)`);\n    return Object.fromEntries(\n      Object.entries(bindings).map(([key, binding]) => [\n        key.match(propsPattern)?.[0],\n        binding?.value,\n      ]),\n    );\n  }, [bindings, node.id]);\n\n  const argTypesByCategory: Record<string, ExactEntriesOf<ArgTypeDefinitions<P>>> = groupBy(\n    Object.entries(componentConfig.argTypes || {}) as ExactEntriesOf<ArgTypeDefinitions<P>>,\n    ([, propTypeDef]) => propTypeDef?.category || 'properties',\n  );\n\n  return (\n    <React.Fragment>\n      {hasLayoutControls ? (\n        <React.Fragment>\n          <Typography variant=\"overline\" className={classes.sectionHeading}>\n            Layout:\n          </Typography>\n\n          <div className={classes.control}>\n            <Typography variant=\"body2\">Alignment:</Typography>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                flexWrap: 'wrap',\n                gap: 1,\n              }}\n            >\n              {hasLayoutHorizontalControls ? (\n                <NodeAttributeEditor\n                  node={node}\n                  namespace=\"layout\"\n                  name=\"horizontalAlign\"\n                  argType={layoutBoxArgTypes.horizontalAlign}\n                  sx={{ maxWidth: 110 }}\n                />\n              ) : null}\n              {hasLayoutVerticalControls ? (\n                <NodeAttributeEditor\n                  node={node}\n                  namespace=\"layout\"\n                  name=\"verticalAlign\"\n                  argType={layoutBoxArgTypes.verticalAlign}\n                />\n              ) : null}\n            </Box>\n          </div>\n\n          <Divider sx={{ mt: 1 }} />\n        </React.Fragment>\n      ) : null}\n      {Object.entries(argTypesByCategory).map(([category, argTypeEntries]) => (\n        <React.Fragment key={category}>\n          <Typography variant=\"overline\" className={classes.sectionHeading}>\n            {category}:\n          </Typography>\n          {argTypeEntries.map(([propName, propTypeDef]) =>\n            propTypeDef && shouldRenderControl(propTypeDef, propName, props) ? (\n              <div key={propName} className={classes.control}>\n                <NodeAttributeEditor\n                  node={node}\n                  namespace=\"props\"\n                  props={props}\n                  name={propName}\n                  argType={propTypeDef}\n                />\n              </div>\n            ) : null,\n          )}\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  );\n}\n\ninterface SelectedNodeEditorProps {\n  node: appDom.ElementNode;\n}\n\nfunction SelectedNodeEditor({ node }: SelectedNodeEditorProps) {\n  const { bindings, viewState } = usePageEditorState();\n\n  const componentConfig = viewState.nodes[node.id]?.componentConfig || { argTypes: {} };\n\n  const component = useToolpadComponent(getElementNodeComponentId(node));\n\n  const displayName = component?.displayName || '<unknown>';\n\n  return (\n    <ElementContext.Provider value={node}>\n      <Stack direction=\"column\" gap={0}>\n        <MarkdownTooltip placement=\"left\" title={componentConfig.helperText ?? displayName}>\n          <Typography variant=\"body1\">{node.name}</Typography>\n        </MarkdownTooltip>\n        <Divider sx={{ mt: 1 }} />\n        {node ? (\n          <ComponentPropsEditor bindings={bindings} componentConfig={componentConfig} node={node} />\n        ) : null}\n      </Stack>\n    </ElementContext.Provider>\n  );\n}\n\nexport interface ComponentEditorProps {\n  node: appDom.ElementNode;\n  className?: string;\n}\n\nexport default function ComponentEditor({ node, className }: ComponentEditorProps) {\n  return (\n    <ComponentEditorRoot className={className} data-testid=\"component-editor\">\n      <SelectedNodeEditor key={node.id} node={node} />\n    </ComponentEditorRoot>\n  );\n}\n","import * as React from 'react';\nimport {\n  ApplicationVm,\n  ArgTypeDefinition,\n  BindableAttrValue,\n  RuntimeScope,\n  ScopeMeta,\n} from '@toolpad/studio-runtime';\nimport { Alert, Box, SxProps } from '@mui/material';\nimport { useBrowserJsRuntime } from '@toolpad/studio-runtime/jsBrowserRuntime';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { useDomApi } from '../../AppState';\nimport BindableEditor from './BindableEditor';\nimport { usePageEditorState } from './PageEditorProvider';\nimport { getDefaultControl, usePropControlsContext } from '../../propertyControls';\n\nfunction buildScopeMeta(vm: ApplicationVm, bindingScope?: RuntimeScope): ScopeMeta {\n  if (bindingScope?.parentScope) {\n    return {\n      ...buildScopeMeta(vm, bindingScope?.parentScope),\n      ...bindingScope?.meta,\n    };\n  }\n  return bindingScope?.meta ?? {};\n}\n\nexport interface NodeAttributeEditorProps<P extends object, K extends keyof P = keyof P> {\n  node: appDom.AppDomNode;\n  namespace?: string;\n  name: string;\n  argType: ArgTypeDefinition<P, K>;\n  props?: P;\n  sx?: SxProps;\n}\n\nexport default function NodeAttributeEditor<P extends object>({\n  node,\n  namespace = 'attributes',\n  name,\n  argType,\n  props,\n  sx,\n}: NodeAttributeEditorProps<P>) {\n  const domApi = useDomApi();\n\n  const initialPropValue = (node as any)[namespace]?.[name];\n  const [propValue, setPropValue] = React.useState<BindableAttrValue<unknown> | null>(\n    initialPropValue,\n  );\n\n  React.useEffect(() => {\n    setPropValue(initialPropValue);\n  }, [initialPropValue]);\n\n  const handlePropChange = React.useCallback(\n    (newValue: BindableAttrValue<unknown> | null) => {\n      setPropValue(newValue);\n      React.startTransition(() => {\n        domApi.update((draft) =>\n          appDom.setNodeNamespacedProp(draft, node, namespace as any, name, newValue),\n        );\n      });\n    },\n    [node, namespace, name, domApi],\n  );\n\n  const bindingId = `${node.id}${namespace ? `.${namespace}` : ''}.${name}`;\n  const { vm } = usePageEditorState();\n\n  const scopeId = vm.bindingScopes[bindingId];\n  const bindingScope = scopeId ? vm.scopes[scopeId] : undefined;\n\n  const liveBinding = bindingScope?.bindings[bindingId];\n\n  const scopeMeta = React.useMemo(() => buildScopeMeta(vm, bindingScope), [vm, bindingScope]);\n\n  const propTypeControls = usePropControlsContext();\n  const Control = getDefaultControl(propTypeControls, argType, props);\n\n  // NOTE: Doesn't make much sense to bind controlled props. In the future we might opt\n  // to make them bindable to other controlled props only\n  const isDisabled = !!argType.onChangeProp;\n\n  const isBindable = !isDisabled && namespace !== 'layout' && argType.control?.bindable !== false;\n\n  const jsBrowserRuntime = useBrowserJsRuntime();\n\n  return Control ? (\n    <BindableEditor\n      liveBinding={liveBinding}\n      globalScope={bindingScope?.values ?? {}}\n      globalScopeMeta={scopeMeta}\n      label={argType.control?.hideLabel ? '' : argType.label || name}\n      bindable={isBindable}\n      disabled={isDisabled}\n      propType={argType}\n      jsRuntime={jsBrowserRuntime}\n      renderControl={(params) => (\n        <Box sx={{ flex: 1, minWidth: 0 }}>\n          <Control nodeId={node.id} {...params} propType={argType} />\n        </Box>\n      )}\n      value={propValue}\n      onChange={handlePropChange}\n      sx={sx}\n    />\n  ) : (\n    <Alert severity=\"warning\">\n      {`No control for '${name}' (type '${argType.type}' ${\n        argType.control ? `, control: '${argType.control.type}'` : ''\n      })`}\n    </Alert>\n  );\n}\n","import {\n  Stack,\n  SxProps,\n  inputBaseClasses,\n  formLabelClasses,\n  typographyClasses,\n  styled,\n} from '@mui/material';\nimport * as React from 'react';\nimport {\n  BindableAttrValue,\n  PropValueType,\n  LiveBinding,\n  JsRuntime,\n  ScopeMeta,\n  EnvAttrValue,\n  ArgTypeDefinition,\n} from '@toolpad/studio-runtime';\nimport { WithControlledProp } from '@toolpad/utils/types';\nimport { getBindingType } from '../../../runtime/bindings';\nimport { getDefaultControl, usePropControlsContext } from '../../propertyControls';\n// eslint-disable-next-line import/no-cycle\nimport { BindingEditor } from '../BindingEditor';\n\nconst EditorRoot = styled(Stack)({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n\n  [`& .${inputBaseClasses.root}`]: { fontSize: 12 },\n  [`& .${formLabelClasses.root}`]: { fontSize: 12 },\n  [`& .${typographyClasses.root}`]: { fontSize: 12 },\n});\n\nexport interface RenderControlParams<V> extends WithControlledProp<V> {\n  label: string;\n  propType: PropValueType;\n  disabled: boolean;\n}\n\nexport interface BindableEditorProps<V> extends WithControlledProp<BindableAttrValue<V> | null> {\n  label: string;\n  bindable?: boolean;\n  disabled?: boolean;\n  jsRuntime: JsRuntime;\n  propType: ArgTypeDefinition<any>;\n  renderControl?: (params: RenderControlParams<any>) => React.ReactNode;\n  liveBinding?: LiveBinding;\n  globalScope?: Record<string, unknown>;\n  globalScopeMeta: ScopeMeta;\n  env?: Record<string, string | undefined>;\n  declaredEnvKeys?: string[];\n  sx?: SxProps;\n}\n\nexport default function BindableEditor<V>({\n  label,\n  bindable = true,\n  disabled,\n  propType,\n  renderControl: renderControlProp,\n  value,\n  jsRuntime,\n  onChange,\n  liveBinding,\n  globalScope = {},\n  globalScopeMeta = {},\n  env,\n  declaredEnvKeys,\n  sx,\n}: BindableEditorProps<V>) {\n  const propTypeControls = usePropControlsContext();\n\n  const renderDefaultControl = React.useCallback(\n    (params: RenderControlParams<any>) => {\n      const Control = getDefaultControl(propTypeControls, params.propType);\n      return Control ? <Control {...params} /> : null;\n    },\n    [propTypeControls],\n  );\n\n  const renderControl = renderControlProp || renderDefaultControl;\n\n  const handlePropConstChange = React.useCallback((newValue: V) => onChange(newValue), [onChange]);\n\n  const valueBindingType = value && getBindingType(value);\n\n  const initConstValue = React.useCallback(() => {\n    if (valueBindingType && valueBindingType === 'const') {\n      return value;\n    }\n\n    if (valueBindingType && valueBindingType === 'env') {\n      return (value as EnvAttrValue).$$env;\n    }\n\n    return liveBinding?.value;\n  }, [liveBinding, value, valueBindingType]);\n\n  const constValue = React.useMemo(initConstValue, [value, initConstValue]);\n\n  const hasBinding = value && valueBindingType !== 'const';\n\n  return (\n    <EditorRoot sx={sx}>\n      {renderControl({\n        label,\n        propType,\n        disabled: disabled || !!hasBinding,\n        value: constValue,\n        onChange: handlePropConstChange,\n      })}\n      {propType.control?.bindable === false ? null : (\n        <BindingEditor<V>\n          globalScope={globalScope}\n          globalScopeMeta={globalScopeMeta}\n          label={label}\n          jsRuntime={jsRuntime}\n          propType={propType}\n          value={value}\n          onChange={onChange}\n          disabled={disabled || !bindable}\n          hidden={!bindable}\n          liveBinding={liveBinding}\n          env={env}\n          declaredEnvKeys={declaredEnvKeys}\n        />\n      )}\n    </EditorRoot>\n  );\n}\n","import { ArgTypeDefinition, ArgControlSpec, PropValueType } from '@toolpad/studio-runtime';\nimport { createProvidedContext } from '@toolpad/utils/react';\nimport string from './string';\nimport boolean from './boolean';\nimport number from './number';\nimport select from './select';\nimport json from './json';\nimport event from './event';\nimport { EditorProps } from '../../types';\n\nexport type PropTypeControls = {\n  [key in ArgControlSpec['type']]?: React.FC<EditorProps<any>>;\n};\n\nexport const [usePropControlsContext, PropControlsContextProvider] =\n  createProvidedContext<PropTypeControls>('PropControls');\n\nfunction getDefaultControlForType(propType: PropValueType): React.FC<EditorProps<any>> | null {\n  switch (propType.type) {\n    case 'string':\n      return propType.enum ? select : string;\n    case 'number':\n      return number;\n    case 'boolean':\n      return boolean;\n    case 'object':\n      return json;\n    case 'array':\n      return json;\n    case 'event':\n      return event;\n    default:\n      return null;\n  }\n}\n\nconst modePropTypeMap = new Map<string, ArgControlSpec['type']>([\n  // Text component modes\n  ['text', 'string'],\n  ['markdown', 'markdown'],\n  ['link', 'string'],\n]);\n\nexport function getDefaultControl<P extends { [key in string]?: unknown }>(\n  controls: PropTypeControls,\n  argType: ArgTypeDefinition<P>,\n  liveProps?: P,\n): React.FC<EditorProps<any>> | null {\n  if (argType.control) {\n    if (argType.control.type === 'markdown') {\n      if (liveProps) {\n        const { mode } = liveProps;\n        if (mode && typeof mode === 'string') {\n          const mappedControlFromMode = modePropTypeMap.get(mode);\n          if (!mappedControlFromMode) {\n            return null;\n          }\n          return controls[mappedControlFromMode] ?? null;\n        }\n      }\n    }\n    return controls[argType.control.type] ?? getDefaultControlForType(argType);\n  }\n\n  return getDefaultControlForType(argType);\n}\n","import { TextField } from '@mui/material';\nimport * as React from 'react';\nimport type { EditorProps } from '../../types';\nimport PropertyControl from '../../components/PropertyControl';\n\nfunction StringPropEditor({ propType, label, value, onChange, disabled }: EditorProps<string>) {\n  const handleChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      onChange(event.target.value === propType.default ? undefined : event.target.value);\n    },\n    [onChange, propType.default],\n  );\n\n  return (\n    <PropertyControl propType={propType}>\n      <TextField\n        fullWidth\n        value={value ?? ''}\n        disabled={disabled}\n        onChange={handleChange}\n        label={label}\n      />\n    </PropertyControl>\n  );\n}\n\nexport default StringPropEditor;\n","import * as React from 'react';\nimport { PropValueType } from '@toolpad/studio-runtime';\nimport MarkdownTooltip from './MarkdownTooltip';\n\nexport interface PropertyControlProps {\n  propType: PropValueType;\n  children: React.ReactElement;\n}\n\nexport default function PropertyControl({ propType, children }: PropertyControlProps) {\n  return (\n    <MarkdownTooltip placement=\"left\" title={propType.helperText ?? ''}>\n      {children}\n    </MarkdownTooltip>\n  );\n}\n","import { Tooltip, Link as MuiLink, TooltipProps } from '@mui/material';\nimport Markdown from 'markdown-to-jsx';\nimport * as React from 'react';\n\nexport interface MarkdownTooltipProps extends TooltipProps {\n  title: string;\n  children: React.ReactElement<any, any>;\n}\n\nexport default function MarkdownTooltip({ title, children, ...props }: MarkdownTooltipProps) {\n  const renderedTitle: React.ReactNode = React.useMemo(\n    () =>\n      title ? (\n        <Markdown\n          options={{\n            overrides: {\n              a: {\n                component: MuiLink,\n                props: {\n                  target: '_blank',\n                },\n              },\n            },\n          }}\n        >\n          {title}\n        </Markdown>\n      ) : null,\n    [title],\n  );\n  return (\n    <Tooltip title={renderedTitle} {...props}>\n      {children}\n    </Tooltip>\n  );\n}\n","import { Checkbox, FormControlLabel } from '@mui/material';\nimport * as React from 'react';\nimport type { EditorProps } from '../../types';\nimport PropertyControl from '../../components/PropertyControl';\n\nfunction BooleanPropEditor({ propType, label, value, onChange, disabled }: EditorProps<boolean>) {\n  const handleChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      onChange(event.target.checked);\n    },\n    [onChange],\n  );\n\n  return (\n    <PropertyControl propType={propType}>\n      <FormControlLabel\n        control={<Checkbox checked={!!value} disabled={disabled} onChange={handleChange} />}\n        label={label}\n      />\n    </PropertyControl>\n  );\n}\n\nexport default BooleanPropEditor;\n","import { TextField } from '@mui/material';\nimport { NumberValueType } from '@toolpad/studio-runtime';\nimport * as React from 'react';\nimport type { EditorProps } from '../../types';\nimport PropertyControl from '../../components/PropertyControl';\n\nfunction NumberPropEditor({ label, value, onChange, disabled, propType }: EditorProps<number>) {\n  const { minimum, maximum } = propType as NumberValueType;\n\n  const [inputValue, setInputValue] = React.useState(value);\n\n  const handleChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue = Number(event.target.value);\n\n      setInputValue(newValue);\n\n      if (minimum && newValue < minimum) {\n        onChange(minimum);\n      } else if (maximum && newValue > maximum) {\n        onChange(maximum);\n      } else {\n        onChange(newValue);\n      }\n    },\n    [maximum, minimum, onChange],\n  );\n\n  const handleBlur = React.useCallback(\n    (event: React.FocusEvent<HTMLInputElement>) => {\n      const blurValue = Number(event.target.value);\n\n      if (minimum && blurValue < minimum) {\n        setInputValue(minimum);\n      } else if (maximum && blurValue > maximum) {\n        setInputValue(maximum);\n      }\n    },\n    [maximum, minimum],\n  );\n\n  return (\n    <PropertyControl propType={propType}>\n      <TextField\n        fullWidth\n        value={String(inputValue ?? 0)}\n        disabled={disabled}\n        type=\"number\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        label={label}\n        slotProps={{\n          htmlInput: { step: 'any' },\n        }}\n      />\n    </PropertyControl>\n  );\n}\n\nexport default NumberPropEditor;\n","import { MenuItem, TextField } from '@mui/material';\nimport * as React from 'react';\nimport type { EditorProps } from '../../types';\nimport PropertyControl from '../../components/PropertyControl';\n\nfunction SelectPropEditor({ label, propType, value, onChange, disabled }: EditorProps<string>) {\n  const items = propType.type === 'string' ? (propType.enum ?? []) : [];\n  const handleChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      onChange(event.target.value || undefined);\n    },\n    [onChange],\n  );\n\n  const enumLabels: Record<string, string> =\n    propType.type === 'string' ? (propType.enumLabels ?? {}) : {};\n\n  return (\n    <PropertyControl propType={propType}>\n      <TextField\n        select\n        fullWidth\n        label={label}\n        value={value ?? ''}\n        disabled={disabled}\n        onChange={handleChange}\n      >\n        {typeof propType.default === 'undefined' ? <MenuItem value=\"\">-</MenuItem> : null}\n        {items.map((item) => (\n          <MenuItem key={item} value={item}>\n            {enumLabels[item] || item}\n          </MenuItem>\n        ))}\n      </TextField>\n    </PropertyControl>\n  );\n}\n\nexport default SelectPropEditor;\n","import {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Skeleton,\n} from '@mui/material';\nimport * as React from 'react';\nimport JSON5 from 'json5';\nimport type { EditorProps } from '../../types';\nimport useShortcut from '../../utils/useShortcut';\nimport lazyComponent from '../../utils/lazyComponent';\nimport PropertyControl from '../../components/PropertyControl';\n\nconst JsonEditor = lazyComponent(() => import('../../components/JsonEditor'), {\n  noSsr: true,\n  fallback: <Skeleton variant=\"rectangular\" height=\"100%\" />,\n});\n\nfunction JsonPropEditor({ label, propType, value, onChange, disabled }: EditorProps<any>) {\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n\n  const valueAsString = React.useMemo(() => JSON.stringify(value, null, 2), [value]);\n  const [input, setInput] = React.useState(valueAsString);\n  React.useEffect(() => setInput(valueAsString), [valueAsString]);\n\n  const normalizedInitial = React.useMemo(() => JSON.stringify(value), [value]);\n  const normalizedInput = React.useMemo(() => {\n    if (!input) {\n      return '';\n    }\n    try {\n      return JSON.stringify(JSON5.parse(input));\n    } catch {\n      return null;\n    }\n  }, [input]);\n\n  const handleSave = React.useCallback(() => {\n    const newValue = input === '' ? undefined : JSON5.parse(input);\n    onChange(newValue);\n  }, [onChange, input]);\n\n  const [schemaUri, setSchemaUri] = React.useState<string | undefined>(undefined);\n\n  React.useEffect(() => {\n    if (propType.type !== 'object' && propType.type !== 'array') {\n      return () => {};\n    }\n\n    if (!propType.schema) {\n      return () => {};\n    }\n\n    const blob = new Blob([JSON.stringify(propType.schema, null, 2)], {\n      type: 'application/json',\n    });\n\n    const uri = URL.createObjectURL(blob);\n\n    setSchemaUri(uri);\n\n    return () => {\n      URL.revokeObjectURL(uri);\n    };\n  }, [propType]);\n\n  useShortcut({ key: 's', metaKey: true, disabled: !dialogOpen }, handleSave);\n\n  return (\n    <React.Fragment>\n      <PropertyControl propType={propType}>\n        <Button\n          variant=\"outlined\"\n          color=\"inherit\"\n          sx={{ my: 0.5 }}\n          fullWidth\n          onClick={() => setDialogOpen(true)}\n        >\n          {label}\n        </Button>\n      </PropertyControl>\n      <Dialog fullWidth open={dialogOpen} onClose={() => setDialogOpen(false)}>\n        <DialogTitle>Edit JSON</DialogTitle>\n        <DialogContent>\n          <Box sx={{ height: 200 }}>\n            <JsonEditor\n              value={input}\n              onChange={(newValue = '') => setInput(newValue)}\n              schemaUri={schemaUri}\n              disabled={disabled}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"inherit\" variant=\"text\" onClick={() => setDialogOpen(false)}>\n            Cancel\n          </Button>\n          <Button\n            disabled={normalizedInput === null || normalizedInitial === normalizedInput}\n            onClick={handleSave}\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nexport default JsonPropEditor;\n","import * as React from 'react';\nimport NoSsr from '../components/NoSsr';\n\ninterface LazyComponentOptions {\n  noSsr?: boolean;\n  fallback?: React.ReactNode;\n}\n\n/**\n * Extends React.lazy with automatic fallback support and adds the ability to exclude SSR.\n */\nexport default function lazyComponent<T extends React.ComponentType<any>>(\n  importComponent: () => Promise<{ default: T }>,\n  { noSsr, fallback }: LazyComponentOptions = {},\n): React.ComponentType<React.ComponentPropsWithRef<T>> {\n  const LazyComponent: any = React.lazy(importComponent);\n\n  return React.forwardRef<T, React.ComponentPropsWithoutRef<T>>((props, ref) => {\n    let content = <LazyComponent ref={ref} {...props} />;\n\n    if (noSsr) {\n      content = <NoSsr>{content}</NoSsr>;\n    }\n\n    if (fallback) {\n      content = <React.Suspense fallback={fallback}>{content}</React.Suspense>;\n    }\n\n    return content;\n  });\n}\n","import * as React from 'react';\nimport useSsr from '@toolpad/utils/hooks/useSsr';\n\nexport interface NoSsrProps {\n  children?: React.ReactNode;\n  fallback?: React.ReactNode;\n}\n\n/**\n * Alternative version of MUI NoSsr that avoids state updates during layout effects.\n */\nexport default function NoSsr({ children, fallback = null }: NoSsrProps) {\n  const isSsr = useSsr();\n\n  return <React.Fragment>{isSsr ? fallback : children}</React.Fragment>;\n}\n","import * as React from 'react';\nimport { Typography } from '@mui/material';\nimport { EditorProps } from '../../types';\nimport PropertyControl from '../../components/PropertyControl';\n\nfunction Editor({ propType, label }: EditorProps<any>) {\n  // No editor, bindings only\n  return (\n    <PropertyControl propType={propType}>\n      <Typography>{label}</Typography>\n    </PropertyControl>\n  );\n}\n\nexport default Editor;\n","import * as React from 'react';\nimport {\n  Box,\n  Checkbox,\n  Stack,\n  Toolbar,\n  Tooltip,\n  Typography,\n  styled,\n  tooltipClasses,\n  TooltipProps,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Tab,\n  TextField,\n  MenuItem,\n  Autocomplete,\n  Link,\n} from '@mui/material';\nimport LinkIcon from '@mui/icons-material/Link';\nimport AddLinkIcon from '@mui/icons-material/AddLink';\nimport {\n  LiveBinding,\n  JsExpressionAttrValue,\n  JsExpressionAction,\n  ScopeMeta,\n  ScopeMetaField,\n  JsRuntime,\n  PropValueType,\n  BindableAttrValue,\n  NavigationAction,\n  EnvAttrValue,\n} from '@toolpad/studio-runtime';\nimport { createProvidedContext } from '@toolpad/utils/react';\nimport { TabContext, TabList } from '@mui/lab';\nimport useDebounced from '@toolpad/utils/hooks/useDebounced';\nimport { errorFrom } from '@toolpad/utils/errors';\nimport useLatest from '@toolpad/utils/hooks/useLatest';\nimport { WithControlledProp, Maybe } from '@toolpad/utils/types';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { JsExpressionEditor } from './PageEditor/JsExpressionEditor';\nimport JsonView from '../../components/JsonView';\nimport { useEvaluateLiveBinding } from './useEvaluateLiveBinding';\nimport GlobalScopeExplorer from './GlobalScopeExplorer';\n\nimport { tryFormatExpression } from '../../utils/prettier';\nimport useShortcut from '../../utils/useShortcut';\nimport useUnsavedChangesConfirm from '../hooks/useUnsavedChangesConfirm';\n\nimport TabPanel from '../../components/TabPanel';\n\nimport { useAppState } from '../AppState';\nimport { getBindingType, getBindingValue } from '../../runtime/bindings';\n\nimport { useProjectApi } from '../../projectApi';\n\n// eslint-disable-next-line import/no-cycle\nimport BindableEditor from './PageEditor/BindableEditor';\n\ninterface BindingEditorContext {\n  label: string;\n  globalScope: Record<string, unknown>;\n  globalScopeMeta: ScopeMeta;\n  jsRuntime: JsRuntime;\n  disabled?: boolean;\n  propType?: PropValueType;\n  liveBinding?: LiveBinding;\n  env: Record<string, string | undefined>;\n  declaredEnvKeys: string[];\n}\n\nconst [useBindingEditorContext, BindingEditorContextProvider] =\n  createProvidedContext<BindingEditorContext>('BindingEditor');\n\nconst ErrorTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.error.dark,\n  },\n}));\n\ninterface JsExpressionBindingEditorProps extends WithControlledProp<JsExpressionAttrValue | null> {\n  globalScope: Record<string, unknown>;\n  globalScopeMeta: ScopeMeta;\n}\n\nfunction JsExpressionBindingEditor({\n  globalScope,\n  globalScopeMeta,\n  value,\n  onChange,\n}: JsExpressionBindingEditorProps) {\n  const handleChange = React.useCallback(\n    (newValue: string) => onChange({ $$jsExpression: newValue }),\n    [onChange],\n  );\n\n  return (\n    <JsExpressionEditor\n      globalScope={globalScope}\n      globalScopeMeta={globalScopeMeta}\n      value={value?.$$jsExpression || ''}\n      onChange={handleChange}\n      autoFocus\n    />\n  );\n}\n\ninterface JsExpressionPreviewProps {\n  jsRuntime: JsRuntime;\n  input: BindableAttrValue<any> | null;\n  globalScope: Record<string, unknown>;\n}\n\nfunction JsExpressionPreview({ jsRuntime, input, globalScope }: JsExpressionPreviewProps) {\n  const previewValue: LiveBinding = useEvaluateLiveBinding({ jsRuntime, input, globalScope });\n\n  const lastGoodPreview = useLatest(previewValue?.error ? undefined : previewValue);\n  const previewErrorDebounced = useDebounced(previewValue?.error, 500);\n  const previewError = previewValue?.error && previewErrorDebounced;\n\n  return (\n    <React.Fragment>\n      <Toolbar disableGutters>\n        <Typography color=\"error\">{previewError?.message}</Typography>\n      </Toolbar>\n      <JsonView sx={{ flex: 1 }} src={lastGoodPreview?.value} />\n    </React.Fragment>\n  );\n}\n\nexport interface EnvBindingEditorProps extends WithControlledProp<EnvAttrValue | null> {}\n\nexport function EnvBindingEditor({ value, onChange }: EnvBindingEditorProps) {\n  const { declaredEnvKeys, env } = useBindingEditorContext();\n  const handleInputChange = React.useCallback(\n    (event: React.SyntheticEvent, newValue: string | null) => {\n      onChange({ $$env: newValue || '' });\n    },\n    [onChange],\n  );\n\n  return (\n    <Box sx={{ my: 1 }}>\n      <Typography>Assign to an environment variable</Typography>\n      <Autocomplete\n        freeSolo\n        options={declaredEnvKeys}\n        value={value?.$$env || ''}\n        onInputChange={handleInputChange}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            fullWidth\n            sx={{ my: 3 }}\n            label=\"Environment variable name\"\n            helperText={\n              value?.$$env && !declaredEnvKeys.includes(value.$$env)\n                ? 'Warning: This variable is not in your env file!'\n                : ''\n            }\n          />\n        )}\n      />\n      Value:\n      <JsonView sx={{ flex: 1 }} src={value?.$$env ? env[value?.$$env] : undefined} />\n    </Box>\n  );\n}\n\nfunction getValueBindingTab(value: Maybe<BindableAttrValue<any>>) {\n  if (value?.$$env === undefined) {\n    return 'jsExpression';\n  }\n\n  return 'env';\n}\n\nexport interface ValueBindingEditorProps\n  extends WithControlledProp<JsExpressionAttrValue | EnvAttrValue | null> {\n  error: unknown;\n}\n\nexport function ValueBindingEditor({ value, onChange, error }: ValueBindingEditorProps) {\n  const {\n    label,\n    globalScope,\n    globalScopeMeta = {},\n    jsRuntime,\n    propType,\n    env,\n  } = useBindingEditorContext();\n\n  const hasEnv = Boolean(env);\n\n  const [activeTab, setActiveTab] = React.useState<BindableType>(getValueBindingTab(value));\n  React.useEffect(() => {\n    setActiveTab(getValueBindingTab(value));\n  }, [value]);\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: BindableType) => {\n    setActiveTab(newValue);\n  };\n\n  const jsExpressionBindingEditor = (\n    <Stack direction=\"row\" sx={{ height: 400, gap: 2, my: hasEnv ? 3 : 0 }}>\n      <GlobalScopeExplorer sx={{ width: 250 }} value={globalScope} meta={globalScopeMeta} />\n\n      <Box\n        sx={{\n          height: '100%',\n          display: 'flex',\n          flex: 1,\n          flexDirection: 'column',\n          overflow: 'hidden',\n        }}\n      >\n        <Typography sx={{ mb: 2 }}>\n          Make the &quot;{label}&quot; property dynamic with a JavaScript expression. This property\n          expects a type: <code>{propType?.type || 'any'}</code>.\n        </Typography>\n        <JsExpressionBindingEditor\n          globalScope={globalScope}\n          globalScopeMeta={globalScopeMeta}\n          value={\n            (value as JsExpressionAttrValue)?.$$jsExpression\n              ? (value as JsExpressionAttrValue)\n              : null\n          }\n          onChange={onChange}\n        />\n        {error ? (\n          <Box\n            sx={{\n              marginTop: '20px',\n            }}\n          >\n            <Typography sx={{ mb: 2, color: 'red' }}>\n              Error while reading the prettier configuration:\n              {errorFrom(error).message ??\n                'The prettier config could not be loaded and therefore the code would not be formatted'}\n            </Typography>\n          </Box>\n        ) : null}\n        <JsExpressionPreview jsRuntime={jsRuntime} input={value} globalScope={globalScope} />\n      </Box>\n    </Stack>\n  );\n\n  const envBindingEditor = (\n    <EnvBindingEditor\n      value={(value as EnvAttrValue)?.$$env !== undefined ? (value as EnvAttrValue) : null}\n      onChange={onChange}\n    />\n  );\n\n  return (\n    <TabContext value={activeTab}>\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <TabList onChange={handleTabChange} aria-label=\"Choose action kind \">\n          <Tab label=\"JS expression\" value=\"jsExpression\" />\n          <Tab label=\"Environment variable\" value=\"env\" />\n        </TabList>\n      </Box>\n      <TabPanel value=\"jsExpression\" disableGutters>\n        <Box sx={{ my: 1 }}>\n          <Typography>\n            Bind to a JavaScript expression. Read more about binding in the{' '}\n            <Link\n              href=\"https://mui.com/toolpad/studio/concepts/data-binding/\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              docs\n            </Link>\n            .\n          </Typography>\n          {jsExpressionBindingEditor}\n        </Box>\n      </TabPanel>\n      <TabPanel value=\"env\" disableGutters>\n        {envBindingEditor}\n      </TabPanel>\n    </TabContext>\n  );\n}\n\nexport interface JsExpressionActionEditorProps\n  extends WithControlledProp<JsExpressionAction | null> {}\n\nfunction JsExpressionActionEditor({ value, onChange }: JsExpressionActionEditorProps) {\n  const { globalScope, globalScopeMeta } = useBindingEditorContext();\n  const handleCodeChange = React.useCallback(\n    (newValue: string) => onChange({ $$jsExpressionAction: newValue }),\n    [onChange],\n  );\n\n  return (\n    <Box sx={{ my: 1 }}>\n      <Typography>\n        Run code when this event fires. Read more in the{' '}\n        <Link\n          href=\"https://mui.com/toolpad/studio/concepts/event-handling/#js-expression-actions\"\n          target=\"_blank\"\n          rel=\"noopener\"\n        >\n          docs\n        </Link>\n        .\n      </Typography>\n      <Box\n        sx={{\n          my: 3,\n          display: 'flex',\n          flexDirection: 'row',\n          maxHeight: 250,\n          alignItems: 'stretch',\n          gap: 2,\n        }}\n      >\n        <GlobalScopeExplorer sx={{ width: 250 }} value={globalScope} meta={globalScopeMeta} />\n\n        <JsExpressionEditor\n          sx={{ flex: 1 }}\n          globalScope={globalScope}\n          globalScopeMeta={globalScopeMeta}\n          value={value?.$$jsExpressionAction || ''}\n          onChange={handleCodeChange}\n          functionBody\n          topLevelAwait\n        />\n      </Box>\n    </Box>\n  );\n}\n\nexport interface NavigationActionParameterEditorProps\n  extends WithControlledProp<BindableAttrValue<string> | null> {\n  label: string;\n}\n\nfunction NavigationActionParameterEditor({\n  label,\n  value,\n  onChange,\n}: NavigationActionParameterEditorProps) {\n  const { jsRuntime, globalScope, globalScopeMeta } = useBindingEditorContext();\n\n  const liveBinding = useEvaluateLiveBinding({\n    jsRuntime,\n    input: value,\n    globalScope,\n  });\n\n  return (\n    <BindableEditor<string>\n      liveBinding={liveBinding}\n      jsRuntime={jsRuntime}\n      globalScope={globalScope}\n      globalScopeMeta={globalScopeMeta}\n      label={label}\n      propType={{ type: 'string' }}\n      value={value || null}\n      onChange={onChange}\n    />\n  );\n}\n\nexport interface NavigationActionEditorProps extends WithControlledProp<NavigationAction | null> {}\n\nfunction NavigationActionEditor({ value, onChange }: NavigationActionEditorProps) {\n  const { dom } = useAppState();\n  const root = appDom.getApp(dom);\n  const { pages = [] } = appDom.getChildNodes(dom, root);\n\n  const getDefaultActionParameters = React.useCallback((page: appDom.PageNode) => {\n    const defaultPageParameters = page.attributes.parameters || [];\n\n    return Object.fromEntries(defaultPageParameters);\n  }, []);\n\n  const handlePageChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const pageName = event.target.value;\n      const page = appDom.getPageByName(dom, pageName);\n\n      const defaultActionParameters =\n        page && appDom.isPage(page) ? getDefaultActionParameters(page) : {};\n\n      onChange({\n        $$navigationAction: {\n          page: pageName,\n          parameters: defaultActionParameters,\n        },\n      });\n    },\n    [dom, getDefaultActionParameters, onChange],\n  );\n\n  const actionPageAliasOrName = value?.$$navigationAction?.page || null;\n  const actionParameters = React.useMemo(\n    () => value?.$$navigationAction.parameters || {},\n    [value?.$$navigationAction.parameters],\n  );\n\n  const actionPage =\n    pages.find((availablePage) => availablePage.name === actionPageAliasOrName) ||\n    pages.find((availablePage) =>\n      availablePage.attributes.alias?.some((alias) => alias === actionPageAliasOrName),\n    );\n\n  const handleActionParameterChange = React.useCallback(\n    (actionParameterName: string) => (newValue: BindableAttrValue<string> | null) => {\n      if (actionPageAliasOrName) {\n        onChange({\n          $$navigationAction: {\n            page: actionPageAliasOrName,\n            parameters: {\n              ...actionParameters,\n              ...(newValue ? { [actionParameterName]: newValue } : {}),\n            },\n          },\n        });\n      }\n    },\n    [actionPageAliasOrName, actionParameters, onChange],\n  );\n\n  const hasPagesAvailable = pages.length > 0;\n\n  const defaultActionParameters = actionPage ? getDefaultActionParameters(actionPage) : {};\n\n  const actionParameterEntries = Object.entries(actionParameters || defaultActionParameters);\n\n  return (\n    <Box sx={{ my: 1 }}>\n      <Typography>Navigate to a page on this event</Typography>\n      <TextField\n        fullWidth\n        sx={{ my: 3 }}\n        label=\"Select a page\"\n        select\n        value={actionPageAliasOrName || ''}\n        onChange={handlePageChange}\n        disabled={!hasPagesAvailable}\n        helperText={hasPagesAvailable ? null : 'No other pages available'}\n      >\n        {pages.map((page) => (\n          <MenuItem key={page.name} value={page.name}>\n            {page.name}\n          </MenuItem>\n        ))}\n      </TextField>\n      {actionParameterEntries.length > 0 ? (\n        <React.Fragment>\n          <Typography variant=\"overline\">Page parameters:</Typography>\n          {Object.entries(actionParameters || defaultActionParameters).map((actionParameter) => {\n            const [actionParameterName, actionParameterValue] = actionParameter;\n\n            return (\n              <NavigationActionParameterEditor\n                key={actionParameterName}\n                label={actionParameterName}\n                value={actionParameterValue as BindableAttrValue<string>}\n                onChange={handleActionParameterChange(actionParameterName)}\n              />\n            );\n          })}\n        </React.Fragment>\n      ) : null}\n    </Box>\n  );\n}\n\ntype BindableType = BindableAttrValue<any>['type'];\n\nfunction getActionTab(value: Maybe<BindableAttrValue<any>>) {\n  if (value?.$$navigationAction) {\n    return 'navigationAction';\n  }\n\n  return 'jsExpressionAction';\n}\n\nexport interface ActionEditorProps extends WithControlledProp<BindableAttrValue<any> | null> {}\n\nfunction ActionEditor({ value, onChange }: ActionEditorProps) {\n  const [activeTab, setActiveTab] = React.useState<BindableType>(getActionTab(value));\n  React.useEffect(() => setActiveTab(getActionTab(value)), [value]);\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: BindableType) => {\n    setActiveTab(newValue);\n  };\n\n  return (\n    <TabContext value={activeTab}>\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <TabList onChange={handleTabChange} aria-label=\"Choose action kind \">\n          <Tab label=\"JS expression\" value=\"jsExpressionAction\" />\n          <Tab label=\"Navigation\" value=\"navigationAction\" />\n        </TabList>\n      </Box>\n      <TabPanel value=\"jsExpressionAction\" disableGutters>\n        <JsExpressionActionEditor\n          value={value?.$$jsExpressionAction ? value : null}\n          onChange={onChange}\n        />\n      </TabPanel>\n      <TabPanel value=\"navigationAction\" disableGutters>\n        <NavigationActionEditor\n          value={value?.$$navigationAction ? value : null}\n          onChange={onChange}\n        />\n      </TabPanel>\n    </TabContext>\n  );\n}\n\nexport interface BindingEditorDialogProps<V>\n  extends WithControlledProp<BindableAttrValue<V> | null> {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport function BindingEditorDialog<V>({\n  value,\n  onChange,\n  open,\n  onClose,\n}: BindingEditorDialogProps<V>) {\n  const projectApi = useProjectApi();\n  const { error, data } = projectApi.useQuery('getPrettierConfig', []);\n  const { propType, label } = useBindingEditorContext();\n\n  const [input, setInput] = React.useState(value);\n  React.useEffect(() => {\n    setInput(value);\n  }, [open, value]);\n\n  const committedInput = React.useRef<BindableAttrValue<V> | null>(input);\n\n  const handleSave = React.useCallback(async () => {\n    let newValue = input;\n\n    if ((input as JsExpressionAttrValue)?.$$jsExpression) {\n      const jsExpression = await tryFormatExpression(\n        (input as JsExpressionAttrValue).$$jsExpression,\n        data!,\n      );\n      // Remove trailing spaces, newline characters for cleanliness and\n      // trailing semicolons since they introduce crashes while evaluation\n      const cleanedExpression = jsExpression.trim().replace(/;*$/, '');\n      newValue = {\n        $$jsExpression: cleanedExpression,\n      };\n    }\n\n    committedInput.current = newValue;\n    onChange(newValue);\n  }, [onChange, input, data]);\n\n  const hasUnsavedChanges = input\n    ? getBindingType(input) !==\n        (committedInput.current && getBindingType(committedInput.current)) ||\n      getBindingValue(input) !== (committedInput.current && getBindingValue(committedInput.current))\n    : false;\n\n  const { handleCloseWithUnsavedChanges } = useUnsavedChangesConfirm({\n    hasUnsavedChanges,\n    onClose,\n  });\n\n  const handleCommit = React.useCallback(() => {\n    handleSave();\n    onClose();\n  }, [onClose, handleSave]);\n\n  const handleRemove = React.useCallback(() => {\n    committedInput.current = null;\n    onChange(null);\n\n    onClose();\n  }, [onClose, onChange]);\n\n  useShortcut({ key: 's', metaKey: true, disabled: !open }, handleSave);\n\n  return (\n    <Dialog\n      onClose={handleCloseWithUnsavedChanges}\n      open={open}\n      fullWidth\n      scroll=\"body\"\n      maxWidth=\"lg\"\n    >\n      <DialogTitle>Bind property &quot;{label}&quot;</DialogTitle>\n      <DialogContent\n        sx={{\n          height: '100vh',\n          maxHeight: 560,\n        }}\n      >\n        {propType?.type === 'event' ? (\n          <ActionEditor value={input} onChange={(newValue) => setInput(newValue)} />\n        ) : (\n          <ValueBindingEditor\n            error={error}\n            value={\n              (input as JsExpressionAttrValue)?.$$jsExpression !== undefined ||\n              (input as EnvAttrValue)?.$$env !== undefined\n                ? (input as JsExpressionAttrValue | EnvAttrValue)\n                : null\n            }\n            onChange={(newValue) => setInput(newValue)}\n          />\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"inherit\" variant=\"text\" onClick={onClose}>\n          {hasUnsavedChanges ? 'Cancel' : 'Close'}\n        </Button>\n        <Button color=\"inherit\" disabled={!value} onClick={handleRemove}>\n          Remove binding\n        </Button>\n        <Button disabled={!hasUnsavedChanges} color=\"primary\" onClick={handleCommit}>\n          Update binding\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport interface BindingEditorProps<V> extends WithControlledProp<BindableAttrValue<V> | null> {\n  label: string;\n  globalScope: Record<string, unknown>;\n  globalScopeMeta?: ScopeMeta;\n  /**\n   * Uses the QuickJs runtime to evaluate bindings, just like on the server\n   */\n  jsRuntime: JsRuntime;\n  disabled?: boolean;\n  hidden?: boolean;\n  propType?: PropValueType;\n  liveBinding?: LiveBinding;\n  env?: Record<string, string | undefined>;\n  declaredEnvKeys?: string[];\n}\n\nexport function BindingEditor<V>({\n  label,\n  globalScope,\n  globalScopeMeta,\n  jsRuntime,\n  disabled,\n  hidden = false,\n  propType,\n  value,\n  onChange,\n  liveBinding,\n  env,\n  declaredEnvKeys,\n}: BindingEditorProps<V>) {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = React.useCallback(() => setOpen(true), []);\n  const handleClose = React.useCallback(() => setOpen(false), []);\n\n  const hasBinding: boolean = !!value && getBindingType(value) !== 'const';\n\n  const error: string | undefined = liveBinding?.error?.message;\n\n  const bindingButton = (\n    <Checkbox\n      aria-label={`Bind property \"${label}\"`}\n      checked={hasBinding}\n      disabled={disabled}\n      icon={<AddLinkIcon fontSize=\"inherit\" />}\n      checkedIcon={<LinkIcon fontSize=\"inherit\" />}\n      onClick={handleOpen}\n      color={error ? 'error' : undefined}\n      sx={{ visibility: hidden ? 'hidden' : 'visible' }}\n    />\n  );\n\n  const TooltipComponent = error ? ErrorTooltip : Tooltip;\n  const tooltipTitle: string =\n    error ?? (hasBinding ? `Update \"${label}\" binding…` : `Bind \"${label}\"…`);\n  const bindingButtonWithTooltip = disabled ? (\n    bindingButton\n  ) : (\n    <TooltipComponent disableInteractive placement=\"top\" title={tooltipTitle}>\n      {bindingButton}\n    </TooltipComponent>\n  );\n\n  const resolvedMeta = React.useMemo(() => {\n    const meta: ScopeMeta = { ...globalScopeMeta };\n    if (propType?.type === 'event' && propType.arguments) {\n      for (const { name, tsType } of propType.arguments) {\n        const metaField: ScopeMetaField = meta[name] ?? {};\n        metaField.kind = 'local';\n        metaField.tsType = tsType;\n        meta[name] = metaField;\n      }\n    }\n\n    return meta;\n  }, [propType, globalScopeMeta]);\n\n  const bindingEditorContext: BindingEditorContext = React.useMemo(\n    () => ({\n      label,\n      globalScope,\n      globalScopeMeta: resolvedMeta,\n      jsRuntime,\n      disabled,\n      propType,\n      liveBinding,\n      env: env ?? {},\n      declaredEnvKeys: declaredEnvKeys ?? [],\n    }),\n    [\n      disabled,\n      env,\n      globalScope,\n      jsRuntime,\n      label,\n      liveBinding,\n      propType,\n      resolvedMeta,\n      declaredEnvKeys,\n    ],\n  );\n\n  return (\n    <BindingEditorContextProvider value={bindingEditorContext}>\n      {bindingButtonWithTooltip}\n      <BindingEditorDialog open={open} onClose={handleClose} value={value} onChange={onChange} />\n    </BindingEditorContextProvider>\n  );\n}\n","import * as React from 'react';\nimport jsonToTs from 'json-to-ts';\nimport { Skeleton, styled, SxProps } from '@mui/material';\nimport { ScopeMeta } from '@toolpad/studio-runtime';\nimport { getCircularReplacer, replaceRecursive } from '@toolpad/utils/json';\nimport { WithControlledProp } from '@toolpad/utils/types';\nimport lazyComponent from '../../../utils/lazyComponent';\nimport ElementContext from '../ElementContext';\n\nconst TypescriptEditor = lazyComponent(() => import('../../../components/TypescriptEditor'), {\n  noSsr: true,\n  fallback: <Skeleton variant=\"rectangular\" height=\"100%\" />,\n});\n\nconst JsExpressionEditorRoot = styled('div')(({ theme }) => ({\n  height: 150,\n  border: `1px solid ${theme.palette.divider}`,\n}));\n\nexport interface JsExpressionEditorProps extends WithControlledProp<string> {\n  globalScope: Record<string, unknown>;\n  globalScopeMeta: ScopeMeta;\n  disabled?: boolean;\n  autoFocus?: boolean;\n  functionBody?: boolean;\n  topLevelAwait?: boolean;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  sx?: SxProps;\n}\n\nexport function JsExpressionEditor({\n  value,\n  onChange,\n  globalScope,\n  globalScopeMeta,\n  disabled,\n  autoFocus,\n  functionBody,\n  topLevelAwait,\n  onFocus,\n  onBlur,\n  sx,\n}: JsExpressionEditorProps) {\n  const element = React.useContext(ElementContext);\n\n  const nodeName = element?.name;\n\n  const extraLibs = React.useMemo(() => {\n    const withoutCircularRefs = replaceRecursive(globalScope, getCircularReplacer());\n    const generatedTypes = jsonToTs(withoutCircularRefs);\n\n    const globalDeclarations = Object.keys(globalScope).map((key) => {\n      const metaData = globalScopeMeta[key];\n\n      const overrides: Record<string, string> = {};\n\n      if (metaData?.kind === 'element') {\n        const { props } = metaData;\n        if (props) {\n          for (const [prop, meta] of Object.entries(props)) {\n            if (meta.tsType) {\n              overrides[prop] = meta.tsType;\n            }\n          }\n        }\n      }\n\n      const commentLines: string[] = [];\n\n      if (metaData?.description) {\n        commentLines.push(metaData.description);\n      }\n\n      if (typeof metaData?.deprecated === 'boolean') {\n        commentLines.push('@deprecated');\n      } else if (typeof metaData?.deprecated === 'string') {\n        commentLines.push(`@deprecated ${metaData.deprecated}`);\n      }\n\n      const comment =\n        commentLines.length > 0 ? ['/**', ...commentLines.map((line) => ` * ${line}`), ' */'] : [];\n\n      const overridesType = `{ \n        ${Object.entries(overrides)\n          .map(([propKey, propValue]) => {\n            return `${propKey}: ${propValue.replaceAll(\n              /\\bThisComponent\\b/g,\n              () => `RootObject[${JSON.stringify(key)}]`,\n            )}`;\n          })\n          .join('\\n')} \n      }`;\n\n      const globalType =\n        typeof metaData?.tsType === 'string'\n          ? metaData.tsType\n          : `OverrideProps<RootObject[${JSON.stringify(key)}], ${overridesType}>;`;\n\n      const declaration = `declare const ${key}: Expand<${globalType}>`;\n      return [...comment, declaration].join('\\n');\n    });\n\n    const content = `\n      type OverrideProps<T, S extends Partial<Record<keyof T, unknown>>> = {\n        [K in keyof T]:  S extends { [M in K]: any } ? S[K] : T[K]\n      }\n\n      // Pretty-print types on hover:\n      // See https://github.com/microsoft/vscode/issues/94679#issuecomment-755194161\n      type Expand<T> = T extends infer O ? { [K in keyof O]: Expand<O[K]> } : never;\n      \n      ${generatedTypes.join('\\n')}\n\n      ${globalDeclarations.join('\\n')}\n\n      ${nodeName ? `type ThisComponent = typeof ${nodeName}` : ''}\n    `;\n\n    return [{ content, filePath: 'global.d.ts' }];\n  }, [globalScope, globalScopeMeta, nodeName]);\n\n  return (\n    <JsExpressionEditorRoot sx={sx}>\n      <TypescriptEditor\n        value={value}\n        onChange={(code = '') => onChange(code)}\n        disabled={disabled}\n        extraLibs={extraLibs}\n        functionBody={functionBody}\n        topLevelAwait={topLevelAwait}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        autoFocus={autoFocus}\n      />\n    </JsExpressionEditorRoot>\n  );\n}\n","import * as React from 'react';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\n\nexport default React.createContext<appDom.ElementNode | undefined>(undefined);\n","import * as React from 'react';\nimport { SxProps, styled, IconButton, Tooltip, Snackbar } from '@mui/material';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport clsx from 'clsx';\nimport ObjectInspector, { ObjectInspectorProps } from './ObjectInspector';\n\nconst classes = {\n  viewport: 'Toolpad_ObjectInspectorViewport',\n  copyToClipboardButton: 'Toolpad_CopyToClipboardButton',\n  disabled: 'Toolpad_ObjectInspectorDisabled',\n};\n\nconst JsonViewRoot = styled('div')(({ theme }) => ({\n  whiteSpace: 'nowrap',\n  position: 'relative',\n  display: 'flex',\n  minHeight: 0,\n  minWidth: 0,\n\n  [`&.${classes.disabled}`]: {\n    opacity: 0.5,\n    pointerEvents: 'none',\n  },\n\n  [`& .${classes.viewport}`]: {\n    overflow: 'auto',\n    flex: 1,\n    padding: theme.spacing(1),\n  },\n\n  [`& .${classes.copyToClipboardButton}`]: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(2),\n  },\n\n  fontSize: 12,\n  lineHeight: 1.2,\n  fontFamily: 'Consolas, Menlo, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace',\n}));\n\nexport interface JsonViewProps extends ObjectInspectorProps {\n  src: unknown;\n  copyToClipboard?: boolean;\n  disabled?: boolean;\n  sx?: SxProps;\n}\n\nexport default function JsonView({ src, sx, copyToClipboard, disabled, ...props }: JsonViewProps) {\n  // TODO: elaborate on this to show a nice default, but avoid expanding massive amount of objects\n  const expandPaths = Array.isArray(src) ? ['$', '$.0', '$.1', '$.2', '$.3', '$.4'] : undefined;\n\n  const [confirmSnackbarOpen, setConfirmSnackbarOpen] = React.useState(false);\n\n  const handleCopyToClipboard = React.useCallback(() => {\n    window.navigator.clipboard.writeText(JSON.stringify(src, null, 2));\n    setConfirmSnackbarOpen(true);\n  }, [src]);\n\n  const handleCopySnackbarClose = React.useCallback(() => setConfirmSnackbarOpen(false), []);\n\n  return (\n    <JsonViewRoot sx={sx} className={clsx({ [classes.disabled]: disabled })}>\n      <React.Fragment>\n        <div className={classes.viewport}>\n          <ObjectInspector expandLevel={1} expandPaths={expandPaths} data={src} {...props} />\n        </div>\n\n        {copyToClipboard ? (\n          <React.Fragment>\n            <Tooltip title=\"Copy the source\">\n              <IconButton onClick={handleCopyToClipboard} className={classes.copyToClipboardButton}>\n                <ContentCopyIcon />\n              </IconButton>\n            </Tooltip>\n\n            <Snackbar\n              open={confirmSnackbarOpen}\n              autoHideDuration={3000}\n              onClose={handleCopySnackbarClose}\n              message=\"Source Copied to clipboard\"\n            />\n          </React.Fragment>\n        ) : null}\n      </React.Fragment>\n    </JsonViewRoot>\n  );\n}\n","import * as React from 'react';\nimport { ObjectInspector as ReactObjectInspector, chromeDark, chromeLight } from 'react-inspector';\nimport { useTheme } from '@mui/material/styles';\nimport * as CSS from 'csstype';\n\nexport interface InspectorNodeParams {\n  depth: number;\n  name: string;\n  data: any;\n  isNonenumerable: boolean;\n  expanded: boolean;\n}\n\nexport type InspectorNodeRenderer = (params: InspectorNodeParams) => React.ReactNode;\n\nexport type InspectorTheme = 'chromeLight' | 'chromeDark' | InspectorThemeDefinition;\n\nexport interface ObjectInspectorProps {\n  theme?: InspectorTheme | undefined;\n  name?: string | undefined;\n  /**\n   * Not required prop because we also allow undefined value.\n   */\n  data?: any;\n  /**\n   * Provide a custom nodeRenderer.\n   */\n  nodeRenderer?: InspectorNodeRenderer | undefined;\n  /**\n   * An integer specifying to which level the tree should be initially expanded.\n   */\n  expandLevel?: number | undefined;\n  /**\n   * An array containing all the paths that should be expanded when the component is initialized, or a string of just one path.\n   */\n  expandPaths?: string | ReadonlyArray<string> | undefined;\n  /**\n   * Show non-enumerable properties.\n   */\n  showNonenumerable?: boolean | undefined;\n  /**\n   * Sort object keys with optional compare function.\n   */\n  sortObjectKeys?: boolean | ((a: any, b: any) => number) | undefined;\n}\n\nexport interface InspectorThemeDefinition {\n  BASE_FONT_FAMILY: CSS.Properties['fontFamily'];\n  BASE_FONT_SIZE: CSS.Properties['fontSize'];\n  BASE_LINE_HEIGHT: CSS.Properties['lineHeight'];\n\n  BASE_BACKGROUND_COLOR: CSS.Properties['backgroundColor'];\n  BASE_COLOR: CSS.Properties['color'];\n\n  OBJECT_PREVIEW_ARRAY_MAX_PROPERTIES: number;\n  OBJECT_PREVIEW_OBJECT_MAX_PROPERTIES: number;\n  OBJECT_NAME_COLOR: CSS.Properties['color'];\n  OBJECT_VALUE_NULL_COLOR: CSS.Properties['color'];\n  OBJECT_VALUE_UNDEFINED_COLOR: CSS.Properties['color'];\n  OBJECT_VALUE_REGEXP_COLOR: CSS.Properties['color'];\n  OBJECT_VALUE_STRING_COLOR: CSS.Properties['color'];\n  OBJECT_VALUE_SYMBOL_COLOR: CSS.Properties['color'];\n  OBJECT_VALUE_NUMBER_COLOR: CSS.Properties['color'];\n  OBJECT_VALUE_BOOLEAN_COLOR: CSS.Properties['color'];\n  OBJECT_VALUE_FUNCTION_PREFIX_COLOR: CSS.Properties['color'];\n\n  HTML_TAG_COLOR: CSS.Properties['color'];\n  HTML_TAGNAME_COLOR: CSS.Properties['color'];\n  HTML_TAGNAME_TEXT_TRANSFORM: CSS.Properties['textTransform'];\n  HTML_ATTRIBUTE_NAME_COLOR: CSS.Properties['color'];\n  HTML_ATTRIBUTE_VALUE_COLOR: CSS.Properties['color'];\n  HTML_COMMENT_COLOR: CSS.Properties['color'];\n  HTML_DOCTYPE_COLOR: CSS.Properties['color'];\n\n  ARROW_COLOR: CSS.Properties['color'];\n  ARROW_MARGIN_RIGHT: CSS.Properties['marginRight'];\n  ARROW_FONT_SIZE: CSS.Properties['fontSize'];\n  ARROW_ANIMATION_DURATION: string;\n\n  TREENODE_FONT_FAMILY: CSS.Properties['fontFamily'];\n  TREENODE_FONT_SIZE: CSS.Properties['fontSize'];\n  TREENODE_LINE_HEIGHT: CSS.Properties['lineHeight'];\n  TREENODE_PADDING_LEFT: CSS.Properties['paddingLeft'];\n\n  TABLE_BORDER_COLOR: CSS.Properties['borderColor'];\n  TABLE_TH_BACKGROUND_COLOR: CSS.Properties['backgroundColor'];\n  TABLE_TH_HOVER_COLOR: CSS.Properties['color'];\n  TABLE_SORT_ICON_COLOR: CSS.Properties['color'];\n  TABLE_DATA_BACKGROUND_IMAGE: CSS.Properties['backgroundImage'];\n  TABLE_DATA_BACKGROUND_SIZE: CSS.Properties['backgroundSize'];\n}\n\nfunction useInspectorTheme(): InspectorThemeDefinition {\n  const theme = useTheme();\n  return React.useMemo(() => {\n    return {\n      ...(theme.palette.mode === 'dark'\n        ? (chromeDark as InspectorThemeDefinition)\n        : (chromeLight as InspectorThemeDefinition)),\n      BASE_BACKGROUND_COLOR: 'inherit',\n      TREENODE_FONT_FAMILY: 'inherit',\n      TREENODE_FONT_SIZE: 'inherit',\n      ARROW_FONT_SIZE: 'inherit',\n      TREENODE_LINE_HEIGHT: 'inherit',\n      OBJECT_PREVIEW_ARRAY_MAX_PROPERTIES: 1,\n      OBJECT_PREVIEW_OBJECT_MAX_PROPERTIES: 1,\n    };\n  }, [theme]);\n}\n\nexport default (function ObjectInspector(props: ObjectInspectorProps) {\n  const inspectorTheme = useInspectorTheme();\n  // @ts-expect-error https://github.com/storybookjs/react-inspector/issues/162\n  return <ReactObjectInspector theme={inspectorTheme} {...props} />;\n});\n","import {\n  BindableAttrEntries,\n  BindableAttrValue,\n  BindableAttrValues,\n  JsRuntime,\n  LiveBinding,\n} from '@toolpad/studio-runtime';\nimport * as React from 'react';\nimport { evaluateBindable } from '@toolpad/studio-runtime/jsRuntime';\nimport { mapValues } from '@toolpad/utils/collections';\n\nfunction evaluateBindableAttrEntries(\n  jsRuntime: JsRuntime,\n  input: BindableAttrEntries,\n  globalScope: Record<string, unknown>,\n): [string, LiveBinding][] {\n  return input.map(([key, bindable]) => [\n    key,\n    evaluateBindable(jsRuntime, bindable || null, globalScope),\n  ]);\n}\n\nfunction evaluateBindableAttrValues(\n  jsRuntime: JsRuntime,\n  input: BindableAttrValues<any>,\n  globalScope: Record<string, unknown>,\n): Record<string, LiveBinding> {\n  return mapValues(input, (bindable) => evaluateBindable(jsRuntime, bindable || null, globalScope));\n}\n\nexport interface UseEvaluateLiveBinding {\n  jsRuntime: JsRuntime;\n  input: BindableAttrValue<any> | null;\n  globalScope: Record<string, unknown>;\n}\n\nexport function useEvaluateLiveBinding({\n  jsRuntime,\n  input,\n  globalScope,\n}: UseEvaluateLiveBinding): LiveBinding {\n  return React.useMemo(() => {\n    return evaluateBindable(jsRuntime, input, globalScope);\n  }, [jsRuntime, input, globalScope]);\n}\n\nexport interface UseEvaluateLiveBindings {\n  jsRuntime: JsRuntime;\n  server?: boolean;\n  input: BindableAttrValues<any>;\n  globalScope: Record<string, unknown>;\n}\n\nexport function useEvaluateLiveBindings({\n  jsRuntime,\n  input,\n  globalScope,\n}: UseEvaluateLiveBindings): Partial<Record<string, LiveBinding>> {\n  return React.useMemo(() => {\n    return evaluateBindableAttrValues(jsRuntime, input, globalScope);\n  }, [jsRuntime, input, globalScope]);\n}\n\nexport interface UseEvaluateLiveBindingEntries {\n  jsRuntime: JsRuntime;\n  input: BindableAttrEntries;\n  globalScope: Record<string, unknown>;\n}\n\nexport function useEvaluateLiveBindingEntries({\n  jsRuntime,\n  input,\n  globalScope,\n}: UseEvaluateLiveBindingEntries): [string, LiveBinding][] {\n  return React.useMemo(() => {\n    return evaluateBindableAttrEntries(jsRuntime, input, globalScope);\n  }, [jsRuntime, input, globalScope]);\n}\n","import { Typography, Divider, Box, SxProps, styled } from '@mui/material';\nimport { ScopeMeta, ScopeMetaField } from '@toolpad/studio-runtime';\nimport * as React from 'react';\nimport ObjectInspector from '../../components/ObjectInspector';\n\nconst ExplorerRoot = styled('div')({\n  display: 'flex',\n  flexDirection: 'column',\n});\n\nexport interface GlobalScopeExplorerProps {\n  value: Record<string, unknown>;\n  meta: ScopeMeta;\n  sx?: SxProps;\n}\n\ntype ExplorerItem = ScopeMetaField & {\n  key: string;\n  value: unknown;\n};\n\ntype ExplorerGroup = {\n  displayName: string;\n  items: ExplorerItem[];\n};\n\ntype GroupKind = NonNullable<ScopeMetaField['kind']> | 'other';\n\ntype ExplorerStructure = {\n  [K in GroupKind]: ExplorerGroup;\n};\n\nfunction groupScopeMeta(value: Record<string, unknown>, meta: ScopeMeta): ExplorerStructure {\n  const structure: ExplorerStructure = {\n    local: {\n      displayName: 'Locals',\n      items: [],\n    },\n    element: {\n      displayName: 'Elements',\n      items: [],\n    },\n    query: {\n      displayName: 'Queries',\n      items: [],\n    },\n    action: {\n      displayName: 'Actions',\n      items: [],\n    },\n    other: {\n      displayName: 'Other',\n      items: [],\n    },\n  };\n\n  const scopeKeys = new Set([...Object.keys(value), ...Object.keys(meta)]);\n\n  for (const key of scopeKeys) {\n    const metaField = meta[key];\n    const group = metaField?.kind || 'other';\n\n    structure[group].items.push({\n      ...metaField,\n      key,\n      value: value[key],\n    });\n  }\n  return structure;\n}\n\nexport default function GlobalScopeExplorer({ meta, value, sx }: GlobalScopeExplorerProps) {\n  const structure = React.useMemo(() => groupScopeMeta(value, meta), [meta, value]);\n\n  return (\n    <ExplorerRoot sx={sx}>\n      <Typography sx={{ ml: 1, mb: 1 }} variant=\"subtitle2\">\n        Scope\n      </Typography>\n      <Box sx={{ overflow: 'auto', border: 1, borderColor: 'divider' }}>\n        <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'stretch' }}>\n          {Object.entries(structure).map(([key, group]) => {\n            if (group.items.length <= 0) {\n              return null;\n            }\n            return (\n              <React.Fragment key={key}>\n                <Typography sx={{ mx: 1, my: 0.5 }}>{group.displayName}</Typography>\n                <Divider />\n                <Box sx={{ m: 1 }}>\n                  {group.items.map((item) => {\n                    return (\n                      <React.Fragment key={item.key}>\n                        <ObjectInspector expandLevel={0} name={item.key} data={item.value} />\n                      </React.Fragment>\n                    );\n                  })}\n                </Box>\n                <Divider />\n              </React.Fragment>\n            );\n          })}\n        </Box>\n      </Box>\n    </ExplorerRoot>\n  );\n}\n","import { TabPanel as MuiTabPanel, TabPanelProps as MuiTabPanelProps } from '@mui/lab';\nimport { styled } from '@mui/material';\n\ninterface TabPanelProps extends MuiTabPanelProps {\n  disableGutters?: boolean;\n}\n\nconst TabPanel: React.ComponentType<TabPanelProps> = styled(MuiTabPanel, {\n  shouldForwardProp: (prop) => prop !== 'disableGutters',\n})<{\n  disableGutters?: boolean;\n}>(({ disableGutters }) => ({\n  ...(disableGutters && {\n    padding: 0,\n  }),\n}));\n\nexport default TabPanel;\n","import * as React from 'react';\nimport { ToolpadComponent } from '@toolpad/studio-runtime';\nimport { useSuspenseQuery } from '@tanstack/react-query';\nimport {\n  FORM_COMPONENT_ID,\n  PAGE_COLUMN_COMPONENT_ID,\n  PAGE_ROW_COMPONENT_ID,\n  SPACER_COMPONENT_ID,\n  STACK_COMPONENT_ID,\n} from '../../runtime/toolpadComponents';\nimport { useProject } from '../../project';\n\nexport interface ToolpadComponentDefinition {\n  displayName: string;\n  builtIn?: string;\n  system?: boolean;\n  synonyms: string[];\n  initialProps?: Record<string, unknown>;\n}\n\nexport type ToolpadComponentDefinitions = Record<string, ToolpadComponentDefinition | undefined>;\nexport interface InstantiatedComponent extends ToolpadComponentDefinition {\n  Component: ToolpadComponent<any>;\n}\nexport type InstantiatedComponents = Record<string, InstantiatedComponent | undefined>;\n\nexport const INTERNAL_COMPONENTS = new Map<string, ToolpadComponentDefinition>([\n  [PAGE_ROW_COMPONENT_ID, { displayName: 'Row', builtIn: 'PageRow', system: true, synonyms: [] }],\n  [\n    PAGE_COLUMN_COMPONENT_ID,\n    { displayName: 'Column', builtIn: 'PageColumn', system: true, synonyms: [] },\n  ],\n  [STACK_COMPONENT_ID, { displayName: 'Stack', builtIn: 'Stack', system: true, synonyms: [] }],\n  [\n    'Autocomplete',\n    {\n      displayName: 'Autocomplete',\n      builtIn: 'Autocomplete',\n      synonyms: ['combobox', 'select', 'dropdown'],\n    },\n  ],\n  [\n    'Button',\n    {\n      displayName: 'Button',\n      builtIn: 'Button',\n      synonyms: ['click', 'action'],\n    },\n  ],\n  ['Image', { displayName: 'Image', builtIn: 'Image', synonyms: ['picture'] }],\n  ['DataGrid', { displayName: 'Data Grid', builtIn: 'DataGrid', synonyms: ['table'] }],\n  [\n    'Chart',\n    {\n      displayName: 'Chart',\n      builtIn: 'Chart',\n      synonyms: ['graph', 'bar chart', 'pie chart', 'line chart', 'plot'],\n    },\n  ],\n  [\n    'TextField',\n    { displayName: 'Text Field', builtIn: 'TextField', synonyms: ['input', 'field', 'password'] },\n  ],\n  ['DatePicker', { displayName: 'Date Picker', builtIn: 'DatePicker', synonyms: ['time'] }],\n  ['FilePicker', { displayName: 'File Picker', builtIn: 'FilePicker', synonyms: [] }],\n  ['Text', { displayName: 'Text', builtIn: 'Text', synonyms: ['markdown', 'link', 'output'] }],\n  [\n    'Markdown',\n    {\n      displayName: 'Markdown',\n      builtIn: 'Text',\n      initialProps: {\n        mode: 'markdown',\n      },\n      synonyms: [],\n    },\n  ],\n  [\n    'Link',\n    {\n      displayName: 'Link',\n      builtIn: 'Text',\n      initialProps: {\n        mode: 'link',\n      },\n      synonyms: [],\n    },\n  ],\n  ['Select', { displayName: 'Select', builtIn: 'Select', synonyms: ['combobox', 'dropdown'] }],\n  ['List', { displayName: 'List', builtIn: 'List', synonyms: ['repeat'] }],\n  ['Paper', { displayName: 'Paper', builtIn: 'Paper', synonyms: ['surface'] }],\n  ['Tabs', { displayName: 'Tabs', builtIn: 'Tabs', synonyms: [] }],\n  ['Container', { displayName: 'Container', builtIn: 'Container', synonyms: [] }],\n  ['Metric', { displayName: 'Metric', builtIn: 'Metric', synonyms: ['value', 'number', 'output'] }],\n  [\n    'Checkbox',\n    {\n      displayName: 'Checkbox',\n      initialProps: {\n        mode: 'checkbox',\n      },\n      builtIn: 'Checkbox',\n      synonyms: ['switch'],\n    },\n  ],\n  [\n    'Switch',\n    {\n      displayName: 'Switch',\n      initialProps: {\n        mode: 'switch',\n      },\n      builtIn: 'Checkbox',\n      synonyms: ['switch'],\n    },\n  ],\n  [FORM_COMPONENT_ID, { displayName: 'Form', builtIn: 'Form', synonyms: [] }],\n  [\n    SPACER_COMPONENT_ID,\n    { displayName: 'Spacer', builtIn: 'Spacer', synonyms: ['margin', 'blank', 'empty', 'void'] },\n  ],\n  [\n    'Password',\n    {\n      displayName: 'Password',\n      builtIn: 'TextField',\n      synonyms: [],\n      initialProps: { password: true },\n    },\n  ],\n]);\n\nfunction useCodeComponents(): ToolpadComponentDefinitions {\n  const project = useProject();\n  const { data: codeComponents, refetch } = useSuspenseQuery({\n    queryKey: ['codeComponents'],\n    queryFn: () => project.api.methods.getComponents(),\n  });\n\n  React.useEffect(\n    () => project.events.subscribe('componentsListChanged', refetch),\n    [project.events, refetch],\n  );\n\n  return React.useMemo(\n    () =>\n      Object.fromEntries(\n        codeComponents.map((codeComponent) => [\n          `codeComponent.${codeComponent.name}`,\n          {\n            displayName: codeComponent.name,\n            synonyms: [],\n          },\n        ]),\n      ),\n    [codeComponents],\n  );\n}\n\nexport function useToolpadComponents(): ToolpadComponentDefinitions {\n  const codeComponents = useCodeComponents();\n  return React.useMemo(\n    () => ({ ...Object.fromEntries(INTERNAL_COMPONENTS), ...codeComponents }),\n    [codeComponents],\n  );\n}\n\nexport function useToolpadComponent(id: string): ToolpadComponentDefinition | null {\n  const components = useToolpadComponents();\n  return React.useMemo(() => components[id] || null, [components, id]);\n}\n","import * as React from 'react';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { useAppState, useDomApi } from '../../AppState';\nimport MuiThemeEditor from '../../../components/MuiThemeEditor';\n\nexport interface ComponentEditorProps {\n  className?: string;\n}\n\nexport default function ComponentEditor({ className }: ComponentEditorProps) {\n  const { dom } = useAppState();\n  const domApi = useDomApi();\n\n  const app = appDom.getApp(dom);\n  const { themes = [] } = appDom.getChildNodes(dom, app);\n  const theme = themes.length > 0 ? themes[0] : null;\n\n  return (\n    <div className={className} data-testid=\"theme-editor\">\n      <MuiThemeEditor\n        value={theme?.theme || {}}\n        onChange={(newTheme) => {\n          domApi.update((draft) => {\n            if (theme) {\n              draft = appDom.setNodeProp(draft, theme, 'theme', newTheme);\n              return draft;\n            }\n\n            const newThemeNode = appDom.createNode(dom, 'theme', {\n              name: 'Theme',\n              theme: newTheme,\n              attributes: {},\n            });\n            draft = appDom.addNode(draft, newThemeNode, app, 'themes');\n            return draft;\n          });\n        }}\n      />\n    </div>\n  );\n}\n","import * as React from 'react';\nimport {\n  Box,\n  Button,\n  capitalize,\n  createTheme,\n  PaletteMode,\n  Popover,\n  SimplePaletteColorOptions,\n  Stack,\n  styled,\n  ThemeOptions,\n  ToggleButton,\n  ToggleButtonGroup,\n  useTheme,\n} from '@mui/material';\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport { WithControlledProp } from '@toolpad/utils/types';\nimport ColorTool from './ColorTool';\nimport FlexFill from './FlexFill';\n\nconst IconToggleButton = styled(ToggleButton)({\n  display: 'flex',\n  justifyContent: 'center',\n  width: '100%',\n  '& > *': {\n    marginRight: '8px',\n  },\n});\n\ninterface PaletteColorPickerProps extends WithControlledProp<string | undefined> {\n  label: string;\n}\n\nfunction PaletteColorPicker({ label, value, onChange }: PaletteColorPickerProps) {\n  const theme = useTheme();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = React.useId();\n  return (\n    <React.Fragment>\n      <Button aria-describedby={id} variant=\"outlined\" onClick={handleClick}>\n        {label}\n        <FlexFill />\n        <Box\n          sx={{\n            ml: 2,\n            p: '2px 8px',\n            background: value,\n            color: value ? theme.palette.getContrastText(value) : undefined,\n            borderRadius: 1,\n          }}\n        >\n          {value}\n        </Box>\n      </Button>\n      <Popover\n        id={open ? id : undefined}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n      >\n        <ColorTool sx={{ m: 2 }} label={label} value={value} onChange={onChange} />\n      </Popover>\n    </React.Fragment>\n  );\n}\n\nexport interface MuiThemeEditorProps {\n  value: ThemeOptions | null;\n  onChange: (value: ThemeOptions) => void;\n}\n\nexport default function MuiThemeEditor({ value, onChange }: MuiThemeEditorProps) {\n  const theme = useTheme();\n\n  const defaultTheme = React.useMemo(\n    () => createTheme({ palette: { mode: value?.palette?.mode } }),\n    [value?.palette?.mode],\n  );\n\n  const colorPicker = (intent: 'primary' | 'secondary') => (\n    <PaletteColorPicker\n      label={capitalize(intent)}\n      value={\n        (value?.palette?.[intent] as SimplePaletteColorOptions)?.main ||\n        defaultTheme.palette[intent].main\n      }\n      onChange={(newMain) => {\n        onChange({\n          ...value,\n          palette: {\n            ...value?.palette,\n            [intent]: newMain\n              ? {\n                  main: newMain,\n                  contrastText: theme.palette.getContrastText(newMain),\n                }\n              : undefined,\n          },\n        });\n      }}\n    />\n  );\n\n  return (\n    <Stack direction=\"column\" spacing={2}>\n      <ToggleButtonGroup\n        exclusive\n        value={value?.palette?.mode || defaultTheme.palette.mode}\n        onChange={(event, newMode: PaletteMode | null) => {\n          if (newMode) {\n            onChange({\n              ...value,\n              palette: {\n                ...value?.palette,\n                mode: newMode,\n              },\n            });\n          }\n        }}\n        aria-label=\"Mode\"\n      >\n        <IconToggleButton value=\"light\" aria-label=\"light\">\n          <LightModeIcon />\n          Light\n        </IconToggleButton>\n        <IconToggleButton value=\"dark\" aria-label=\"dark\">\n          <DarkModeIcon />\n          Dark\n        </IconToggleButton>\n      </ToggleButtonGroup>\n\n      {colorPicker('primary')}\n\n      {colorPicker('secondary')}\n    </Stack>\n  );\n}\n","import * as React from 'react';\nimport { SxProps, rgbToHex, useTheme } from '@mui/material/styles';\nimport * as colors from '@mui/material/colors';\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\nimport Radio, { RadioProps } from '@mui/material/Radio';\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from '@mui/material/Typography';\nimport CheckIcon from '@mui/icons-material/Check';\nimport Slider from '@mui/material/Slider';\nimport invariant from 'invariant';\nimport { Stack } from '@mui/material';\n\nconst isRgb = (string: string) =>\n  /rgb\\([0-9]{1,3}\\s*,\\s*[0-9]{1,3}\\s*,\\s*[0-9]{1,3}\\)/i.test(string);\n\nconst isHex = (string: string) => /^#?([0-9a-f]{3})$|^#?([0-9a-f]){6}$/i.test(string);\n\nexport function parseColor(color: string): string | null {\n  if (isRgb(color)) {\n    return color;\n  }\n  if (isHex(color)) {\n    if (!color.startsWith('#')) {\n      return `#${color}`;\n    }\n    return color;\n  }\n  return null;\n}\n\nconst hues = [\n  'red',\n  'pink',\n  'purple',\n  'deepPurple',\n  'indigo',\n  'blue',\n  'lightBlue',\n  'cyan',\n  'teal',\n  'green',\n  'lightGreen',\n  'lime',\n  'yellow',\n  'amber',\n  'orange',\n  'deepOrange',\n] as const;\n\nconst shades = [\n  900,\n  800,\n  700,\n  600,\n  500,\n  400,\n  300,\n  200,\n  100,\n  50,\n  'A700',\n  'A400',\n  'A200',\n  'A100',\n] as const;\n\ntype Shade = (typeof shades)[number];\n\ninterface TooltipRadioProps extends RadioProps {\n  'aria-label'?: string;\n  'aria-labelledby'?: string;\n  inputProps?: RadioProps['inputProps'];\n}\n\nconst TooltipRadio = React.forwardRef<HTMLButtonElement, TooltipRadioProps>(\n  function TooltipRadio(props, ref) {\n    const {\n      'aria-labelledby': ariaLabelledBy,\n      'aria-label': ariaLabel,\n      inputProps,\n      ...other\n    } = props;\n\n    return (\n      <Radio\n        ref={ref}\n        {...other}\n        inputProps={{\n          ...inputProps,\n          'aria-labelledby': ariaLabelledBy,\n          'aria-label': ariaLabel,\n        }}\n      />\n    );\n  },\n);\n\nexport interface ColorToolProps {\n  label?: string;\n  value?: string;\n  onChange?: (value?: string) => void;\n  sx?: SxProps;\n}\n\nfunction ColorTool({ sx, label, value, onChange }: ColorToolProps) {\n  const theme = useTheme();\n\n  const [state, setState] = React.useState<{\n    input?: string;\n    hue: keyof typeof colors;\n    shade: number;\n    valid: boolean;\n  }>({\n    input: value,\n    hue: 'blue',\n    shade: 4,\n    valid: true,\n  });\n\n  const handleChangeColor = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let {\n      target: { value: color },\n    } = event;\n\n    const parsed = parseColor(color);\n    const valid = !!parsed;\n    if (parsed) {\n      color = parsed;\n    }\n\n    setState((oldState) => ({\n      ...oldState,\n      input: color,\n      valid,\n    }));\n\n    if (valid) {\n      onChange?.(color);\n    }\n  };\n\n  const handleChangeHue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const hue = event.target.value as keyof typeof colors;\n    const color = (colors[hue] as Record<Shade, string | undefined>)[shades[state.shade]];\n\n    if (color) {\n      setState({\n        ...state,\n        hue,\n        input: color,\n      });\n      onChange?.(color);\n    }\n  };\n\n  const handleChangeShade = (event: Event, shade: number | number[]) => {\n    invariant(!Array.isArray(shade), 'Material-UI: `shade` must not be an array.');\n\n    const color = (colors[state.hue] as Record<Shade, string | undefined>)[shades[shade]];\n\n    if (color) {\n      setState({\n        ...state,\n        shade,\n\n        input: color,\n      });\n      onChange?.(color);\n    }\n  };\n\n  const intentInput = state.input;\n  const intentShade = state.shade;\n  const color = value;\n\n  const background = color\n    ? theme.palette.augmentColor({\n        color: {\n          main: color,\n        },\n      })\n    : undefined;\n\n  const id = React.useId();\n\n  return (\n    <Box sx={sx}>\n      <Typography component=\"label\" gutterBottom htmlFor={id} variant=\"h6\">\n        {label}\n      </Typography>\n      <Input\n        id={id}\n        value={intentInput}\n        onChange={handleChangeColor}\n        fullWidth\n        error={!state.valid}\n      />\n      <Box sx={{ display: 'flex', alignItems: 'center', mt: 2, mb: 2 }}>\n        <Typography id={`${id}ShadeSliderLabel`}>Shade:</Typography>\n        <Slider\n          sx={{ width: 'calc(100% - 80px)', ml: 3, mr: 3 }}\n          value={intentShade}\n          min={0}\n          max={13}\n          step={1}\n          onChange={handleChangeShade}\n          aria-labelledby={`${id}ShadeSliderLabel`}\n        />\n        <Typography>{shades[intentShade]}</Typography>\n      </Box>\n      <Box sx={{ width: 192, margin: 'auto' }}>\n        {hues.map((hue) => {\n          const shade = shades[state.shade];\n          const backgroundColor = colors[hue][shade];\n\n          return (\n            <Tooltip placement=\"right\" title={hue} key={hue} disableInteractive>\n              <TooltipRadio\n                sx={{ p: 0 }}\n                color=\"default\"\n                checked={color === backgroundColor}\n                onChange={handleChangeHue}\n                value={hue}\n                name={label}\n                icon={<Box sx={{ width: 48, height: 48 }} style={{ backgroundColor }} />}\n                checkedIcon={\n                  <Box\n                    sx={{\n                      width: 48,\n                      height: 48,\n                      border: 1,\n                      borderColor: 'white',\n                      color: 'common.white',\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                    }}\n                    style={{ backgroundColor }}\n                  >\n                    <CheckIcon style={{ fontSize: 30 }} />\n                  </Box>\n                }\n              />\n            </Tooltip>\n          );\n        })}\n      </Box>\n      <Stack direction=\"row\" sx={{ mt: 2, justifyContent: 'center' }}>\n        {(['dark', 'main', 'light'] as const).map((key) => (\n          <Box\n            sx={{\n              width: 64,\n              height: 64,\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n            style={{ backgroundColor: background?.[key] }}\n            key={key}\n          >\n            <Typography\n              variant=\"caption\"\n              style={{\n                color: background ? theme.palette.getContrastText(background[key]) : undefined,\n              }}\n            >\n              {background ? rgbToHex(background[key]) : ''}\n            </Typography>\n          </Box>\n        ))}\n      </Stack>\n    </Box>\n  );\n}\n\nexport default ColorTool;\n","import { StyledComponent } from '@emotion/styled';\nimport { styled, BoxProps } from '@mui/material';\n\nconst FlexFill: StyledComponent<BoxProps> = styled('div')({ flex: 1 });\n\nexport default FlexFill;\n","import * as React from 'react';\nimport {\n  Box,\n  Collapse,\n  darken,\n  IconButton,\n  Link,\n  styled,\n  Typography,\n  TextField,\n} from '@mui/material';\nimport ArrowLeftIcon from '@mui/icons-material/ArrowLeft';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport ArrowDropDownSharpIcon from '@mui/icons-material/ArrowDropDownSharp';\nimport invariant from 'invariant';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport AccountCircle from '@mui/icons-material/Search';\nimport { uncapitalize } from '@toolpad/utils/strings';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport ComponentCatalogItem from './ComponentCatalogItem';\nimport CreateCodeComponentNodeDialog from '../../PagesExplorer/CreateCodeComponentNodeDialog';\nimport { useAppState } from '../../../AppState';\nimport { usePageEditorApi } from '../PageEditorProvider';\nimport { useToolpadComponents } from '../../toolpadComponents';\nimport useLocalStorageState from '../../../../utils/useLocalStorageState';\nimport HelpTooltipIcon from '../../../../components/HelpTooltipIcon';\n\ninterface FutureComponentSpec {\n  url: string;\n  displayName: string;\n}\n\nconst FUTURE_COMPONENTS = new Map<string, FutureComponentSpec>([\n  ['Map', { url: 'https://github.com/mui/toolpad/issues/864', displayName: 'Map' }],\n  ['Pie Chart', { url: 'https://github.com/mui/toolpad/issues/2615', displayName: 'Pie Chart' }],\n  ['Drawer', { url: 'https://github.com/mui/toolpad/issues/1540', displayName: 'Drawer' }],\n  ['Html', { url: 'https://github.com/mui/toolpad/issues/1311', displayName: 'Html' }],\n  ['Icon', { url: 'https://github.com/mui/toolpad/issues/83', displayName: 'Icon' }],\n  ['Card', { url: 'https://github.com/mui/toolpad/issues/748', displayName: 'Card' }],\n  ['Slider', { url: 'https://github.com/mui/toolpad/issues/746', displayName: 'Slider' }],\n  ['Radio', { url: 'https://github.com/mui/toolpad/issues/744', displayName: 'Radio' }],\n]);\n\nconst COMPONENT_CATALOG_WIDTH_COLLAPSED = 40;\n\nconst ComponentCatalogRoot = styled('div')({\n  position: 'relative',\n  width: COMPONENT_CATALOG_WIDTH_COLLAPSED + 1,\n  height: '100%',\n  zIndex: 1,\n  overflow: 'visible',\n});\n\nexport interface ComponentCatalogProps {\n  className?: string;\n}\n\nexport default function ComponentCatalog({ className }: ComponentCatalogProps) {\n  const api = usePageEditorApi();\n  const { dom } = useAppState();\n  const [searchTerm, setSearchTerm] = React.useState('');\n  const [searchFocused, setSearchFocused] = React.useState(false);\n  const [openStart, setOpenStart] = React.useState(0);\n  const [openCustomComponents, setOpenCustomComponents] = useLocalStorageState(\n    'catalog-custom-expanded',\n    true,\n  );\n  const [openFutureComponents, setOpenFutureComponents] = useLocalStorageState(\n    'catalog-future-expanded',\n    true,\n  );\n\n  const closeTimeoutRef = React.useRef<NodeJS.Timeout>();\n  const openDrawer = React.useCallback(() => {\n    if (closeTimeoutRef.current) {\n      clearTimeout(closeTimeoutRef.current);\n    }\n\n    setOpenStart(Date.now());\n  }, []);\n\n  const closeDrawer = React.useCallback(\n    (delay?: number) => {\n      const timeOpen = Date.now() - openStart;\n      const defaultDelay = timeOpen > 750 ? 500 : 0;\n      closeTimeoutRef.current = setTimeout(() => {\n        setOpenStart(0);\n      }, delay ?? defaultDelay);\n    },\n    [openStart, setOpenStart],\n  );\n\n  const toolpadComponents = useToolpadComponents();\n\n  const handleDragStart = (componentType: string) => (event: React.DragEvent<HTMLElement>) => {\n    const def = toolpadComponents[componentType];\n    invariant(def, `No component definition found for \"${componentType}\"`);\n\n    event.dataTransfer.dropEffect = 'copy';\n    const newNode = appDom.createElement(\n      dom,\n      def.builtIn || componentType,\n      def.initialProps || {},\n      undefined,\n      uncapitalize(def.displayName),\n    );\n    api.newNodeDragStart(newNode);\n    closeDrawer(0);\n  };\n\n  const handleMouseEnter = React.useCallback(() => openDrawer(), [openDrawer]);\n  const handleMouseLeave = React.useCallback(() => closeDrawer(), [closeDrawer]);\n\n  const [createCodeComponentDialogOpen, setCreateCodeComponentDialogOpen] = React.useState(false);\n\n  const handleCreateCodeComponentDialogOpen = React.useCallback(() => {\n    setCreateCodeComponentDialogOpen(true);\n    closeDrawer(0);\n  }, [closeDrawer]);\n  const handleCreateCodeComponentDialogClose = React.useCallback(\n    () => setCreateCodeComponentDialogOpen(false),\n    [],\n  );\n\n  const filteredItems = React.useMemo(() => {\n    const entries = Object.entries(toolpadComponents);\n    if (!searchTerm) {\n      return entries;\n    }\n    const regex = new RegExp(searchTerm.split('').join('.*'), 'i');\n    return entries.filter(\n      ([componentName, component]) =>\n        regex.test(componentName) || component?.synonyms.some((name) => regex.test(name)),\n    );\n  }, [toolpadComponents, searchTerm]);\n\n  const drawerOpen = !!openStart || searchFocused;\n\n  React.useEffect(() => {\n    if (!drawerOpen) {\n      setSearchTerm('');\n    }\n  }, [drawerOpen]);\n\n  return (\n    <React.Fragment>\n      <ComponentCatalogRoot\n        data-testid=\"component-catalog\"\n        className={className}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'row',\n            position: 'absolute',\n            top: 0,\n            bottom: 0,\n            backgroundColor: 'background.default',\n            borderRight: 1,\n            borderColor: 'divider',\n          }}\n        >\n          <Collapse\n            in={drawerOpen}\n            orientation=\"horizontal\"\n            timeout={200}\n            sx={{\n              height: '100%',\n              justifyContent: 'flex-end',\n              display: 'flex',\n            }}\n          >\n            <Box sx={{ flexDirection: 'column', display: 'flex', height: '100%' }}>\n              <Box\n                sx={{\n                  width: '100%',\n                  pl: 1,\n                  pr: 1,\n                }}\n              >\n                <TextField\n                  placeholder=\"Search components...\"\n                  value={searchTerm}\n                  onChange={(event) => setSearchTerm(event.target.value)}\n                  onFocus={() => setSearchFocused(true)}\n                  onBlur={() => setSearchFocused(false)}\n                  slotProps={{\n                    input: {\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <AccountCircle />\n                        </InputAdornment>\n                      ),\n                    },\n                  }}\n                />\n              </Box>\n              <Box\n                sx={{\n                  flex: 1,\n                  width: 250,\n                  overflow: 'auto',\n                  scrollbarGutter: 'stable',\n                }}\n              >\n                <Box display=\"grid\" gridTemplateColumns=\"1fr 1fr 1fr\" gap={1} padding={1}>\n                  {filteredItems.map(([componentId, componentType]) => {\n                    invariant(componentType, `No component definition found for \"${componentId}\"`);\n                    return componentType.builtIn && !componentType.system ? (\n                      <ComponentCatalogItem\n                        key={componentId}\n                        id={componentId}\n                        draggable\n                        onDragStart={handleDragStart(componentId)}\n                        displayName={componentType.displayName}\n                        builtIn={componentType.builtIn}\n                        kind={'builtIn'}\n                      />\n                    ) : null;\n                  })}\n                </Box>\n\n                <Box\n                  pl={2}\n                  pr={1.5}\n                  pb={0}\n                  display=\"flex\"\n                  flexDirection={'row'}\n                  justifyContent=\"space-between\"\n                >\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Typography mr={0.5} variant=\"overline\">\n                      Custom Components\n                    </Typography>\n                    <HelpTooltipIcon\n                      helpText={\n                        <Typography variant=\"inherit\">\n                          Expand Toolpad Studio with your own React components.{' '}\n                          <Link\n                            href=\"https://mui.com/toolpad/studio/concepts/custom-components\"\n                            target=\"_blank\"\n                            rel=\"noopener\"\n                          >\n                            Learn more\n                          </Link>\n                          .\n                        </Typography>\n                      }\n                    />\n                  </Box>\n                  <IconButton\n                    aria-label=\"Expand custom components\"\n                    sx={{\n                      p: 0,\n                      height: '100%',\n                      alignSelf: 'center',\n                      cursor: 'pointer',\n                      transform: `rotate(${openCustomComponents ? 180 : 0}deg)`,\n                      transition: 'all 0.2s ease-in',\n                    }}\n                    onClick={() => setOpenCustomComponents((prev) => !prev)}\n                  >\n                    <ArrowDropDownSharpIcon />\n                  </IconButton>\n                </Box>\n                <Collapse in={openCustomComponents} orientation={'vertical'}>\n                  <Box display=\"grid\" gridTemplateColumns=\"1fr 1fr 1fr\" gap={1} padding={1} pt={0}>\n                    {filteredItems.map(([componentId, componentType]) => {\n                      invariant(\n                        componentType,\n                        `No component definition found for \"${componentId}\"`,\n                      );\n                      return !componentType.builtIn ? (\n                        <ComponentCatalogItem\n                          key={componentId}\n                          id={componentId}\n                          draggable\n                          onDragStart={handleDragStart(componentId)}\n                          displayName={componentType.displayName}\n                          kind={'custom'}\n                        />\n                      ) : null;\n                    })}\n                    <ComponentCatalogItem\n                      id=\"CreateNew\"\n                      displayName=\"Create\"\n                      kind=\"create\"\n                      onClick={handleCreateCodeComponentDialogOpen}\n                    />\n                  </Box>\n                </Collapse>\n\n                <Box padding={1}>\n                  <Box\n                    sx={(theme) => ({\n                      py: 2,\n                      pl: 1,\n                      pr: 0.5,\n                      borderWidth: 1,\n                      borderStyle: 'solid',\n                      borderRadius: 1,\n                      backgroundColor: darken(theme.palette.background.default, 0.1),\n                      borderColor: theme.palette.divider,\n                    })}\n                  >\n                    <Box pb={0} display=\"flex\" flexDirection={'row'} justifyContent=\"space-between\">\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        More components coming soon!\n                      </Typography>\n                      <IconButton\n                        aria-label=\"Expand custom components\"\n                        sx={{\n                          p: 0,\n                          height: '100%',\n                          alignSelf: 'start',\n                          cursor: 'pointer',\n                          transform: `rotate(${openFutureComponents ? 180 : 0}deg)`,\n                          transition: 'all 0.2s ease-in',\n                        }}\n                        onClick={() => setOpenFutureComponents((prev) => !prev)}\n                      >\n                        <ArrowDropDownSharpIcon />\n                      </IconButton>\n                    </Box>\n                    <Collapse in={openFutureComponents} orientation={'vertical'}>\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        👍 Upvote on GitHub to get it prioritized.\n                      </Typography>\n                      <Box display=\"grid\" gridTemplateColumns=\"1fr 1fr 1fr\" gap={1} pt={1} pb={0}>\n                        {Array.from(FUTURE_COMPONENTS, ([key, { displayName, url }]) => {\n                          return (\n                            <Link\n                              href={url}\n                              underline=\"none\"\n                              target=\"_blank\"\n                              key={`futureComponent.${key}`}\n                            >\n                              <ComponentCatalogItem\n                                id={key}\n                                displayName={displayName}\n                                kind={'future'}\n                              />\n                            </Link>\n                          );\n                        })}\n                      </Box>\n                    </Collapse>\n                  </Box>\n                </Box>\n              </Box>\n            </Box>\n          </Collapse>\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              width: COMPONENT_CATALOG_WIDTH_COLLAPSED,\n            }}\n          >\n            <Box sx={{ mt: 2 }}>{openStart ? <ArrowLeftIcon /> : <ArrowRightIcon />}</Box>\n            <Box position=\"relative\">\n              <Typography\n                sx={{\n                  position: 'absolute',\n                  top: 0,\n                  display: 'flex',\n                  alignItems: 'center',\n                  fontSize: 20,\n                  transform: 'rotate(90deg) translate(-10px, 0)',\n                  transformOrigin: '0 50%',\n                  whiteSpace: 'nowrap',\n                }}\n              >\n                Component library\n              </Typography>\n            </Box>\n          </Box>\n        </Box>\n      </ComponentCatalogRoot>\n      <CreateCodeComponentNodeDialog\n        open={!!createCodeComponentDialogOpen}\n        onClose={handleCreateCodeComponentDialogClose}\n      />\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\nimport { ButtonBase, Box, styled } from '@mui/material';\nimport SmartButtonIcon from '@mui/icons-material/SmartButton';\nimport ImageIcon from '@mui/icons-material/Image';\nimport GridOnIcon from '@mui/icons-material/GridOn';\nimport Crop75Icon from '@mui/icons-material/Crop75';\nimport ArrowDropDownCircleIcon from '@mui/icons-material/ArrowDropDownCircle';\nimport LayersIcon from '@mui/icons-material/Layers';\nimport DnsIcon from '@mui/icons-material/Dns';\nimport ContactPageIcon from '@mui/icons-material/ContactPage';\nimport TabIcon from '@mui/icons-material/Tab';\nimport TuneIcon from '@mui/icons-material/Tune';\nimport ToggleOnIcon from '@mui/icons-material/ToggleOn';\nimport ListIcon from '@mui/icons-material/List';\nimport RadioButtonCheckedIcon from '@mui/icons-material/RadioButtonChecked';\nimport DateRangeIcon from '@mui/icons-material/DateRange';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport DashboardCustomizeSharpIcon from '@mui/icons-material/DashboardCustomizeSharp';\nimport ManageSearchIcon from '@mui/icons-material/ManageSearch';\nimport AddIcon from '@mui/icons-material/Add';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport NotesIcon from '@mui/icons-material/Notes';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport InsightsIcon from '@mui/icons-material/Insights';\nimport { SvgIconProps } from '@mui/material/SvgIcon';\nimport PlaceIcon from '@mui/icons-material/Place';\nimport ViewSidebarIcon from '@mui/icons-material/ViewSidebar';\nimport MoodIcon from '@mui/icons-material/Mood';\nimport HtmlIcon from '@mui/icons-material/Html';\nimport TableRowsIcon from '@mui/icons-material/TableRows';\nimport ViewColumnIcon from '@mui/icons-material/ViewColumn';\nimport TagIcon from '@mui/icons-material/Tag';\nimport PasswordIcon from '@mui/icons-material/Password';\nimport LinkIcon from '@mui/icons-material/Link';\nimport TextFormatIcon from '@mui/icons-material/TextFormat';\nimport SpaceBarIcon from '@mui/icons-material/SpaceBar';\nimport PieChartIcon from '@mui/icons-material/PieChart';\n\nconst iconMap = new Map(\n  (\n    [\n      ['Password', PasswordIcon],\n      ['Autocomplete', ManageSearchIcon],\n      ['Text', NotesIcon],\n      ['Link', LinkIcon],\n      ['Markdown', TextFormatIcon],\n      ['Button', SmartButtonIcon],\n      ['Image', ImageIcon],\n      ['DataGrid', GridOnIcon],\n      ['TextField', Crop75Icon],\n      ['Select', ArrowDropDownCircleIcon],\n      ['List', ListIcon],\n      ['Paper', LayersIcon],\n      ['Form', DnsIcon],\n      ['Card', ContactPageIcon],\n      ['Tabs', TabIcon],\n      ['Slider', TuneIcon],\n      ['Switch', ToggleOnIcon],\n      ['Radio', RadioButtonCheckedIcon],\n      ['DatePicker', DateRangeIcon],\n      ['FilePicker', UploadFileIcon],\n      ['Checkbox', CheckBoxIcon],\n      ['CodeComponent', DashboardCustomizeSharpIcon],\n      ['CreateNew', AddIcon],\n      ['Tabs', TabIcon],\n      ['Container', AutoAwesomeMosaicIcon],\n      ['Chart', InsightsIcon],\n      ['Map', PlaceIcon],\n      ['Drawer', ViewSidebarIcon],\n      ['Pie Chart', PieChartIcon],\n      ['Icon', MoodIcon],\n      ['Html', HtmlIcon],\n      ['PageRow', TableRowsIcon],\n      ['PageColumn', ViewColumnIcon],\n      ['Metric', TagIcon],\n      ['Spacer', SpaceBarIcon],\n    ] satisfies [string, React.ComponentType<SvgIconProps>][]\n  ).map(([id, Icon]) => {\n    const StyledIcon: React.ComponentType<SvgIconProps> = styled(Icon, {\n      shouldForwardProp: (prop) => prop !== 'kind',\n    })<{\n      kind?: ComponentItemKind;\n    }>(({ kind }) => ({\n      fontSize: 24,\n      opacity: kind === 'future' ? 0.75 : 1,\n    }));\n    return [id, StyledIcon];\n  }),\n);\n\ntype ComponentItemKind = 'future' | 'builtIn' | 'create' | 'custom';\n\ninterface ComponentIconProps extends SvgIconProps {\n  id: string;\n  kind?: ComponentItemKind;\n}\n\nexport function ComponentIcon({ id: componentId, kind, ...props }: ComponentIconProps) {\n  const Icon = iconMap.get(kind === 'custom' ? 'CodeComponent' : componentId);\n  return Icon ? <Icon {...props} /> : null;\n}\n\ninterface ComponentCatalogItemProps {\n  draggable?: boolean;\n  onDragStart?: (event: React.DragEvent<HTMLButtonElement>) => void;\n  onClick?: () => void;\n  builtIn?: string;\n  id: string;\n  displayName: string;\n  kind?: ComponentItemKind;\n}\n\nfunction ComponentCatalogItem({\n  draggable,\n  onClick,\n  id,\n  displayName,\n  builtIn,\n  kind,\n  onDragStart,\n}: ComponentCatalogItemProps) {\n  return (\n    <Box\n      className=\"ComponentCatalogItem\"\n      onClick={onClick}\n      draggable={draggable}\n      onDragStart={onDragStart}\n      component={ButtonBase}\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: builtIn ? 65 : 60,\n        height: builtIn ? 65 : 60,\n        padding: 1,\n        borderRadius: 1,\n        border: 1,\n        borderColor: 'divider',\n        borderStyle: kind === 'create' ? 'dashed' : 'solid',\n        color: 'text.secondary',\n        backgroundColor: 'paper',\n        // https://stackoverflow.com/q/22922761\n        transform: 'translate(0, 0)',\n        '&:hover': {\n          backgroundColor: 'action.hover',\n        },\n        ...(draggable ? { cursor: 'grab' } : {}),\n        ...(onClick ? { cursor: 'pointer' } : {}),\n      }}\n    >\n      <ComponentIcon id={id} kind={kind} />\n      <span\n        style={{\n          fontSize: '0.625rem',\n          maxWidth: builtIn ? 65 : 60,\n          whiteSpace: 'nowrap',\n          opacity: kind === 'future' ? 0.75 : 1,\n          textOverflow: 'ellipsis',\n          overflow: 'hidden',\n        }}\n      >\n        {displayName}\n      </span>\n    </Box>\n  );\n}\n\nexport default ComponentCatalogItem;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Portal,\n  Snackbar,\n  TextField,\n} from '@mui/material';\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport useLatest from '@toolpad/utils/hooks/useLatest';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport DialogForm from '../../../components/DialogForm';\nimport { useNodeNameValidation } from './validation';\nimport { useProjectApi } from '../../../projectApi';\nimport OpenCodeEditorButton from '../../OpenCodeEditor';\nimport { useToolpadComponents } from '../toolpadComponents';\n\nfunction handleInputFocus(event: React.FocusEvent<HTMLInputElement>) {\n  event.target.select();\n}\n\nconst DEFAULT_NAME = 'MyComponent';\n\nexport interface CreateCodeComponentDialogProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport default function CreateCodeComponentDialog({\n  open,\n  onClose,\n  ...props\n}: CreateCodeComponentDialogProps) {\n  const projectApi = useProjectApi();\n\n  const codeComponents = useToolpadComponents();\n\n  const existingNames = React.useMemo(\n    () =>\n      new Set(\n        Object.values(codeComponents)\n          .map((component) => component?.displayName)\n          .filter(Boolean),\n      ),\n    [codeComponents],\n  );\n\n  const [name, setName] = React.useState(appDom.proposeName(DEFAULT_NAME, existingNames));\n\n  // Reset form\n  const handleReset = useEventCallback(() =>\n    setName(appDom.proposeName(DEFAULT_NAME, existingNames)),\n  );\n\n  React.useEffect(() => {\n    if (open) {\n      handleReset();\n    }\n  }, [open, handleReset]);\n\n  const inputErrorMsg = useNodeNameValidation(name, existingNames, 'component');\n  const isNameValid = !inputErrorMsg;\n  const isFormValid = isNameValid;\n\n  const [snackbarState, setSnackbarState] = React.useState<{ name: string } | null>(null);\n  const lastSnackbarState = useLatest(snackbarState);\n  const handleSnackbarClose = React.useCallback(() => {\n    setSnackbarState(null);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Dialog open={open} onClose={onClose} {...props}>\n        <DialogForm\n          autoComplete=\"off\"\n          onSubmit={async (event) => {\n            event.preventDefault();\n            invariant(isFormValid, 'Invalid form should not be submitted when submit is disabled');\n            await projectApi.methods.createComponent(name);\n            onClose();\n            setSnackbarState({ name });\n          }}\n        >\n          <DialogTitle>Create a new Code Component</DialogTitle>\n          <DialogContent>\n            <TextField\n              sx={{ my: 1 }}\n              required\n              onFocus={handleInputFocus}\n              autoFocus\n              fullWidth\n              label=\"name\"\n              value={name}\n              onChange={(event) => setName(event.target.value)}\n              error={open && !isNameValid}\n              helperText={inputErrorMsg}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"inherit\" variant=\"text\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button type=\"submit\" disabled={!isFormValid}>\n              Create\n            </Button>\n          </DialogActions>\n        </DialogForm>\n      </Dialog>\n      {lastSnackbarState ? (\n        <Portal>\n          <Snackbar\n            open={!!snackbarState}\n            onClose={handleSnackbarClose}\n            message={`Component \"${lastSnackbarState.name}\" created`}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n            action={\n              <React.Fragment>\n                <OpenCodeEditorButton\n                  filePath={name}\n                  variant=\"text\"\n                  fileType=\"component\"\n                  color=\"primary\"\n                  onSuccess={handleSnackbarClose}\n                />\n                <IconButton\n                  size=\"small\"\n                  aria-label=\"close\"\n                  color=\"inherit\"\n                  onClick={handleSnackbarClose}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </IconButton>\n              </React.Fragment>\n            }\n          />\n        </Portal>\n      ) : null}\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material';\n\nconst StyledDialogForm = styled('form')({\n  overflowY: 'auto',\n  display: 'flex',\n  flexDirection: 'column',\n});\n\nexport interface DialogFormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  children: React.ReactNode;\n  onKeyDown?: (event: React.KeyboardEvent) => void;\n}\n\nexport default function DialogForm({ children, onKeyDown = () => {}, ...rest }: DialogFormProps) {\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      const modifierKey = (event.metaKey || event.ctrlKey) && !event.shiftKey;\n\n      if (event.key === 'Enter' && modifierKey) {\n        const submitButton: HTMLButtonElement | null =\n          event.currentTarget.querySelector('[type=\"submit\"]');\n\n        if (submitButton) {\n          submitButton.click();\n        }\n      }\n\n      onKeyDown(event);\n    },\n    [onKeyDown],\n  );\n\n  return (\n    <StyledDialogForm onKeyDown={handleKeyDown} {...rest}>\n      {children}\n    </StyledDialogForm>\n  );\n}\n","import * as React from 'react';\nimport {\n  Button,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  Link,\n  DialogActions,\n  Tooltip,\n  ButtonProps,\n  CircularProgress,\n} from '@mui/material';\nimport CodeIcon from '@mui/icons-material/Code';\nimport { LoadingButton } from '@mui/lab';\nimport { useProjectApi } from '../projectApi';\nimport { CodeEditorFileType } from '../types';\n\ninterface OpenCodeEditorButtonProps extends ButtonProps {\n  filePath: string;\n  fileType: CodeEditorFileType;\n  onSuccess?: () => void;\n  iconButton?: boolean;\n  actionText?: string;\n}\n\ninterface MissingEditorDialogProps {\n  open: boolean;\n  onClose: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nfunction MissingEditorDialog({ open, onClose }: MissingEditorDialogProps) {\n  const handleMissingEditorDialogClose = React.useCallback(() => {\n    onClose(false);\n  }, [onClose]);\n\n  const id = React.useId();\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleMissingEditorDialogClose}\n      aria-labelledby={`${id}-title`}\n      aria-describedby=\"alert-dialog-description\"\n      onClick={(event) => event.stopPropagation()}\n    >\n      <DialogTitle id={`${id}-title`}>{'Editor not found'}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          No editor was detected on your system. If you use Visual Studio Code, this may be due to a\n          missing &quot;code&quot; command in your PATH. Otherwise you can set the{' '}\n          <code>$EDITOR</code> environment variable. <br />\n          Check the{' '}\n          <Link\n            href=\"https://mui.com/toolpad/studio/how-to-guides/editor-path/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            docs\n          </Link>{' '}\n          for more information.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleMissingEditorDialogClose}>Dismiss</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default function OpenCodeEditorButton({\n  filePath,\n  fileType,\n  iconButton,\n  onSuccess,\n  actionText = 'Open',\n  disabled,\n  ...rest\n}: OpenCodeEditorButtonProps) {\n  const [missingEditorDialog, setMissingEditorDialog] = React.useState(false);\n  const [busy, setBusy] = React.useState(false);\n  const projectApi = useProjectApi();\n\n  const handleClick = React.useCallback(\n    async (event: React.SyntheticEvent) => {\n      event.stopPropagation();\n      setBusy(true);\n      try {\n        await projectApi.methods.openCodeEditor(filePath, fileType);\n        onSuccess?.();\n      } catch {\n        setMissingEditorDialog(true);\n      } finally {\n        setBusy(false);\n      }\n    },\n    [projectApi, filePath, fileType, onSuccess],\n  );\n\n  return (\n    <React.Fragment>\n      {iconButton ? (\n        <Tooltip title=\"Open in code editor\">\n          <IconButton disabled={disabled || busy} size=\"small\" onClick={handleClick} {...rest}>\n            {busy ? (\n              <CircularProgress color=\"inherit\" size={16} />\n            ) : (\n              <CodeIcon fontSize=\"inherit\" color=\"primary\" />\n            )}\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <LoadingButton\n          disabled={disabled || busy}\n          onClick={handleClick}\n          loading={busy}\n          startIcon={\n            rest.variant === 'outlined' ? <CodeIcon fontSize=\"inherit\" color=\"primary\" /> : null\n          }\n          {...rest}\n        >\n          {actionText}\n        </LoadingButton>\n      )}\n      <MissingEditorDialog open={missingEditorDialog} onClose={setMissingEditorDialog} />\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\nimport useStorageState from '@toolpad/utils/hooks/useStorageState';\n\n/**\n * Sync state to local storage so that it persists through a page refresh. Usage is\n * similar to useState except we pass in a local storage key so that we can default\n * to that value on page load instead of the specified initial value.\n *\n * Since the local storage API isn't available in server-rendering environments, we\n * return initialValue during SSR and hydration.\n *\n * Things this hook does different from existing solutions:\n * - SSR-capable: it shows initial value during SSR and hydration, but immediately\n *   initializes when clientside mounted.\n * - Sync state across tabs: When another tab changes the value in local storage, the\n *   current tab follows suit.\n */\nexport default function useLocalStorageState<V>(\n  key: string,\n  initialValue: V,\n): [V, React.Dispatch<React.SetStateAction<V>>] {\n  const [input, setInput] = useStorageState('local', key, () => JSON.stringify(initialValue));\n\n  const value: V = React.useMemo(() => JSON.parse(input), [input]);\n  const handleChange: React.Dispatch<React.SetStateAction<V>> = React.useCallback(\n    (newValue) =>\n      setInput(\n        JSON.stringify(typeof newValue === 'function' ? (newValue as Function)(value) : newValue),\n      ),\n    [setInput, value],\n  );\n\n  return [value, handleChange];\n}\n","import * as React from 'react';\nimport { styled, SvgIconProps, Tooltip } from '@mui/material';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\n\nexport interface HelpTooltipIconProps extends SvgIconProps {\n  helpText: React.ReactNode;\n}\n\nconst HelpIcon = styled(HelpOutlineIcon)(({ theme }) => ({\n  color: theme.palette.text.secondary,\n}));\n\nexport default function HelpTooltipIcon({ helpText, ...props }: HelpTooltipIconProps) {\n  return (\n    <Tooltip title={helpText}>\n      <HelpIcon {...props} />\n    </Tooltip>\n  );\n}\n","import ComponentCatalog from './ComponentCatalog';\n\nexport default ComponentCatalog;\n","import { Box, Alert, AlertColor } from '@mui/material';\nimport * as React from 'react';\n\nexport interface NotFoundEditorProps {\n  className?: string;\n  message: string;\n  severity?: AlertColor;\n}\nexport default function NotFoundEditor({ className, message, severity }: NotFoundEditorProps) {\n  return (\n    <Box className={className} sx={{ p: 3 }}>\n      <Alert severity={severity ?? 'warning'}>{message}</Alert>\n    </Box>\n  );\n}\n","import * as React from 'react';\nimport { useAppState, useAppStateApi } from '../AppState';\nimport useShortcut from '../../utils/useShortcut';\nimport { hasFieldFocus } from '../../utils/fields';\n\nexport default function useUndoRedo() {\n  const { currentView } = useAppState();\n\n  const appStateApi = useAppStateApi();\n\n  const currentPageView = currentView.kind === 'page' ? currentView.view : null;\n\n  const handleUndo = React.useCallback(\n    (event: KeyboardEvent) => {\n      if (currentView.kind === 'page' && !currentPageView) {\n        event.preventDefault();\n        appStateApi.undo();\n      } else if (!hasFieldFocus()) {\n        appStateApi.undo();\n      }\n    },\n    [currentView.kind, currentPageView, appStateApi],\n  );\n\n  const handleRedo = React.useCallback(\n    (event: KeyboardEvent) => {\n      if (currentView.kind === 'page' && !currentPageView) {\n        event.preventDefault();\n        appStateApi.redo();\n      } else if (!hasFieldFocus()) {\n        appStateApi.redo();\n      }\n    },\n    [currentView.kind, currentPageView, appStateApi],\n  );\n\n  useShortcut({ key: 'z', metaKey: true, preventDefault: false }, handleUndo);\n  useShortcut({ key: 'z', metaKey: true, shiftKey: true, preventDefault: false }, handleRedo);\n}\n","import * as React from 'react';\nimport { NodeId } from '@toolpad/studio-runtime';\nimport { Stack, Chip, Tab, IconButton, LinearProgress } from '@mui/material';\nimport { LoadingButton, TabList, TabContext, TabPanel } from '@mui/lab';\nimport ClearOutlinedIcon from '@mui/icons-material/ClearOutlined';\nimport CircleIcon from '@mui/icons-material/Circle';\nimport CancelPresentationIcon from '@mui/icons-material/CancelPresentation';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { useAppState, useAppStateApi } from '../../../AppState';\nimport { usePageEditorState } from '../PageEditorProvider';\nimport QueryIcon from '../../QueryIcon';\nimport QueryEditorPanel from './QueryEditorPanel';\nimport useShortcut from '../../../../utils/useShortcut';\nimport { getModifierKey } from '../../../../utils/platform';\nimport useUnsavedChangesConfirm from '../../../hooks/useUnsavedChangesConfirm';\n\nfunction SaveShortcutIndicator() {\n  return (\n    <span>\n      {getModifierKey()}+<kbd>S</kbd>\n    </span>\n  );\n}\n\nfunction TabCloseIcon({\n  queryIndex,\n  unsaved,\n  queryId,\n}: {\n  queryIndex: number;\n  unsaved?: boolean;\n  queryId?: NodeId;\n}) {\n  const appStateApi = useAppStateApi();\n\n  const [notHovered, setNotHovered] = React.useState(true);\n\n  const onClose = React.useCallback(() => {\n    if (queryId === undefined) {\n      return;\n    }\n    appStateApi.closeQueryTab(queryId, queryIndex);\n  }, [appStateApi, queryIndex, queryId]);\n\n  const { handleCloseWithUnsavedChanges: handleCloseTab } = useUnsavedChangesConfirm({\n    hasUnsavedChanges: unsaved ?? false,\n    onClose,\n  });\n  return unsaved && notHovered ? (\n    <CircleIcon\n      aria-label={`Unsaved changes ${queryIndex + 1}`}\n      sx={{\n        color: (theme) =>\n          theme.palette.mode === 'dark'\n            ? theme.palette.primaryDark[300]\n            : theme.palette.primary.main,\n        fontSize: 12,\n      }}\n      onMouseEnter={() => {\n        setNotHovered(false);\n      }}\n    />\n  ) : (\n    <ClearOutlinedIcon\n      onMouseLeave={() => {\n        setNotHovered(true);\n      }}\n      onClick={(event) => {\n        // Prevent the tab from being selected.\n        event.stopPropagation();\n        handleCloseTab();\n      }}\n      role=\"button\"\n      aria-label={`Close query tab ${queryIndex + 1}`}\n      sx={{\n        color: (theme) =>\n          theme.palette.mode === 'dark' ? theme.palette.primaryDark[400] : theme.palette.grey[500],\n        fontSize: 12,\n        padding: '1px',\n        '&:hover': {\n          color: (theme) =>\n            theme.palette.mode === 'dark'\n              ? theme.palette.primaryDark[300]\n              : theme.palette.grey[700],\n          backgroundColor: (theme) =>\n            theme.palette.mode === 'dark'\n              ? theme.palette.primaryDark[700]\n              : theme.palette.grey[300],\n          borderRadius: '4px',\n        },\n      }}\n    />\n  );\n}\n\nexport default function QueryEditor() {\n  const { currentView, dom } = useAppState();\n\n  const appStateApi = useAppStateApi();\n  const state = usePageEditorState();\n\n  const page = appDom.getNode(dom, state.nodeId, 'page');\n\n  const currentQueryId = React.useMemo(() => {\n    if (currentView.kind === 'page' && currentView.view?.kind === 'query') {\n      return currentView.view.nodeId;\n    }\n    return '';\n  }, [currentView]);\n\n  const currentTabIndex: string = React.useMemo(() => {\n    if (currentView.kind === 'page' && currentView.view?.kind === 'query') {\n      return currentView.queryPanel?.currentTabIndex?.toString() || '';\n    }\n    return '';\n  }, [currentView]);\n\n  const handleTabChange = React.useCallback(\n    (event: React.SyntheticEvent, newValue: string) => {\n      if (currentView.kind === 'page') {\n        const tabIndex = Number(newValue);\n        const queryId = currentView.queryPanel?.queryTabs?.[tabIndex]?.meta?.id;\n        if (queryId) {\n          appStateApi.setView({\n            kind: 'page',\n            name: page.name,\n            view: { kind: 'query', nodeId: queryId },\n            queryPanel: {\n              ...currentView.queryPanel,\n              currentTabIndex: tabIndex,\n            },\n          });\n        }\n      }\n    },\n    [appStateApi, currentView, page.name],\n  );\n\n  const hasUnsavedChanges = React.useCallback(\n    (queryIndex: number) => {\n      if (\n        currentView.kind !== 'page' ||\n        !currentView.name ||\n        !currentView.queryPanel?.queryTabs ||\n        queryIndex === undefined\n      ) {\n        return false;\n      }\n      const tab = currentView.queryPanel?.queryTabs[queryIndex];\n      const draft = tab?.draft;\n      if (!tab || !tab.meta?.id || !draft) {\n        return false;\n      }\n      return draft !== tab.saved;\n    },\n    [currentView],\n  );\n\n  const handleSave = React.useCallback(() => {\n    if (\n      currentView.kind !== 'page' ||\n      !currentView.name ||\n      !currentView.queryPanel?.queryTabs ||\n      currentView.queryPanel?.currentTabIndex === undefined\n    ) {\n      return;\n    }\n    const currentTab = currentView.queryPanel?.queryTabs[currentView.queryPanel?.currentTabIndex];\n    const currentQueryDraft = currentTab?.draft;\n    if (!currentTab || !currentTab.meta?.id || !currentQueryDraft) {\n      return;\n    }\n    appStateApi.saveQueryDraft(currentQueryDraft);\n  }, [currentView, appStateApi]);\n\n  const onClosePanel = React.useCallback(() => {\n    appStateApi.closeQueryPanel();\n  }, [appStateApi]);\n\n  const saveDisabled = React.useMemo(\n    () => !hasUnsavedChanges(Number(currentTabIndex)),\n    [hasUnsavedChanges, currentTabIndex],\n  );\n\n  const hasUnsavedChangesInPanel = React.useMemo(() => {\n    if (currentView.kind !== 'page' || !currentView.queryPanel?.queryTabs) {\n      return false;\n    }\n    return currentView.queryPanel?.queryTabs.some((tab) => tab.draft !== tab.saved);\n  }, [currentView]);\n\n  const { handleCloseWithUnsavedChanges: handleClosePanel } = useUnsavedChangesConfirm({\n    hasUnsavedChanges: hasUnsavedChangesInPanel,\n    onClose: onClosePanel,\n  });\n\n  useShortcut({ key: 's', metaKey: true, disabled: saveDisabled }, handleSave);\n\n  return currentView.kind === 'page' &&\n    currentView.view?.kind === 'query' &&\n    currentQueryId &&\n    currentView?.queryPanel?.queryTabs ? (\n    <Stack\n      direction=\"column\"\n      sx={{ height: '100%', overflow: 'hidden', borderBottom: 5, borderColor: 'divider' }}\n      aria-label=\"Query editor\"\n      role=\"tabpanel\"\n    >\n      <TabContext value={currentTabIndex}>\n        <Stack\n          direction={'row'}\n          justifyContent={'space-between'}\n          sx={{ maxHeight: 36, borderBottom: 1, borderColor: 'divider' }}\n        >\n          <TabList onChange={handleTabChange} aria-label=\"Query editor tabs\">\n            {currentView.queryPanel?.queryTabs?.map((query, index) => (\n              <Tab\n                key={index}\n                label={\n                  <Chip\n                    label={query?.meta?.name}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    sx={{\n                      color: 'inherit',\n                      border: 0,\n                      ml: -1,\n                      '&:hover': { color: 'inherit' },\n                    }}\n                    deleteIcon={\n                      <TabCloseIcon\n                        queryIndex={index}\n                        unsaved={hasUnsavedChanges(index)}\n                        queryId={query?.meta?.id}\n                      />\n                    }\n                    // Need to pass onDelete to allow the delete icon to be rendered\n                    onDelete={() => {}}\n                  />\n                }\n                value={index.toString()}\n                icon={\n                  <QueryIcon\n                    id={query?.meta?.dataSource || 'default'}\n                    mode={query?.meta?.mode ?? 'query'}\n                    sx={{ mt: 0.2 }}\n                  />\n                }\n                iconPosition=\"start\"\n              />\n            ))}\n          </TabList>\n          <div>\n            <LoadingButton\n              disabled={saveDisabled}\n              onClick={handleSave}\n              variant=\"contained\"\n              color=\"primary\"\n              sx={{ width: 'fit-content', height: 32, my: 'auto', mt: 0.2, mr: 2 }}\n            >\n              Save &nbsp;\n              <SaveShortcutIndicator />\n            </LoadingButton>\n            <IconButton size=\"small\" disableRipple onClick={handleClosePanel}>\n              <CancelPresentationIcon\n                sx={{\n                  mr: 1,\n                  alignSelf: 'center',\n                  color: (theme) => theme.palette.grey[500],\n                  transition: (theme) =>\n                    theme.transitions.create('color', {\n                      duration: theme.transitions.duration.shortest,\n                    }),\n                  '&:hover, &:focus': {\n                    color: (theme) =>\n                      theme.palette.mode === 'dark'\n                        ? theme.palette.primaryDark[300]\n                        : theme.palette.primary.main,\n                  },\n                  fontSize: 16,\n                }}\n              />\n            </IconButton>\n          </div>\n        </Stack>\n\n        {currentView.queryPanel?.queryTabs?.map((query, index) => {\n          if (query && query.draft) {\n            return (\n              <TabPanel\n                key={index}\n                value={index.toString()}\n                aria-label={query.meta?.name}\n                sx={{\n                  p: 0,\n                  height: '100%',\n                  overflow: 'hidden',\n                }}\n              >\n                <React.Suspense fallback={<LinearProgress />}>\n                  <QueryEditorPanel draft={query.draft} saved={query.saved} />\n                </React.Suspense>\n              </TabPanel>\n            );\n          }\n          return null;\n        })}\n      </TabContext>\n    </Stack>\n  ) : null;\n}\n","import * as React from 'react';\nimport HttpIcon from '@mui/icons-material/Http';\nimport JavascriptIcon from '@mui/icons-material/Javascript';\nimport AdsClickIcon from '@mui/icons-material/AdsClick';\nimport AutoModeIcon from '@mui/icons-material/AutoMode';\nimport { SvgIconProps } from '@mui/material/SvgIcon';\nimport { SxProps } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst dataSourceIconMap = new Map<string, React.FC<SvgIconProps>>([\n  [\n    'rest',\n    styled(HttpIcon)(({ theme }) => ({\n      marginRight: theme.spacing(0.5),\n      marginLeft: theme.spacing(0.5),\n    })),\n  ],\n  [\n    'local',\n    styled(JavascriptIcon)(({ theme }) => ({\n      marginRight: theme.spacing(0.25),\n      marginLeft: theme.spacing(0),\n    })),\n  ],\n]);\n\nconst modeIconMap = new Map<string, React.ComponentType<SvgIconProps>>([\n  ['query', AutoModeIcon],\n  ['action', AdsClickIcon],\n  ['mutation', AdsClickIcon],\n]);\n\ninterface QueryIconProps {\n  id?: string;\n  mode?: string;\n  sx?: SxProps;\n}\n\nexport default function QueryIcon({ id: iconId, mode, sx }: QueryIconProps) {\n  const DataSourceIcon = dataSourceIconMap.get(iconId ?? '');\n  const ModeIcon = modeIconMap.get(mode ?? '');\n\n  return (\n    <div style={{ display: 'flex', gap: 0.5 }}>\n      {ModeIcon ? (\n        <ModeIcon\n          sx={{\n            fontSize: 12,\n            alignSelf: 'center',\n          }}\n        />\n      ) : null}\n      {DataSourceIcon ? <DataSourceIcon sx={sx} /> : null}\n    </div>\n  );\n}\n","import {\n  Box,\n  Stack,\n  TextField,\n  InputAdornment,\n  Alert,\n  MenuItem,\n  Typography,\n  inputLabelClasses,\n  inputBaseClasses,\n} from '@mui/material';\nimport * as React from 'react';\nimport { BindableAttrValue, LiveBinding } from '@toolpad/studio-runtime';\nimport { useBrowserJsRuntime } from '@toolpad/studio-runtime/jsBrowserRuntime';\nimport invariant from 'invariant';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { usePageEditorState } from '../PageEditorProvider';\nimport dataSources from '../../../../toolpadDataSources/client';\nimport { useEvaluateLiveBinding } from '../../useEvaluateLiveBinding';\nimport { useAppState, useAppStateApi } from '../../../AppState';\nimport { ConnectionContextProvider } from '../../../../toolpadDataSources/context';\nimport BindableEditor from '../BindableEditor';\nimport { useProjectApi } from '../../../../projectApi';\n\ninterface QueryEditorProps {\n  draft: appDom.QueryNode;\n  saved?: appDom.QueryNode;\n}\n\nfunction refetchIntervalInSeconds(maybeInterval?: number) {\n  if (typeof maybeInterval !== 'number') {\n    return undefined;\n  }\n  const seconds = Math.floor(maybeInterval / 1000);\n  return seconds > 0 ? seconds : undefined;\n}\n\ninterface QuerySettingsTabProps {\n  draft: appDom.QueryNode;\n  liveEnabled: LiveBinding;\n  pageState: any;\n  globalScopeMeta: any;\n  jsBrowserRuntime: any;\n}\n\nfunction QuerySettingsTab({\n  draft,\n  liveEnabled,\n  pageState,\n  globalScopeMeta,\n  jsBrowserRuntime,\n}: QuerySettingsTabProps) {\n  const appStateApi = useAppStateApi();\n\n  const updateAttribute = React.useCallback(\n    function updateAttribute<K extends keyof appDom.QueryNode['attributes']>(\n      attrName: K,\n      attrValue: appDom.QueryNode['attributes'][K],\n    ) {\n      appStateApi.updateQueryDraft((node) => ({\n        ...node,\n        attributes: {\n          ...node.attributes,\n          [attrName]: attrValue,\n        },\n      }));\n    },\n    [appStateApi],\n  );\n\n  const handleModeChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (event.target.value === 'mutation' || event.target.value === 'query') {\n        updateAttribute('mode', event.target.value);\n      }\n    },\n    [updateAttribute],\n  );\n\n  const handleEnabledChange = React.useCallback(\n    (newValue: BindableAttrValue<boolean> | null) => {\n      if (newValue !== null) {\n        updateAttribute('enabled', newValue);\n      }\n    },\n    [updateAttribute],\n  );\n\n  const handleRefetchIntervalChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const interval = Number(event.target.value);\n\n      if (!Number.isNaN(interval) && interval > 0) {\n        updateAttribute('refetchInterval', interval * 1000);\n      }\n    },\n    [updateAttribute],\n  );\n  return (\n    <Box\n      display={'flex'}\n      flexDirection={'column'}\n      sx={{\n        p: 0.25,\n        mt: 1,\n        ml: 1,\n        mr: 1,\n      }}\n    >\n      <Stack\n        display=\"grid\"\n        gridTemplateRows=\"1fr 1fr 1fr\"\n        gridTemplateColumns={'0.45fr 1fr'}\n        rowGap={0.5}\n      >\n        <Typography fontSize={12} sx={{ alignSelf: 'center' }}>\n          Set query mode:\n        </Typography>\n        <TextField\n          select\n          label=\"mode\"\n          value={draft?.attributes?.mode ?? 'query'}\n          onChange={handleModeChange}\n          sx={{\n            [`& .${inputLabelClasses.root}`]: { fontSize: 12 },\n            [`& .${inputBaseClasses.root}`]: { fontSize: 12 },\n          }}\n        >\n          <MenuItem value=\"query\">Fetch at any time to always be available on the page</MenuItem>\n          <MenuItem value=\"mutation\">Only fetch on manual action</MenuItem>\n        </TextField>\n        {draft?.attributes?.mode !== 'mutation' ? (\n          <React.Fragment>\n            <Typography fontSize={12} sx={{ alignSelf: 'center' }}>\n              Set refetch interval:\n            </Typography>\n            <TextField\n              sx={{\n                [`& .${inputLabelClasses.root}`]: { fontSize: 12 },\n                [`& .${inputBaseClasses.root}`]: { fontSize: 12 },\n                maxWidth: 200,\n              }}\n              type=\"number\"\n              label=\"Refetch interval\"\n              value={refetchIntervalInSeconds(draft?.attributes?.refetchInterval) ?? ''}\n              onChange={handleRefetchIntervalChange}\n              slotProps={{\n                input: {\n                  startAdornment: <InputAdornment position=\"start\">s</InputAdornment>,\n                },\n              }}\n            />\n            <Typography fontSize={12} sx={{ alignSelf: 'center' }}>\n              Set query enabled/disabled:\n            </Typography>\n            <BindableEditor<boolean>\n              liveBinding={liveEnabled}\n              globalScope={pageState}\n              globalScopeMeta={globalScopeMeta}\n              jsRuntime={jsBrowserRuntime}\n              label=\"Enabled\"\n              propType={{ type: 'boolean' }}\n              value={draft?.attributes?.enabled ?? true}\n              onChange={handleEnabledChange}\n              sx={{ maxWidth: 100 }}\n            />\n          </React.Fragment>\n        ) : null}\n      </Stack>\n    </Box>\n  );\n}\n\nexport default function QueryEditorPanel({ draft, saved }: QueryEditorProps) {\n  const { dom } = useAppState();\n  const projectApi = useProjectApi();\n\n  const connectionId =\n    appDom.deref(saved ? saved?.attributes?.connectionId : draft?.attributes?.connectionId) ?? null;\n\n  const connection = connectionId ? appDom.getMaybeNode(dom, connectionId, 'connection') : null;\n  const dataSourceId = saved ? saved?.attributes?.dataSource : draft?.attributes?.dataSource;\n  const dataSource = (dataSourceId && dataSources[dataSourceId]) || null;\n\n  const connectionParams = connection?.attributes?.params;\n\n  const { pageState, globalScopeMeta } = usePageEditorState();\n\n  const queryEditorContext = React.useMemo(\n    () => (dataSourceId ? { dataSourceId, connectionId } : null),\n    [dataSourceId, connectionId],\n  );\n\n  const jsBrowserRuntime = useBrowserJsRuntime();\n\n  const liveEnabled = useEvaluateLiveBinding({\n    jsRuntime: jsBrowserRuntime,\n    input: draft?.attributes?.enabled || null,\n    globalScope: pageState,\n  });\n\n  const execPrivate = React.useCallback(\n    (method: string, args: any[]) => {\n      invariant(dataSourceId, 'dataSourceId must be set');\n      return projectApi.methods.dataSourceExecPrivate(dataSourceId, method, args);\n    },\n    [projectApi, dataSourceId],\n  );\n\n  return dataSourceId && dataSource && queryEditorContext ? (\n    <ConnectionContextProvider value={queryEditorContext}>\n      <Box sx={{ height: '100%', p: 0, overflow: 'hidden' }}>\n        <dataSource.QueryEditor\n          connectionParams={connectionParams}\n          value={draft}\n          globalScope={pageState}\n          globalScopeMeta={globalScopeMeta}\n          execApi={execPrivate}\n          settingsTab={\n            <QuerySettingsTab\n              {...{\n                draft,\n                liveEnabled,\n                pageState,\n                globalScopeMeta,\n                jsBrowserRuntime,\n              }}\n            />\n          }\n        />\n      </Box>\n    </ConnectionContextProvider>\n  ) : (\n    <Alert severity=\"error\">Datasource &quot;{dataSourceId}&quot; not found</Alert>\n  );\n}\n","import * as React from 'react';\nimport {\n  BindableAttrEntries,\n  BindableAttrValue,\n  ScopeMeta,\n  LiveBinding,\n} from '@toolpad/studio-runtime';\nimport {\n  Box,\n  Button,\n  InputAdornment,\n  MenuItem,\n  Stack,\n  Tab,\n  TextField,\n  Toolbar,\n  Link,\n  Typography,\n  Alert,\n  styled,\n  Divider,\n  inputLabelClasses,\n  inputBaseClasses,\n} from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport { Controller, useForm } from 'react-hook-form';\nimport { TabContext, TabList } from '@mui/lab';\nimport { createServerJsRuntime } from '@toolpad/studio-runtime/jsServerRuntime';\nimport { Maybe } from '@toolpad/utils/types';\nimport { Panel, PanelGroup, PanelResizeHandle } from '../../components/resizablePanels';\nimport { ClientDataSource, ConnectionEditorProps, QueryEditorProps } from '../../types';\nimport {\n  FetchPrivateQuery,\n  FetchQuery,\n  FetchResult,\n  RestConnectionParams,\n  Body,\n  ResponseType,\n  IntrospectionResult,\n} from './types';\nimport { getAuthenticationHeaders, parseBaseUrl } from './shared';\nimport BindableEditor, {\n  RenderControlParams,\n} from '../../toolpad/AppEditor/PageEditor/BindableEditor';\nimport {\n  useEvaluateLiveBinding,\n  useEvaluateLiveBindingEntries,\n} from '../../toolpad/AppEditor/useEvaluateLiveBinding';\nimport MapEntriesEditor from '../../components/MapEntriesEditor';\nimport AuthenticationEditor from './AuthenticationEditor';\nimport { isSaveDisabled, validation } from '../../utils/forms';\nimport { useAppState, useAppStateApi } from '../../toolpad/AppState';\nimport { QueryEditorTabType, QueryEditorToolsTabType } from '../../utils/domView';\nimport ParametersEditor from '../../toolpad/AppEditor/PageEditor/ParametersEditor';\nimport BodyEditor from './BodyEditor';\nimport TabPanel from '../../components/TabPanel';\nimport JsonView from '../../components/JsonView';\nimport useQueryPreview from '../useQueryPreview';\nimport TransformInput from '../TranformInput';\nimport Devtools from '../../components/Devtools';\nimport { createHarLog, mergeHar } from '../../utils/har';\nimport useFetchPrivate from '../useFetchPrivate';\nimport QueryPreview from '../QueryPreview';\nimport { usePrivateQuery } from '../context';\nimport HelpTooltipIcon from '../../components/HelpTooltipIcon';\n\nconst HTTP_METHODS = ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'HEAD', 'OPTIONS'];\n\nconst QUERY_SCOPE_META: ScopeMeta = {\n  parameters: {\n    description: 'Parameters that can be bound to app scope variables',\n  },\n};\n\nconst ButtonLink = styled('button')(({ theme }) => ({\n  background: 'none',\n  border: 'none',\n  fontSize: 'inherit',\n  padding: 0,\n  color: theme.palette.primary.main,\n  textDecoration: 'underline',\n}));\n\ninterface UrlControlProps extends RenderControlParams<string> {\n  baseUrl: string | null;\n}\n\nfunction UrlControl({ label, disabled, baseUrl, value, onChange }: UrlControlProps) {\n  const handleChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      onChange(event.target.value);\n    },\n    [onChange],\n  );\n\n  return (\n    <TextField\n      fullWidth\n      value={value ?? ''}\n      disabled={disabled}\n      onChange={handleChange}\n      label={label}\n      slotProps={{\n        input: baseUrl\n          ? {\n              startAdornment: <InputAdornment position=\"start\">{baseUrl}</InputAdornment>,\n            }\n          : undefined,\n      }}\n    />\n  );\n}\n\nfunction withDefaults(value: Maybe<RestConnectionParams>): RestConnectionParams {\n  return {\n    baseUrl: '',\n    headers: [],\n    authentication: null,\n    ...value,\n  };\n}\n\nfunction ConnectionParamsInput({ value, onChange }: ConnectionEditorProps<RestConnectionParams>) {\n  const { handleSubmit, register, formState, reset, control, watch } = useForm({\n    defaultValues: withDefaults(value),\n    reValidateMode: 'onChange',\n    mode: 'all',\n  });\n  React.useEffect(() => reset(withDefaults(value)), [reset, value]);\n\n  const doSubmit = handleSubmit((connectionParams) =>\n    onChange({\n      ...connectionParams,\n      baseUrl: connectionParams.baseUrl && parseBaseUrl(connectionParams.baseUrl).href,\n    }),\n  );\n\n  const baseUrlValue = watch('baseUrl');\n  const headersValue = watch('headers');\n  const authenticationValue = watch('authentication');\n  const authenticationHeaders = getAuthenticationHeaders(authenticationValue);\n\n  const mustHaveBaseUrl: boolean =\n    (headersValue && headersValue.length > 0) || !!authenticationValue;\n\n  const headersAllowed = !!baseUrlValue;\n\n  const baseUrlInputProps = {\n    label: 'base url',\n    ...register('baseUrl', {\n      validate(input?: string) {\n        if (!input) {\n          if (mustHaveBaseUrl) {\n            return 'A base url is required when headers are used';\n          }\n          return true;\n        }\n        try {\n          return !!parseBaseUrl(input);\n        } catch (error) {\n          return 'Must be an absolute url';\n        }\n      },\n    }),\n    ...validation(formState, 'baseUrl'),\n  };\n\n  return (\n    <Stack direction=\"column\" gap={3} sx={{ py: 3 }}>\n      <TextField {...baseUrlInputProps} />\n      <Typography>Headers:</Typography>\n      <Controller\n        name=\"headers\"\n        control={control}\n        render={({ field: { value: fieldValue = [], onChange: onFieldChange, ref, ...field } }) => {\n          const allHeaders = [...authenticationHeaders, ...fieldValue];\n          return (\n            <MapEntriesEditor\n              {...field}\n              disabled={!headersAllowed}\n              fieldLabel=\"header\"\n              value={allHeaders}\n              onChange={(headers) => onFieldChange(headers.slice(authenticationHeaders.length))}\n              isEntryDisabled={(entry, index) => index < authenticationHeaders.length}\n            />\n          );\n        }}\n      />\n      <Typography>Authentication:</Typography>\n      <Controller\n        name=\"authentication\"\n        control={control}\n        render={({ field: { value: fieldValue, ref, ...field } }) => (\n          <AuthenticationEditor {...field} disabled={!headersAllowed} value={fieldValue ?? null} />\n        )}\n      />\n\n      <Toolbar disableGutters>\n        <Box sx={{ flex: 1 }} />\n        <Button variant=\"contained\" onClick={doSubmit} disabled={isSaveDisabled(formState)}>\n          Save\n        </Button>\n      </Toolbar>\n    </Stack>\n  );\n}\n\ninterface ResolvedPreviewProps {\n  preview: FetchResult | null;\n  onShowTransform: () => void;\n}\n\nfunction ResolvedPreview({\n  preview,\n  onShowTransform,\n}: ResolvedPreviewProps): React.ReactElement | null {\n  if (!preview) {\n    return (\n      <Alert\n        severity=\"info\"\n        sx={(theme) => ({\n          my: theme.spacing(2),\n          mx: 'auto',\n          p: theme.spacing(1),\n          fontSize: theme.typography.pxToRem(11),\n          width: 'fit-content',\n        })}\n      >\n        No request has been sent yet. <br />\n        Click Run\n        <PlayArrowIcon\n          aria-label=\"Run preview\"\n          sx={{ verticalAlign: 'middle', fontSize: '12px', mr: 0.25 }}\n        />\n        to preview the response here.\n      </Alert>\n    );\n  }\n\n  const { data, untransformedData } = preview;\n  let alert = null;\n  const responseDataKeys = Object.keys(untransformedData);\n\n  if (typeof data === 'undefined' && typeof untransformedData !== 'undefined') {\n    alert = (\n      <Alert severity=\"warning\" sx={{ m: 1, p: 1, fontSize: 11 }}>\n        <Box sx={{ mb: 1 }}>\n          Request successfully completed and returned data\n          {responseDataKeys.length > 0 ? ' with the following keys:' : '.'}\n        </Box>\n\n        {responseDataKeys.map((key) => (\n          <Box sx={{ display: 'block' }} key={key}>\n            - {key}\n          </Box>\n        ))}\n\n        <Box sx={{ mt: 1 }}>\n          However, it seems that the <ButtonLink onClick={onShowTransform}>transform</ButtonLink>{' '}\n          function returned an <code>undefined</code> value.\n        </Box>\n      </Alert>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {alert}\n      <JsonView sx={{ height: '100%' }} src={preview?.data} />\n    </React.Fragment>\n  );\n}\n\nconst EMPTY_PARAMS: BindableAttrEntries = [];\n\nfunction QueryEditor({\n  globalScope,\n  globalScopeMeta,\n  connectionParams: rawConnectionParams,\n  value: input,\n  settingsTab,\n}: QueryEditorProps<RestConnectionParams, FetchQuery>) {\n  const appStateApi = useAppStateApi();\n  const { currentView } = useAppState();\n  const isBrowserSide = input.attributes.query.browser;\n\n  const connectionParams = isBrowserSide ? null : rawConnectionParams;\n  const baseUrl = isBrowserSide ? null : (connectionParams?.baseUrl ?? null);\n\n  const urlValue: BindableAttrValue<string> = input.attributes.query.url ?? '';\n\n  const introspection = usePrivateQuery<FetchPrivateQuery, IntrospectionResult>(\n    {\n      kind: 'introspection',\n    },\n    { retry: false },\n  );\n\n  const updateProp = React.useCallback(\n    function updateProp<K extends keyof FetchQuery>(prop: K, value: FetchQuery[K]) {\n      appStateApi.updateQueryDraft((draft) => ({\n        ...draft,\n        attributes: {\n          ...draft.attributes,\n          query: {\n            ...draft.attributes.query,\n            [prop]: value,\n          },\n        },\n      }));\n    },\n    [appStateApi],\n  );\n\n  const env = React.useMemo(() => introspection?.data?.env ?? {}, [introspection?.data?.env]);\n  const declaredEnvKeys = React.useMemo(\n    () => introspection?.data?.declaredEnvKeys ?? [],\n    [introspection?.data?.declaredEnvKeys],\n  );\n  const handleParamsChange = React.useCallback(\n    (newParams: [string, BindableAttrValue<string>][]) => {\n      appStateApi.updateQueryDraft((draft) => ({\n        ...draft,\n        params: newParams,\n      }));\n    },\n    [appStateApi],\n  );\n\n  const handleUrlChange = React.useCallback(\n    (newUrl: BindableAttrValue<string> | null) => {\n      updateProp('url', newUrl ?? '');\n    },\n    [updateProp],\n  );\n\n  const handleMethodChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      updateProp('method', event.target.value);\n    },\n    [updateProp],\n  );\n\n  const handleTransformEnabledChange = React.useCallback(\n    (transformEnabled: boolean) => {\n      updateProp('transformEnabled', transformEnabled);\n    },\n    [updateProp],\n  );\n\n  const handleTransformChange = React.useCallback(\n    (transform: string) => {\n      updateProp('transform', transform);\n    },\n    [updateProp],\n  );\n\n  const handleBodyChange = React.useCallback(\n    (newBody: Maybe<Body>) => {\n      updateProp('body', newBody || undefined);\n    },\n    [updateProp],\n  );\n\n  const handleSearchParamsChange = React.useCallback(\n    (newSearchParams: BindableAttrEntries) => {\n      updateProp('searchParams', newSearchParams);\n    },\n    [updateProp],\n  );\n\n  const handleHeadersChange = React.useCallback(\n    (newHeaders: BindableAttrEntries) => {\n      updateProp('headers', newHeaders);\n    },\n    [updateProp],\n  );\n\n  const handleResponseTypeChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      updateProp('response', {\n        kind: event.target.value,\n      } as ResponseType);\n    },\n    [updateProp],\n  );\n\n  const paramsEntries = input.params || EMPTY_PARAMS;\n  const jsServerRuntime = React.useMemo(() => createServerJsRuntime(env ?? {}), [env]);\n\n  const paramsEditorLiveValue = useEvaluateLiveBindingEntries({\n    jsRuntime: jsServerRuntime,\n    input: paramsEntries,\n    globalScope,\n  });\n\n  const previewParams = React.useMemo(\n    () => Object.fromEntries(paramsEditorLiveValue.map(([key, binding]) => [key, binding?.value])),\n    [paramsEditorLiveValue],\n  );\n\n  const queryScope = React.useMemo(\n    () => ({\n      parameters: previewParams,\n    }),\n    [previewParams],\n  );\n\n  const liveUrl: LiveBinding = useEvaluateLiveBinding({\n    jsRuntime: jsServerRuntime,\n    input: urlValue,\n    globalScope: queryScope,\n  });\n\n  const liveSearchParams = useEvaluateLiveBindingEntries({\n    jsRuntime: jsServerRuntime,\n    input: input.attributes.query.searchParams || [],\n    globalScope: queryScope,\n  });\n\n  const liveHeaders = useEvaluateLiveBindingEntries({\n    jsRuntime: jsServerRuntime,\n    input: input.attributes.query.headers || [],\n    globalScope: queryScope,\n  });\n\n  const [configTab, setConfigTab] = React.useState('urlQuery');\n\n  const currentTab = React.useMemo(() => {\n    if (\n      currentView.kind === 'page' &&\n      currentView.view?.kind === 'query' &&\n      currentView.queryPanel?.currentTabIndex !== undefined\n    ) {\n      return currentView.queryPanel?.queryTabs?.[currentView.queryPanel?.currentTabIndex];\n    }\n    return null;\n  }, [currentView]);\n\n  const handleToolsTabTypeChange = React.useCallback(\n    (value: QueryEditorToolsTabType) => {\n      appStateApi.updateQueryTab((tab) => ({\n        ...tab,\n        toolsTabType: value,\n      }));\n    },\n    [appStateApi],\n  );\n\n  const fetchPrivate = useFetchPrivate<FetchPrivateQuery, FetchResult>();\n  const fetchPreview = React.useCallback(\n    (query: FetchQuery, params: Record<string, string>) =>\n      fetchPrivate({ kind: 'debugExec', query, params }),\n    [fetchPrivate],\n  );\n\n  const [previewHar, setPreviewHar] = React.useState(() => createHarLog());\n  const { preview, runPreview, isLoading } = useQueryPreview(\n    fetchPreview,\n    input.attributes.query,\n    previewParams as Record<string, string>,\n    {\n      onPreview: React.useCallback((result: FetchResult) => {\n        setPreviewHar((existing) =>\n          result.har ? mergeHar(createHarLog(), existing, result.har) : existing,\n        );\n      }, []),\n    },\n  );\n\n  const handleHarClear = React.useCallback(() => setPreviewHar(createHarLog()), []);\n\n  const handleConfigTabChange = React.useCallback(\n    (event: React.SyntheticEvent, newValue: string) => setConfigTab(newValue),\n    [],\n  );\n\n  const handleTabTypeChange = React.useCallback(\n    (event: React.SyntheticEvent, value: QueryEditorTabType) => {\n      appStateApi.updateQueryTab((tab) => ({\n        ...tab,\n        tabType: value,\n      }));\n    },\n    [appStateApi],\n  );\n\n  return currentTab ? (\n    <PanelGroup autoSaveId=\"toolpad/rest-panel\" direction=\"horizontal\">\n      <Panel id=\"rest-query-left\" defaultSize={50} minSize={40} style={{ overflow: 'auto' }}>\n        <TabContext value={currentTab?.tabType ?? 'config'}>\n          <Stack direction=\"column\" gap={0}>\n            <Stack\n              direction={'row'}\n              sx={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                pr: 0.5,\n              }}\n            >\n              <TabList\n                sx={{ '& button': { fontSize: 12, fontWeight: 'normal' } }}\n                onChange={handleTabTypeChange}\n                aria-label=\"Query editor active tab type\"\n              >\n                <Tab label=\"Config\" value=\"config\" />\n                <Tab label=\"Settings\" value=\"settings\" />\n              </TabList>\n              <HelpTooltipIcon\n                helpText={\n                  <Typography variant=\"inherit\">\n                    To configure a HTTP request, check out the{' '}\n                    <Link\n                      href=\"https://mui.com/toolpad/studio/concepts/http-requests/\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      docs\n                    </Link>\n                    .\n                  </Typography>\n                }\n              />\n            </Stack>\n\n            <Divider />\n            <TabPanel value=\"config\" disableGutters>\n              <React.Fragment>\n                <Box\n                  sx={{\n                    display: 'grid',\n                    gridTemplateColumns: 'auto 1fr 0.1fr',\n                    gap: 1,\n                    my: 1.5,\n                    ml: 1,\n                  }}\n                >\n                  <TextField\n                    select\n                    value={input.attributes.query.method || 'GET'}\n                    size=\"small\"\n                    sx={{\n                      '& .MuiSelect-select': {\n                        height: (theme) => theme.typography.pxToRem(20),\n                      },\n                    }}\n                    onChange={handleMethodChange}\n                    slotProps={{\n                      htmlInput: { sx: { fontSize: 12 } },\n                    }}\n                  >\n                    {HTTP_METHODS.map((method) => (\n                      <MenuItem key={method} value={method}>\n                        {method}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                  <BindableEditor<string>\n                    liveBinding={liveUrl}\n                    globalScope={queryScope}\n                    globalScopeMeta={QUERY_SCOPE_META}\n                    sx={{ flex: 1 }}\n                    jsRuntime={jsServerRuntime}\n                    label=\"url\"\n                    propType={{ type: 'string' }}\n                    renderControl={(props) => <UrlControl baseUrl={baseUrl} {...props} />}\n                    value={urlValue}\n                    onChange={handleUrlChange}\n                  />\n                </Box>\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1, mt: 2.5, mx: 0 }}>\n                  <TabContext value={configTab}>\n                    <Box sx={{ border: 1, borderColor: 'divider' }}>\n                      <TabList\n                        sx={{ '& button': { fontSize: 12, fontWeight: 'normal' } }}\n                        onChange={handleConfigTabChange}\n                        aria-label=\"Fetch options active tab\"\n                      >\n                        <Tab label=\"URL query\" value=\"urlQuery\" />\n                        <Tab label=\"Body\" value=\"body\" />\n                        <Tab label=\"Headers\" value=\"headers\" />\n                        <Tab label=\"Response\" value=\"response\" />\n                        <Tab label=\"Transform\" value=\"transform\" />\n                      </TabList>\n                    </Box>\n                    <TabPanel disableGutters value=\"urlQuery\" sx={{ ml: 1 }}>\n                      <ParametersEditor\n                        value={input.attributes.query.searchParams ?? []}\n                        onChange={handleSearchParamsChange}\n                        globalScope={queryScope}\n                        globalScopeMeta={QUERY_SCOPE_META}\n                        liveValue={liveSearchParams}\n                        jsRuntime={jsServerRuntime}\n                      />\n                    </TabPanel>\n                    <TabPanel disableGutters value=\"body\" sx={{ ml: 1 }}>\n                      <BodyEditor\n                        value={input.attributes.query.body}\n                        onChange={handleBodyChange}\n                        globalScope={queryScope}\n                        globalScopeMeta={QUERY_SCOPE_META}\n                        method={input.attributes.query.method || 'GET'}\n                      />\n                    </TabPanel>\n                    <TabPanel disableGutters value=\"headers\" sx={{ ml: 1 }}>\n                      <ParametersEditor\n                        value={input.attributes.query.headers ?? []}\n                        onChange={handleHeadersChange}\n                        globalScope={queryScope}\n                        globalScopeMeta={QUERY_SCOPE_META}\n                        liveValue={liveHeaders}\n                        jsRuntime={jsServerRuntime}\n                        env={env}\n                      />\n                    </TabPanel>\n                    <TabPanel disableGutters value=\"response\" sx={{ ml: 1 }}>\n                      <TextField\n                        select\n                        label=\"response type\"\n                        sx={{\n                          [`& .${inputLabelClasses.root}`]: { fontSize: 12 },\n                          [`& .${inputBaseClasses.root}`]: { fontSize: 12 },\n                          width: 200,\n                        }}\n                        value={input.attributes.query.response?.kind || 'json'}\n                        onChange={handleResponseTypeChange}\n                      >\n                        <MenuItem value=\"raw\">raw</MenuItem>\n                        <MenuItem value=\"json\">JSON</MenuItem>\n                        <MenuItem value=\"csv\" disabled>\n                          🚧 CSV\n                        </MenuItem>\n                        <MenuItem value=\"xml\" disabled>\n                          🚧 XML\n                        </MenuItem>\n                      </TextField>\n                    </TabPanel>\n                    <TabPanel disableGutters value=\"transform\" sx={{ ml: 1 }}>\n                      <TransformInput\n                        value={input.attributes.query.transform ?? 'return data;'}\n                        onChange={handleTransformChange}\n                        enabled={input.attributes.query.transformEnabled ?? false}\n                        onEnabledChange={handleTransformEnabledChange}\n                        globalScope={{ data: preview?.untransformedData }}\n                        loading={false}\n                      />\n                    </TabPanel>\n                  </TabContext>\n                </Box>\n              </React.Fragment>\n            </TabPanel>\n            <TabPanel value=\"settings\" disableGutters>\n              {settingsTab}\n            </TabPanel>\n          </Stack>\n        </TabContext>\n      </Panel>\n      <PanelResizeHandle />\n      <Panel id=\"rest-query-right\" defaultSize={50} minSize={20}>\n        <PanelGroup autoSaveId=\"toolpad/rest/params-tools-split\" direction=\"vertical\">\n          <Panel defaultSize={50} style={{ overflow: 'auto', scrollbarGutter: 'stable' }}>\n            <Box display={'flex'} flexDirection={'column'}>\n              <TabContext value=\"parameters\">\n                <TabList\n                  sx={{\n                    '& button': { fontSize: 12, fontWeight: 'normal', cursor: 'default' },\n                  }}\n                  aria-label=\"Query editor parameters\"\n                >\n                  <Tab label=\"Parameters\" value=\"parameters\" />\n                </TabList>\n                <Divider sx={{ mb: 1.5 }} />\n                <TabPanel value=\"parameters\" disableGutters sx={{ ml: 1 }}>\n                  <ParametersEditor\n                    value={paramsEntries}\n                    onChange={handleParamsChange}\n                    globalScope={globalScope}\n                    globalScopeMeta={globalScopeMeta}\n                    liveValue={paramsEditorLiveValue}\n                    jsRuntime={jsServerRuntime}\n                    env={env}\n                    declaredEnvKeys={declaredEnvKeys}\n                  />\n                </TabPanel>\n              </TabContext>\n            </Box>\n          </Panel>\n          <PanelResizeHandle />\n          <Panel defaultSize={50} style={{ overflow: 'auto', scrollbarGutter: 'stable' }}>\n            <TabContext value={currentTab.toolsTabType}>\n              <Box\n                sx={{\n                  borderBottom: 1,\n                  borderColor: 'divider',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  height: 34,\n                }}\n              >\n                <TabList\n                  sx={{ '& button': { fontSize: 12, fontWeight: 'normal' } }}\n                  onChange={(event, value) => handleToolsTabTypeChange(value)}\n                  aria-label=\"Query tools active tab\"\n                >\n                  <Tab label={'Preview'} value=\"preview\" />\n                  <Tab label=\"Dev Tools\" value=\"devTools\" />\n                </TabList>\n                <LoadingButton\n                  variant=\"text\"\n                  size=\"small\"\n                  loading={isLoading}\n                  disabled={isLoading}\n                  onClick={runPreview}\n                  endIcon={<PlayArrowIcon aria-label=\"Run preview\" onClick={runPreview} />}\n                >\n                  Run\n                </LoadingButton>\n              </Box>\n              <TabPanel value=\"preview\" disableGutters>\n                <QueryPreview isLoading={currentTab.isPreviewLoading} error={preview?.error}>\n                  <ResolvedPreview\n                    preview={preview}\n                    onShowTransform={() => setConfigTab('transform')}\n                  />\n                </QueryPreview>\n              </TabPanel>\n              <TabPanel value=\"devTools\" disableGutters>\n                <Devtools sx={{ overflow: 'auto' }} har={previewHar} onHarClear={handleHarClear} />\n              </TabPanel>\n            </TabContext>\n          </Panel>\n        </PanelGroup>\n      </Panel>\n    </PanelGroup>\n  ) : (\n    <Alert severity=\"error\">\n      An error occurred while rendering this tab. Please refresh and try again.\n    </Alert>\n  );\n}\n\nfunction getInitialQueryValue(): FetchQuery {\n  return {\n    method: 'GET',\n    url: 'https://raw.githubusercontent.com/mui/toolpad/master/public/movies.json',\n    headers: [],\n    browser: false,\n  };\n}\n\nconst dataSource: ClientDataSource<RestConnectionParams, FetchQuery> = {\n  displayName: 'REST API',\n  ConnectionParamsInput,\n  QueryEditor,\n  getInitialQueryValue,\n  hasDefault: true,\n};\n\nexport default dataSource;\n","import * as React from 'react';\nimport { Grid, MenuItem, Stack, TextField } from '@mui/material';\nimport { Maybe, WithControlledProp } from '@toolpad/utils/types';\nimport { ApiKeyAuth, Authentication, BasicAuth, BearerTokenAuth } from './types';\n\ninterface AuthMethodEditorProps<T> extends WithControlledProp<T> {\n  disabled?: boolean;\n}\n\nfunction ApiKeyAuthEditor({ disabled, value, onChange }: AuthMethodEditorProps<ApiKeyAuth>) {\n  return (\n    <Stack gap={1}>\n      <TextField\n        disabled={disabled}\n        label=\"header\"\n        value={value.header}\n        onChange={(event) => onChange({ ...value, header: event.target.value })}\n      />\n      <TextField\n        disabled={disabled}\n        label=\"key\"\n        value={value.key}\n        onChange={(event) => onChange({ ...value, key: event.target.value })}\n      />\n    </Stack>\n  );\n}\nfunction BearerTokenAuthEditor({\n  disabled,\n  value,\n  onChange,\n}: AuthMethodEditorProps<BearerTokenAuth>) {\n  return (\n    <Stack gap={1}>\n      <TextField\n        disabled={disabled}\n        label=\"token\"\n        value={value.token}\n        onChange={(event) => onChange({ ...value, token: event.target.value })}\n      />\n    </Stack>\n  );\n}\n\nfunction BasicAuthEditor({ disabled, value, onChange }: AuthMethodEditorProps<BasicAuth>) {\n  return (\n    <Stack gap={1}>\n      <TextField\n        disabled={disabled}\n        label=\"user\"\n        value={value.user}\n        onChange={(event) => onChange({ ...value, user: event.target.value })}\n      />\n      <TextField\n        type=\"password\"\n        disabled={disabled}\n        label=\"password\"\n        value={value.password}\n        onChange={(event) => onChange({ ...value, password: event.target.value })}\n      />\n    </Stack>\n  );\n}\n\nfunction AuthenticationDetailsEditor({ value, ...props }: AuthMethodEditorProps<Authentication>) {\n  switch (value.type) {\n    case 'basic':\n      return <BasicAuthEditor value={value} {...props} />;\n    case 'bearerToken':\n      return <BearerTokenAuthEditor value={value} {...props} />;\n    case 'apiKey':\n      return <ApiKeyAuthEditor value={value} {...props} />;\n    default:\n      throw new Error(`Unsupported authentication type \"${(value as Authentication).type}\"`);\n  }\n}\n\nfunction getInitialAuthenticationValue(type: string): Maybe<Authentication> {\n  if (!type) {\n    return null;\n  }\n  switch (type) {\n    case 'basic':\n      return { type, user: '', password: '' };\n    case 'bearerToken':\n      return { type, token: '' };\n    case 'apiKey':\n      return { type, header: '', key: '' };\n    default:\n      throw new Error(`Unsupported authentication type \"${type}\"`);\n  }\n}\n\nexport interface AuthenticationEditorProps extends WithControlledProp<Maybe<Authentication>> {\n  disabled?: boolean;\n}\n\nexport default function AuthenticationEditor({\n  disabled,\n  value,\n  onChange,\n}: AuthenticationEditorProps) {\n  const handleTypeChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n      onChange(getInitialAuthenticationValue(event.target.value));\n    },\n    [onChange],\n  );\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={4}>\n        <TextField\n          disabled={disabled}\n          select\n          label=\"authentication\"\n          value={value?.type || ''}\n          onChange={handleTypeChange}\n          fullWidth\n        >\n          <MenuItem value=\"\">No authentication</MenuItem>\n          <MenuItem value=\"basic\">Basic</MenuItem>\n          <MenuItem value=\"bearerToken\">Bearer token</MenuItem>\n          <MenuItem value=\"apiKey\">API key</MenuItem>\n        </TextField>\n      </Grid>\n      <Grid item xs={4}>\n        {value ? (\n          <AuthenticationDetailsEditor disabled={disabled} value={value} onChange={onChange} />\n        ) : null}\n      </Grid>\n    </Grid>\n  );\n}\n","import { FieldError, FieldValues, FormState } from 'react-hook-form';\n\nfunction errorMessage(error: FieldError) {\n  if (error.message) {\n    return error.message;\n  }\n  switch (error.type) {\n    case 'required':\n      return 'required';\n    default:\n      return 'invalid';\n  }\n}\n\n/**\n * Translates `react-hook-form` `formState` into error/helpText properties for UI components.\n */\nexport function validation<T extends FieldValues>(\n  formState: FormState<T>,\n  field: keyof T,\n): { error?: boolean; helperText?: string } {\n  const error: FieldError = (formState.errors as any)[field];\n\n  return {\n    error: !!error,\n    helperText: error ? errorMessage(error) : undefined,\n  };\n}\n\n/**\n * Reads `react-hook-form` `formState` and checks whether the state can and needs to be saved.\n */\nexport function isSaveDisabled<T extends FieldValues>(formState: FormState<T>): boolean {\n  // Always destructure formState to trigger underlying react-hook-form Proxy object\n  const { isValid, isDirty } = formState;\n  return !isValid || !isDirty;\n}\n","import { Box, TextField, IconButton, SxProps, inputLabelClasses } from '@mui/material';\nimport * as React from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { BindableAttrValue, ScopeMeta, JsRuntime, LiveBinding } from '@toolpad/studio-runtime';\nimport { WithControlledProp } from '@toolpad/utils/types';\nimport BindableEditor from './BindableEditor';\n\nexport interface StringRecordEntriesEditorProps\n  extends WithControlledProp<[string, BindableAttrValue<any>][]> {\n  label?: string;\n  liveValue: [string, LiveBinding][];\n  globalScope: Record<string, unknown>;\n  globalScopeMeta: ScopeMeta;\n  fieldLabel?: string;\n  valueLabel?: string;\n  autoFocus?: boolean;\n  sx?: SxProps;\n  jsRuntime: JsRuntime;\n  env?: Record<string, string | undefined>;\n  declaredEnvKeys?: string[];\n  disabled?: boolean;\n}\n\nexport default function ParametersEditor({\n  value,\n  onChange,\n  liveValue,\n  globalScope,\n  label,\n  fieldLabel = 'field',\n  valueLabel = 'value',\n  autoFocus = false,\n  sx,\n  jsRuntime,\n  disabled,\n  globalScopeMeta,\n  env,\n  declaredEnvKeys,\n}: StringRecordEntriesEditorProps) {\n  const fieldInputRef = React.useRef<HTMLInputElement>(null);\n\n  const handleRemove = React.useCallback(\n    (index: number) => () => {\n      onChange(value.filter((entry, i) => i !== index));\n    },\n    [onChange, value],\n  );\n\n  const isValidFieldName: boolean[] = React.useMemo(() => {\n    const counts: Record<string, number> = {};\n    value.forEach(([field]) => {\n      counts[field] = counts[field] ? counts[field] + 1 : 1;\n    });\n    return value.map(([field]) => !!field && counts[field] <= 1);\n  }, [value]);\n\n  return (\n    <Box\n      sx={sx}\n      display=\"grid\"\n      gridTemplateColumns=\"1fr 2fr auto\"\n      alignItems=\"center\"\n      columnGap={1}\n      rowGap={0}\n    >\n      {label ? <Box gridColumn=\"span 3\">{label}:</Box> : null}\n      {value.map(([field, fieldValue], index) => {\n        const liveBinding: LiveBinding | undefined = liveValue[index]?.[1];\n\n        return (\n          <React.Fragment key={index}>\n            <TextField\n              label={valueLabel}\n              value={field}\n              autoFocus\n              onChange={(event) =>\n                onChange(\n                  value.map((entry, i) => (i === index ? [event.target.value, entry[1]] : entry)),\n                )\n              }\n              sx={{ [`& .${inputLabelClasses.root}`]: { fontSize: 12 } }}\n              error={!isValidFieldName[index]}\n              disabled={disabled}\n              slotProps={{\n                htmlInput: { sx: { fontSize: 12 } },\n              }}\n            />\n            <BindableEditor\n              liveBinding={liveBinding}\n              jsRuntime={jsRuntime}\n              globalScope={globalScope}\n              globalScopeMeta={globalScopeMeta}\n              label={field}\n              propType={{ type: 'string' }}\n              value={fieldValue}\n              onChange={(newBinding) =>\n                onChange(value.map((entry, i) => (i === index ? [entry[0], newBinding] : entry)))\n              }\n              disabled={disabled}\n              env={env}\n              declaredEnvKeys={declaredEnvKeys}\n            />\n\n            <IconButton\n              aria-label=\"Delete property\"\n              onClick={handleRemove(index)}\n              sx={{ ml: -0.5 }}\n            >\n              <DeleteIcon fontSize=\"inherit\" />\n            </IconButton>\n          </React.Fragment>\n        );\n      })}\n\n      <form autoComplete=\"off\" style={{ display: 'contents' }}>\n        <TextField\n          inputRef={fieldInputRef}\n          label={fieldLabel}\n          value=\"\"\n          onChange={(event) => {\n            onChange([...value, [event.target.value, null]]);\n          }}\n          sx={{ [`& .${inputLabelClasses.root}`]: { fontSize: 12 } }}\n          autoFocus={autoFocus}\n          disabled={disabled}\n          slotProps={{\n            htmlInput: { sx: { fontSize: 12 } },\n          }}\n        />\n      </form>\n    </Box>\n  );\n}\n","import * as React from 'react';\nimport {\n  Box,\n  Divider,\n  MenuItem,\n  Skeleton,\n  styled,\n  SxProps,\n  TextField,\n  Toolbar,\n  ToolbarProps,\n  Typography,\n  inputLabelClasses,\n  inputBaseClasses,\n} from '@mui/material';\nimport { TabContext } from '@mui/lab';\nimport { BindableAttrValue, LiveBinding, ScopeMeta } from '@toolpad/studio-runtime';\nimport { useServerJsRuntime } from '@toolpad/studio-runtime/jsServerRuntime';\nimport { Maybe, WithControlledProp } from '@toolpad/utils/types';\nimport { Body, RawBody, UrlEncodedBody } from './types';\nimport {\n  useEvaluateLiveBinding,\n  useEvaluateLiveBindingEntries,\n} from '../../toolpad/AppEditor/useEvaluateLiveBinding';\nimport BindableEditor from '../../toolpad/AppEditor/PageEditor/BindableEditor';\nimport lazyComponent from '../../utils/lazyComponent';\nimport TabPanel from '../../components/TabPanel';\nimport ParametersEditor from '../../toolpad/AppEditor/PageEditor/ParametersEditor';\nimport { HTTP_NO_BODY } from './shared';\n\nconst BodyEditorRoot = styled('div')({\n  position: 'relative',\n});\n\ninterface ContentTypeSpec {\n  alias: string;\n  language: string;\n}\n\nconst RAW_CONTENT_TYPES = new Map<string, ContentTypeSpec>([\n  ['text/plain', { alias: 'text', language: 'plaintext' }],\n  ['application/json', { alias: 'json', language: 'json' }],\n  ['text/javascript', { alias: 'javascript', language: 'typescript' }],\n  ['text/csv', { alias: 'csv', language: 'plaintext' }],\n  ['text/html', { alias: 'html', language: 'html' }],\n  ['text/css', { alias: 'css', language: 'css' }],\n  ['application/xml', { alias: 'xml', language: 'plaintext' }],\n]);\n\nconst BodyEditorToolbar = styled((props: ToolbarProps) => (\n  <React.Fragment>\n    <Toolbar disableGutters {...props} />\n    <Divider />\n  </React.Fragment>\n))(({ theme }) => ({\n  gap: theme.spacing(1),\n  marginBottom: theme.spacing(1),\n}));\n\ninterface RenderBodyToolbarParams {\n  actions?: React.ReactNode;\n}\n\ninterface RenderBodyToolbar {\n  (params?: RenderBodyToolbarParams): React.ReactNode;\n}\n\nconst MonacoEditor = lazyComponent(() => import('../../components/MonacoEditor'), {\n  noSsr: true,\n  fallback: <Skeleton variant=\"rectangular\" height=\"100%\" />,\n});\n\ninterface BodyTypeEditorProps<B = Body> extends WithControlledProp<Maybe<B>> {\n  globalScopeMeta: ScopeMeta;\n  globalScope: Record<string, any>;\n  renderToolbar: RenderBodyToolbar;\n  disabled?: boolean;\n}\n\nfunction RawBodyEditor({\n  renderToolbar,\n  value: valueProp,\n  onChange,\n  globalScope,\n  globalScopeMeta,\n  disabled,\n}: BodyTypeEditorProps<RawBody>) {\n  const value: RawBody = React.useMemo(\n    () =>\n      valueProp ?? {\n        kind: 'raw',\n        contentType: 'text/plain',\n        content: '',\n      },\n    [valueProp],\n  );\n\n  const handleContentTypeChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      onChange({ ...value, contentType: event.target.value });\n    },\n    [onChange, value],\n  );\n\n  const handleValueChange = React.useCallback(\n    (newContent: BindableAttrValue<string> | null) => {\n      onChange({ ...value, content: newContent || '' });\n    },\n    [onChange, value],\n  );\n\n  const content = value?.content ?? null;\n\n  const jsServerRuntime = useServerJsRuntime();\n\n  const liveContent: LiveBinding = useEvaluateLiveBinding({\n    jsRuntime: jsServerRuntime,\n    input: content,\n    globalScope,\n  });\n\n  const { language = 'plaintext' } = RAW_CONTENT_TYPES.get(value.contentType) ?? {};\n\n  return (\n    <React.Fragment>\n      {renderToolbar({\n        actions: (\n          <TextField\n            select\n            label=\"content-type\"\n            sx={{\n              [`& .${inputLabelClasses.root}`]: { fontSize: 12 },\n              [`& .${inputBaseClasses.root}`]: { fontSize: 12 },\n              width: 200,\n            }}\n            value={value?.contentType}\n            onChange={handleContentTypeChange}\n            disabled={disabled}\n          >\n            {Array.from(RAW_CONTENT_TYPES.entries(), ([contentType, { alias }]) => (\n              <MenuItem key={contentType} value={contentType}>\n                {alias}\n              </MenuItem>\n            ))}\n          </TextField>\n        ),\n      })}\n      <BindableEditor<string>\n        sx={{ mt: 1 }}\n        liveBinding={liveContent}\n        globalScope={globalScope}\n        globalScopeMeta={globalScopeMeta}\n        propType={{ type: 'string' }}\n        jsRuntime={jsServerRuntime}\n        renderControl={(props) => (\n          <MonacoEditor\n            sx={{ flex: 1, height: 250 }}\n            language={language}\n            value={props.value}\n            onChange={props.onChange}\n            disabled={props.disabled}\n          />\n        )}\n        value={value?.content || null}\n        onChange={handleValueChange}\n        label=\"json\"\n        disabled={disabled}\n      />\n    </React.Fragment>\n  );\n}\n\nfunction UrlEncodedBodyEditor({\n  renderToolbar,\n  value: valueProp,\n  onChange,\n  globalScope,\n  globalScopeMeta,\n  disabled,\n}: BodyTypeEditorProps<UrlEncodedBody>) {\n  const value: UrlEncodedBody = React.useMemo(\n    () =>\n      valueProp ?? {\n        kind: 'urlEncoded',\n        contentType: 'text/plain',\n        content: [],\n      },\n    [valueProp],\n  );\n\n  const handleParamsChange = React.useCallback(\n    (newContent: [string, BindableAttrValue<any>][]) => {\n      onChange({ ...value, content: newContent });\n    },\n    [onChange, value],\n  );\n\n  const jsServerRuntime = useServerJsRuntime();\n  const liveContent = useEvaluateLiveBindingEntries({\n    jsRuntime: jsServerRuntime,\n    input: value.content,\n    globalScope,\n  });\n\n  return (\n    <React.Fragment>\n      {renderToolbar()}\n      <ParametersEditor\n        sx={{ mt: 1 }}\n        value={value.content}\n        onChange={handleParamsChange}\n        globalScope={globalScope}\n        globalScopeMeta={globalScopeMeta}\n        liveValue={liveContent}\n        disabled={disabled}\n        jsRuntime={jsServerRuntime}\n      />\n    </React.Fragment>\n  );\n}\n\ntype BodyKind = Body['kind'];\n\nexport interface BodyEditorProps extends WithControlledProp<Maybe<Body>> {\n  globalScopeMeta: ScopeMeta;\n  globalScope: Record<string, any>;\n  sx?: SxProps;\n  method?: string;\n}\n\nexport default function BodyEditor({\n  globalScope,\n  globalScopeMeta,\n  value,\n  onChange,\n  sx,\n  method: methodProp,\n}: BodyEditorProps) {\n  const [activeTab, setActiveTab] = React.useState<BodyKind>(value?.kind || 'raw');\n  React.useEffect(() => setActiveTab(value?.kind || 'raw'), [value?.kind]);\n\n  const handleTabChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setActiveTab(event.target.value as BodyKind);\n  };\n\n  const method = methodProp || 'GET';\n  const disabled = HTTP_NO_BODY.has(method);\n\n  const renderToolbar = React.useCallback<RenderBodyToolbar>(\n    ({ actions } = {}) => (\n      <BodyEditorToolbar>\n        <TextField\n          label=\"body\"\n          // sx={{ width: 200 }}\n          select\n          value={activeTab}\n          onChange={handleTabChange}\n          disabled={disabled}\n          sx={{\n            [`& .${inputLabelClasses.root}`]: { fontSize: 12 },\n            [`& .${inputBaseClasses.root}`]: { fontSize: 12 },\n            width: 200,\n          }}\n          slotProps={{\n            htmlInput: { sx: { fontSize: 12 } },\n          }}\n        >\n          <MenuItem value=\"raw\">raw</MenuItem>\n          <MenuItem value=\"urlEncoded\">x-www-form-urlencoded</MenuItem>\n        </TextField>\n        {actions}\n      </BodyEditorToolbar>\n    ),\n    [activeTab, disabled],\n  );\n\n  return (\n    <BodyEditorRoot sx={sx}>\n      <TabContext value={activeTab}>\n        <TabPanel disableGutters value=\"raw\">\n          <RawBodyEditor\n            renderToolbar={renderToolbar}\n            globalScope={globalScope}\n            globalScopeMeta={globalScopeMeta}\n            value={value?.kind === 'raw' ? (value as RawBody) : null}\n            onChange={onChange}\n            disabled={disabled}\n          />\n        </TabPanel>\n        <TabPanel disableGutters value=\"urlEncoded\">\n          <UrlEncodedBodyEditor\n            renderToolbar={renderToolbar}\n            globalScope={globalScope}\n            globalScopeMeta={globalScopeMeta}\n            value={value?.kind === 'urlEncoded' ? (value as UrlEncodedBody) : null}\n            onChange={onChange}\n            disabled={disabled}\n          />\n        </TabPanel>\n      </TabContext>\n      {HTTP_NO_BODY.has(method) ? (\n        <Box\n          sx={{\n            position: 'absolute',\n            inset: '0 0 0 0',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Typography color=\"info\" variant=\"body2\">\n            &quot;{method}&quot; requests can&apos;t have a body\n          </Typography>\n        </Box>\n      ) : null}\n    </BodyEditorRoot>\n  );\n}\n","import * as React from 'react';\nimport { errorFrom } from '@toolpad/utils/errors';\n\nexport interface UseQueryPreviewOptions<R> {\n  onPreview?: (result: R) => void;\n}\n\nexport interface QueryPreviewResult<T> {\n  data?: T;\n  error?: Error;\n}\n\nexport default function useQueryPreview<Q, P, R extends QueryPreviewResult<any> & Partial<any>>(\n  dofetch: (query: Q, params: P) => Promise<R>,\n  query: Q,\n  params: P,\n  { onPreview }: UseQueryPreviewOptions<R> = {},\n) {\n  const [preview, setPreview] = React.useState<R | null>(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const cancelRunPreview = React.useRef<(() => void) | null>(null);\n  const runPreview = React.useCallback(() => {\n    let canceled = false;\n\n    cancelRunPreview.current?.();\n    cancelRunPreview.current = () => {\n      canceled = true;\n    };\n\n    setIsLoading(true);\n    dofetch(query, params)\n      .then(\n        (result) => {\n          if (!canceled) {\n            setPreview(result);\n            onPreview?.(result);\n          }\n        },\n        (error) => {\n          setPreview({ error: errorFrom(error) } as R);\n        },\n      )\n      .finally(() => {\n        setIsLoading(false);\n        cancelRunPreview.current = null;\n      });\n  }, [dofetch, query, params, onPreview]);\n\n  return { preview, runPreview, isLoading };\n}\n","import { Stack, Checkbox, FormControlLabel, IconButton } from '@mui/material';\nimport * as React from 'react';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport JsonView from '../components/JsonView';\nimport { JsExpressionEditor } from '../toolpad/AppEditor/PageEditor/JsExpressionEditor';\n\nexport interface TransformInputProps {\n  value: string;\n  onChange: (newValue: string) => void;\n  enabled: boolean;\n  onEnabledChange: (newValue: boolean) => void;\n  globalScope: Record<string, any>;\n  loading: boolean;\n  onUpdatePreview?: () => void;\n}\n\nconst SCOPE_META = {};\n\nexport default function TransformInput({\n  value,\n  onChange,\n  enabled,\n  onEnabledChange,\n  globalScope,\n  loading,\n  onUpdatePreview,\n}: TransformInputProps) {\n  const handleTransformEnabledChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => onEnabledChange(event.target.checked),\n    [onEnabledChange],\n  );\n\n  return (\n    <Stack>\n      <FormControlLabel\n        label=\"Transform response\"\n        sx={{\n          '& .MuiFormControlLabel-label': { fontSize: 12 },\n        }}\n        control={\n          <Checkbox\n            checked={enabled}\n            sx={{ p: 0.25, pl: 1 }}\n            onChange={handleTransformEnabledChange}\n            inputProps={{ 'aria-label': 'controlled' }}\n          />\n        }\n      />\n\n      <Stack direction={'row'} spacing={2} width={'100%'}>\n        <JsonView\n          src={globalScope}\n          disabled={loading || !enabled}\n          sx={{\n            width: '300px',\n            maxWidth: '600px',\n            maxHeight: '150px',\n          }}\n        />\n\n        {onUpdatePreview ? (\n          <IconButton\n            disabled={!enabled}\n            onClick={onUpdatePreview}\n            sx={{ alignSelf: 'self-start' }}\n          >\n            <AutorenewIcon\n              sx={{\n                animation: 'spin 1500ms linear infinite',\n                animationPlayState: loading ? 'running' : 'paused',\n                '@keyframes spin': {\n                  '0%': {\n                    transform: 'rotate(0deg)',\n                  },\n                  '100%': {\n                    transform: 'rotate(360deg)',\n                  },\n                },\n              }}\n              fontSize=\"inherit\"\n            />\n          </IconButton>\n        ) : null}\n        <JsExpressionEditor\n          globalScope={globalScope}\n          globalScopeMeta={SCOPE_META}\n          autoFocus\n          value={value}\n          sx={{\n            minWidth: '300px',\n            flex: 1,\n          }}\n          functionBody\n          onChange={onChange}\n          disabled={!enabled || loading}\n        />\n      </Stack>\n    </Stack>\n  );\n}\n","import * as React from 'react';\nimport { TabPanel, TabContext, TabList } from '@mui/lab';\nimport { Box, IconButton, LinearProgress, styled, SxProps, Tab } from '@mui/material';\nimport type { Har } from 'har-format';\nimport DoDisturbIcon from '@mui/icons-material/DoDisturb';\nimport Console, { LogEntry } from './Console';\nimport lazyComponent from '../utils/lazyComponent';\nimport CenteredSpinner from './CenteredSpinner';\n\nconst DevtoolsRoot = styled('div')({\n  flexDirection: 'column',\n});\n\nconst HarViewer = lazyComponent(() => import('./HarViewer'), {\n  fallback: <CenteredSpinner />,\n});\n\nconst DebuggerTabPanel = styled(TabPanel)({ padding: 0, flex: 1, minHeight: 0 });\n\nexport interface DevtoolsProps {\n  log?: LogEntry[];\n  onLogClear?: () => void;\n  har?: Har;\n  onHarClear?: () => void;\n  sx?: SxProps;\n}\n\nexport default function Devtools({ sx, log, onLogClear, har, onHarClear }: DevtoolsProps) {\n  const [activeTab, setActiveTab] = React.useState(() => {\n    if (log) {\n      return 'console';\n    }\n    if (har) {\n      return 'network';\n    }\n    return '';\n  });\n\n  const handleDebuggerTabChange = (event: React.SyntheticEvent, newValue: string) => {\n    setActiveTab(newValue);\n  };\n\n  const logLength = log?.length ?? 0;\n  const harLength = har?.log.entries.length ?? 0;\n\n  const clearEnabled: boolean = React.useMemo(() => {\n    switch (activeTab) {\n      case 'console':\n        return logLength > 0;\n      case 'network':\n        return harLength > 0;\n      default:\n        throw new Error(`Missing switch case ${activeTab}`);\n    }\n  }, [activeTab, harLength, logLength]);\n\n  const handleClearClick = React.useCallback(() => {\n    switch (activeTab) {\n      case 'console':\n        return onLogClear?.();\n      case 'network':\n        return onHarClear?.();\n      default:\n        throw new Error(`Missing switch case ${activeTab}`);\n    }\n  }, [activeTab, onHarClear, onLogClear]);\n\n  return (\n    <DevtoolsRoot sx={sx}>\n      <TabContext value={activeTab}>\n        <Box\n          sx={{\n            borderBottom: 1,\n            borderColor: 'divider',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'start',\n            pr: 1,\n          }}\n        >\n          {handleClearClick ? (\n            <IconButton disabled={!clearEnabled} onClick={handleClearClick}>\n              <DoDisturbIcon />\n            </IconButton>\n          ) : null}\n\n          <TabList\n            onChange={handleDebuggerTabChange}\n            aria-label=\"Debugger\"\n            sx={{ '& button': { fontSize: 12, fontWeight: 'normal' } }}\n          >\n            {log ? (\n              <Tab\n                label=\"Console\"\n                value=\"console\"\n                sx={{ borderBottom: (theme) => `1px solid ${theme.palette.grey[300]}` }}\n              />\n            ) : null}\n            {har ? (\n              <Tab\n                label=\"Network\"\n                value=\"network\"\n                sx={{ borderBottom: (theme) => `1px solid ${theme.palette.grey[300]}` }}\n              />\n            ) : null}\n          </TabList>\n        </Box>\n\n        {log ? (\n          <DebuggerTabPanel value=\"console\">\n            <Console sx={{ flex: 1 }} value={log} />\n          </DebuggerTabPanel>\n        ) : null}\n        {har ? (\n          <DebuggerTabPanel value=\"network\">\n            <React.Suspense fallback={<LinearProgress />}>\n              <HarViewer sx={{ flex: 1 }} value={har} />\n            </React.Suspense>\n          </DebuggerTabPanel>\n        ) : null}\n      </TabContext>\n    </DevtoolsRoot>\n  );\n}\n","import { darken, lighten, styled, SxProps } from '@mui/material';\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { interleave } from '@toolpad/utils/react';\nimport ObjectInspector from './ObjectInspector';\n\nexport interface LogEntry {\n  timestamp: number;\n  level: string;\n  args: any[];\n}\n\nconst classes = {\n  logEntriesContainer: 'Toolpad_ConsoleLogEntriesContainer',\n  logEntries: 'Toolpad_ConsoleLogEntries',\n  logEntry: 'Toolpad_ConsoleLogEntry',\n  logEntryText: 'Toolpad_ConsoleLogEntryTExt',\n};\n\nconst ConsoleRoot = styled('div')(({ theme }) => {\n  const getColor = (color: string) => {\n    const modify = theme.palette.mode === 'light' ? darken : lighten;\n    return modify(color, 0.6);\n  };\n\n  const getBackgroundColor = (color: string) => {\n    const modify = theme.palette.mode === 'light' ? lighten : darken;\n    return modify(color, 0.9);\n  };\n\n  return {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'stretch',\n\n    [`& .${classes.logEntriesContainer}`]: {\n      flex: 1,\n\n      // This container has only a single item, but the column-reverse has the effect that it\n      // keeps the scroll position at the bottom when the content grows\n      display: 'flex',\n      flexDirection: 'column-reverse',\n      overflow: 'auto',\n\n      fontSize: 12,\n      lineHeight: 1.2,\n      fontFamily: 'Consolas, Menlo, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace',\n    },\n\n    [`& .${classes.logEntry}`]: {\n      '&:first-of-type': {\n        borderTop: `1px solid ${theme.palette.divider}`,\n      },\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n      paddingTop: 3,\n      paddingBottom: 1,\n    },\n\n    [`& .${classes.logEntry}.error`]: {\n      color: getColor(theme.palette.error.light),\n      background: getBackgroundColor(theme.palette.error.light),\n    },\n\n    [`& .${classes.logEntry}.warn`]: {\n      color: getColor(theme.palette.warning.light),\n      background: getBackgroundColor(theme.palette.warning.light),\n    },\n\n    [`& .${classes.logEntry}.info`]: {\n      color: getColor(theme.palette.info.light),\n      background: getBackgroundColor(theme.palette.info.light),\n    },\n\n    [`& .${classes.logEntryText} > *`]: {\n      display: 'inline-block',\n      verticalAlign: 'top',\n    },\n  };\n});\n\ninterface ConsoleEntryProps {\n  entry: LogEntry;\n}\n\nfunction ConsoleEntry({ entry }: ConsoleEntryProps) {\n  return (\n    <div className={clsx(classes.logEntry, entry.level)}>\n      <div className={classes.logEntryText}>\n        {interleave(\n          entry.args.map((arg, i) =>\n            typeof arg === 'string' ? arg : <ObjectInspector key={i} data={arg} />,\n          ),\n          ' ',\n        )}\n      </div>\n    </div>\n  );\n}\n\ninterface ConsoleProps {\n  sx?: SxProps;\n  value?: LogEntry[];\n}\n\nexport default function Console({ value = [], sx }: ConsoleProps) {\n  return (\n    <ConsoleRoot sx={sx}>\n      <div className={classes.logEntriesContainer}>\n        <div className={classes.logEntries}>\n          {value.map((entry, i) => (\n            <ConsoleEntry key={i} entry={entry} />\n          ))}\n        </div>\n      </div>\n    </ConsoleRoot>\n  );\n}\n","import { CircularProgress, SxProps, styled } from '@mui/material';\nimport * as React from 'react';\n\nconst Root = styled('div')({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n});\n\nexport interface CenteredSpinnerProps {\n  sx?: SxProps;\n}\n\nexport default function CenteredSpinner({ sx }: CenteredSpinnerProps) {\n  return (\n    <Root sx={sx}>\n      <CircularProgress />\n    </Root>\n  );\n}\n","import * as React from 'react';\nimport { useConnectionContext } from './context';\nimport { useProjectApi } from '../projectApi';\n\nexport default function useFetchPrivate<PQ, R>(): (privateQuery: PQ) => Promise<R> {\n  const projectApi = useProjectApi();\n  const { dataSourceId, connectionId } = useConnectionContext();\n  return React.useCallback(\n    (privateQuery: PQ) =>\n      projectApi.methods.dataSourceFetchPrivate(dataSourceId, connectionId, privateQuery),\n    [projectApi, connectionId, dataSourceId],\n  );\n}\n","import { UseQueryResult } from '@tanstack/react-query';\nimport { NodeId } from '@toolpad/studio-runtime';\nimport { createProvidedContext } from '@toolpad/utils/react';\nimport { useProjectApi } from '../projectApi';\nimport { UseQueryFnOptions } from '../rpcClient';\n\nexport interface ConnectionContext {\n  dataSourceId: string;\n  connectionId: NodeId | null;\n}\n\nconst [useConnectionContext, ConnectionContextProvider] =\n  createProvidedContext<ConnectionContext>('QueryEditor');\n\nexport { useConnectionContext, ConnectionContextProvider };\n\nexport function usePrivateQuery<Q = unknown, R = unknown>(\n  query: Q | null,\n  options?: UseQueryFnOptions<any>,\n): UseQueryResult<R> {\n  const projectApi = useProjectApi();\n  const { dataSourceId, connectionId } = useConnectionContext();\n  return projectApi.useQuery(\n    'dataSourceFetchPrivate',\n    query == null ? null : [dataSourceId, connectionId, query],\n    options,\n  );\n}\n","import { LinearProgress, Box } from '@mui/material';\nimport * as React from 'react';\nimport ErrorAlert from '../toolpad/AppEditor/PageEditor/ErrorAlert';\n\nexport interface QueryPreviewProps {\n  children?: React.ReactNode;\n  error?: unknown;\n  isLoading?: boolean;\n}\n\nexport default function QueryPreview({ children, error, isLoading }: QueryPreviewProps) {\n  return (\n    <Box\n      data-testid=\"query-preview\"\n      sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n    >\n      {isLoading ? <LinearProgress /> : null}\n      <Box sx={{ flex: 1, minHeight: 0, overflow: 'auto' }}>\n        {error ? <ErrorAlert sx={{ m: 2 }} error={error} /> : children}\n      </Box>\n    </Box>\n  );\n}\n","import * as React from 'react';\nimport { Alert, AlertTitle, IconButton, Collapse, Box, SxProps, styled } from '@mui/material';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { indent } from '@toolpad/utils/strings';\nimport Pre from '../../../components/Pre';\n\nconst AlertRoot = styled(Alert)({\n  position: 'relative',\n});\n\nexport interface ErrorAlertProps {\n  error: unknown;\n  sx?: SxProps;\n}\n\nfunction formatStack(maybeError: unknown): string | null {\n  if (!maybeError) {\n    return null;\n  }\n  let causeStack: string | null | undefined;\n  if ((maybeError as any)?.cause) {\n    causeStack = formatStack((maybeError as any).cause);\n    if (causeStack) {\n      causeStack = `cause:\\n${indent(causeStack, 2)}`;\n    }\n  }\n  let thisStack: string | undefined;\n  if (typeof (maybeError as any)?.stack === 'string') {\n    thisStack = (maybeError as any).stack;\n  }\n  return thisStack || causeStack ? [thisStack, causeStack].filter(Boolean).join('\\n') : null;\n}\n\nexport default function ErrorAlert({ error, sx }: ErrorAlertProps) {\n  const message: string =\n    typeof (error as any)?.message === 'string' ? (error as any).message : String(error);\n  const stack: string | null = formatStack(error);\n\n  const [expanded, setExpanded] = React.useState(false);\n  const toggleExpanded = React.useCallback(() => setExpanded((actual) => !actual), []);\n\n  return (\n    <AlertRoot severity=\"error\" sx={sx}>\n      {stack ? (\n        <IconButton\n          color=\"inherit\"\n          onClick={toggleExpanded}\n          sx={{\n            position: 'absolute',\n            top: 10,\n            right: 8,\n          }}\n        >\n          {expanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n        </IconButton>\n      ) : null}\n      <AlertTitle>\n        <Pre sx={{ whiteSpace: 'pre-wrap' }}>{message}</Pre>\n      </AlertTitle>\n      {stack ? (\n        <Collapse in={expanded}>\n          <Box sx={{ overflow: 'auto' }}>\n            <Pre>{stack}</Pre>\n          </Box>\n        </Collapse>\n      ) : null}\n    </AlertRoot>\n  );\n}\n","import { StyledComponent } from '@emotion/styled';\nimport { styled, BoxProps } from '@mui/material';\n\nconst Pre: StyledComponent<BoxProps> = styled('pre')({\n  margin: 0,\n  fontFamily: 'Consolas, Menlo, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace',\n});\n\nexport default Pre;\n","import * as React from 'react';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { BindableAttrEntries } from '@toolpad/studio-runtime';\nimport { Alert, Box, Divider, Stack, Tab, Link, Typography } from '@mui/material';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport { TabContext, TabList } from '@mui/lab';\nimport { useBrowserJsRuntime } from '@toolpad/studio-runtime/jsBrowserRuntime';\nimport { errorFrom } from '@toolpad/utils/errors';\nimport { useQuery } from '@tanstack/react-query';\nimport Grid from '@mui/material/Grid2';\nimport TabPanel from '../../components/TabPanel';\nimport { ClientDataSource, QueryEditorProps } from '../../types';\nimport { LocalPrivateApi, LocalQuery, LocalConnectionParams } from './types';\nimport {\n  useEvaluateLiveBindingEntries,\n  useEvaluateLiveBindings,\n} from '../../toolpad/AppEditor/useEvaluateLiveBinding';\nimport { useAppState, useAppStateApi } from '../../toolpad/AppState';\nimport { QueryEditorTabType, QueryEditorToolsTabType } from '../../utils/domView';\nimport { Panel, PanelGroup, PanelResizeHandle } from '../../components/resizablePanels';\nimport JsonView from '../../components/JsonView';\nimport OpenCodeEditorButton from '../../toolpad/OpenCodeEditor';\nimport useQueryPreview from '../useQueryPreview';\nimport QueryPreview from '../QueryPreview';\nimport BindableEditor from '../../toolpad/AppEditor/PageEditor/BindableEditor';\nimport { getDefaultControl, usePropControlsContext } from '../../toolpad/propertyControls';\nimport { parseLegacyFunctionId, serializeFunctionId, transformLegacyFunctionId } from './shared';\nimport FunctionSelector from './FunctionSelector';\nimport HelpTooltipIcon from '../../components/HelpTooltipIcon';\n\nconst EMPTY_PARAMS: BindableAttrEntries = [];\n\ninterface ResolvedPreviewProps {\n  preview: any;\n}\n\nfunction ResolvedPreview({ preview }: ResolvedPreviewProps): React.ReactElement | null {\n  if (!preview) {\n    return (\n      <Alert\n        severity=\"info\"\n        sx={(theme) => ({\n          my: theme.spacing(2),\n          mx: 'auto',\n          p: theme.spacing(1),\n          fontSize: theme.typography.pxToRem(11),\n          width: 'fit-content',\n        })}\n      >\n        No request has been sent yet. <br />\n        Click Run\n        <PlayArrowIcon\n          aria-label=\"Run preview\"\n          sx={{ verticalAlign: 'middle', fontSize: '12px', mr: 0.25 }}\n        />\n        to preview the response here.\n      </Alert>\n    );\n  }\n\n  const { data } = preview;\n\n  return <JsonView sx={{ height: '100%' }} src={data} copyToClipboard />;\n}\n\nfunction QueryEditor({\n  globalScope,\n  globalScopeMeta,\n  value: input,\n  settingsTab,\n  execApi,\n}: QueryEditorProps<LocalConnectionParams, LocalQuery, LocalPrivateApi>) {\n  const appStateApi = useAppStateApi();\n  const { currentView } = useAppState();\n  const introspection = useQuery({\n    queryKey: ['introspection'],\n    queryFn: () => execApi('introspection', []),\n    retry: false,\n  });\n\n  const updateProp = React.useCallback(\n    function updateProp<K extends keyof LocalQuery>(prop: K, value: LocalQuery[K]) {\n      appStateApi.updateQueryDraft((draft) => ({\n        ...draft,\n        attributes: {\n          ...draft.attributes,\n          query: {\n            ...draft.attributes.query,\n            [prop]: value,\n          },\n        },\n      }));\n    },\n    [appStateApi],\n  );\n\n  const currentTab = React.useMemo(() => {\n    if (\n      currentView.kind === 'page' &&\n      currentView.view?.kind === 'query' &&\n      currentView.queryPanel?.currentTabIndex !== undefined\n    ) {\n      return currentView.queryPanel?.queryTabs?.[currentView.queryPanel?.currentTabIndex];\n    }\n    return null;\n  }, [currentView]);\n\n  const propTypeControls = usePropControlsContext();\n\n  const { file: selectedFile = undefined, handler: selectedFunction = undefined } = input.attributes\n    .query.function\n    ? parseLegacyFunctionId(input.attributes.query.function)\n    : {};\n\n  const selectedOption = React.useMemo(() => {\n    return introspection.data?.files\n      .find((file) => file.name === selectedFile)\n      ?.handlers.find((handler) => handler.name === selectedFunction);\n  }, [introspection.data?.files, selectedFile, selectedFunction]);\n\n  const parameterDefs = React.useMemo(\n    () => Object.fromEntries(selectedOption?.parameters || []),\n    [selectedOption?.parameters],\n  );\n\n  const paramsEntries = React.useMemo(\n    () => input.params?.filter(([key]) => !!parameterDefs[key]) || EMPTY_PARAMS,\n    [input.params, parameterDefs],\n  );\n\n  const paramsObject = Object.fromEntries(paramsEntries);\n\n  const jsBrowserRuntime = useBrowserJsRuntime();\n\n  const paramsEditorLiveValue = useEvaluateLiveBindingEntries({\n    jsRuntime: jsBrowserRuntime,\n    input: paramsEntries,\n    globalScope,\n  });\n\n  const previewParams = React.useMemo(\n    () => Object.fromEntries(paramsEditorLiveValue.map(([key, binding]) => [key, binding?.value])),\n    [paramsEditorLiveValue],\n  );\n\n  const handleToolsTabTypeChange = React.useCallback(\n    (value: QueryEditorToolsTabType) => {\n      appStateApi.updateQueryTab((tab) => ({\n        ...tab,\n        toolsTabType: value,\n      }));\n    },\n    [appStateApi],\n  );\n\n  const fetchServerPreview = React.useCallback(\n    async (query: LocalQuery, params: Record<string, string>) => {\n      return execApi('debugExec', [query, params]);\n    },\n    [execApi],\n  );\n\n  const { preview, runPreview, isLoading } = useQueryPreview(\n    fetchServerPreview,\n    input.attributes.query,\n    previewParams as Record<string, string>,\n  );\n\n  const handleRunPreview = React.useCallback(() => {\n    runPreview();\n  }, [runPreview]);\n\n  React.useEffect(() => {\n    appStateApi.updateQueryTab((tab) => ({\n      ...tab,\n      previewHandler: handleRunPreview,\n      isPreviewLoading: isLoading,\n    }));\n  }, [handleRunPreview, appStateApi, isLoading]);\n\n  const liveBindings = useEvaluateLiveBindings({\n    jsRuntime: jsBrowserRuntime,\n    input: paramsObject,\n    globalScope,\n  });\n\n  const handleSelectFunction = React.useCallback(\n    (functionId: string) => {\n      updateProp('function', functionId);\n    },\n    [updateProp],\n  );\n\n  const proposedFileName = React.useMemo(() => {\n    const existingNames = new Set(introspection.data?.files.map((file) => file.name) || []);\n    const baseName = 'functions';\n    let counter = 2;\n\n    while (existingNames.has(`${baseName}${counter}.ts`)) {\n      counter += 1;\n    }\n\n    return `${baseName}${counter}.ts`;\n  }, [introspection.data?.files]);\n\n  const handleCreateNewCommit = React.useCallback(async () => {\n    try {\n      await execApi('createNew', [proposedFileName]);\n      await introspection.refetch();\n    } catch (error) {\n      console.error(errorFrom(error).message);\n    }\n    return serializeFunctionId({ file: proposedFileName, handler: 'default' });\n  }, [execApi, introspection, proposedFileName]);\n\n  const handleTabTypeChange = React.useCallback(\n    (value: QueryEditorTabType) => {\n      appStateApi.updateQueryTab((tab) => ({\n        ...tab,\n        tabType: value,\n      }));\n    },\n    [appStateApi],\n  );\n\n  return currentTab ? (\n    <PanelGroup autoSaveId=\"toolpad/local-panel\" direction=\"horizontal\">\n      <Panel\n        defaultSize={50}\n        minSize={40}\n        style={{ overflow: 'auto', scrollbarGutter: 'stable' }}\n        id=\"local-query-left\"\n      >\n        <TabContext value={currentTab?.tabType ?? 'config'}>\n          <Stack direction=\"column\" gap={0}>\n            <Stack\n              direction={'row'}\n              sx={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                pr: 0.5,\n              }}\n            >\n              <TabList\n                sx={{ '& button': { fontSize: 12, fontWeight: 'normal' } }}\n                onChange={(event, value) => handleTabTypeChange(value)}\n                aria-label=\"Query editor active tab type\"\n              >\n                <Tab label=\"Config\" value=\"config\" />\n                <Tab label=\"Settings\" value=\"settings\" />\n              </TabList>\n              <HelpTooltipIcon\n                helpText={\n                  <Typography variant=\"inherit\">\n                    To configure a custom function, check out the{' '}\n                    <Link\n                      href=\"https://mui.com/toolpad/studio/concepts/custom-functions/\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      docs\n                    </Link>\n                    .\n                  </Typography>\n                }\n              />\n            </Stack>\n\n            <Divider />\n            <TabPanel value=\"config\" disableGutters>\n              <Stack\n                display=\"flex\"\n                flexDirection={'row'}\n                sx={{\n                  alignItems: 'flex-start',\n                  mt: 2,\n                  mx: 2,\n                }}\n              >\n                <FunctionSelector\n                  files={introspection.data?.files || []}\n                  selectedFunctionId={transformLegacyFunctionId(\n                    input.attributes.query.function || '',\n                  )}\n                  onCreateNew={handleCreateNewCommit}\n                  onSelect={handleSelectFunction}\n                />\n                <OpenCodeEditorButton\n                  filePath={selectedFile ?? ''}\n                  fileType=\"resource\"\n                  disableRipple\n                  disabled={!selectedFile}\n                  sx={(theme) => ({\n                    marginTop: theme.spacing(1),\n                    marginLeft: theme.spacing(1),\n                    border: '1px solid',\n                    borderColor: theme.palette.divider,\n                  })}\n                />\n                {introspection.error ? (\n                  <Box\n                    sx={{\n                      position: 'absolute',\n                      inset: '0 0 0 0',\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                    }}\n                  >\n                    {errorFrom(introspection.error).message}\n                  </Box>\n                ) : null}\n              </Stack>\n            </TabPanel>\n            <TabPanel value=\"settings\" disableGutters>\n              {settingsTab}\n            </TabPanel>\n          </Stack>\n        </TabContext>\n      </Panel>\n      <PanelResizeHandle />\n      <Panel id=\"local-query-right\" defaultSize={50} minSize={20}>\n        <PanelGroup autoSaveId=\"toolpad/local/params-tools-split\" direction=\"vertical\">\n          <Panel\n            id=\"parameters-editor\"\n            defaultSize={50}\n            style={{ overflow: 'auto', scrollbarGutter: 'stable' }}\n          >\n            <Box display={'flex'} flexDirection={'column'}>\n              <TabContext value=\"parameters\">\n                <TabList\n                  sx={{\n                    '& button': { fontSize: 12, fontWeight: 'normal', cursor: 'default' },\n                  }}\n                  aria-label=\"Query editor parameters\"\n                >\n                  <Tab label=\"Parameters\" value=\"parameters\" />\n                </TabList>\n\n                <Divider sx={{ mb: 1.5 }} />\n                <TabPanel value=\"parameters\" disableGutters sx={{ ml: 1 }}>\n                  <Grid container spacing={1}>\n                    {Object.entries(parameterDefs).map(([name, definiton]) => {\n                      const Control = getDefaultControl(propTypeControls, definiton, liveBindings);\n                      if (!Control) {\n                        return (\n                          <Grid size={4} key={name} sx={{ display: 'flex', alignItems: 'center' }}>\n                            <Typography>Can&apos;t configure {name}</Typography>\n                          </Grid>\n                        );\n                      }\n                      return (\n                        <Grid size={4} key={name}>\n                          <BindableEditor\n                            liveBinding={liveBindings[name]}\n                            globalScope={globalScope}\n                            globalScopeMeta={globalScopeMeta}\n                            label={name}\n                            propType={definiton}\n                            jsRuntime={jsBrowserRuntime}\n                            renderControl={(renderControlParams) => (\n                              <Control {...renderControlParams} propType={definiton} />\n                            )}\n                            value={paramsObject[name]}\n                            onChange={(newValue) => {\n                              const paramKeys = Object.keys(parameterDefs);\n                              const newParams: BindableAttrEntries = paramKeys.flatMap((key) => {\n                                const paramValue = key === name ? newValue : paramsObject[key];\n                                return paramValue ? [[key, paramValue]] : [];\n                              });\n                              appStateApi.updateQueryDraft((draft) => ({\n                                ...draft,\n                                params: newParams,\n                              }));\n                            }}\n                          />\n                        </Grid>\n                      );\n                    })}\n                  </Grid>\n                </TabPanel>\n              </TabContext>\n            </Box>\n          </Panel>\n          <PanelResizeHandle />\n\n          <Panel\n            id=\"preview\"\n            defaultSize={50}\n            style={{ overflow: 'auto', scrollbarGutter: 'stable' }}\n          >\n            <TabContext value={currentTab.toolsTabType}>\n              <Box\n                sx={{\n                  borderBottom: 1,\n                  borderColor: 'divider',\n                  display: 'flex',\n                  height: 32,\n                  justifyContent: 'space-between',\n                }}\n              >\n                <TabList\n                  sx={{ '& button': { fontSize: 12, fontWeight: 'normal' } }}\n                  onChange={(event, value) => handleToolsTabTypeChange(value)}\n                  aria-label=\"Query tools active tab\"\n                >\n                  <Tab label=\"Preview\" value=\"preview\" />\n                </TabList>\n                <LoadingButton\n                  variant=\"text\"\n                  size=\"small\"\n                  loading={isLoading}\n                  disabled={isLoading}\n                  onClick={runPreview}\n                  endIcon={<PlayArrowIcon aria-label=\"Run preview\" onClick={runPreview} />}\n                >\n                  Run\n                </LoadingButton>\n              </Box>\n              <TabPanel value=\"preview\" disableGutters>\n                <QueryPreview isLoading={currentTab.isPreviewLoading} error={preview?.error}>\n                  <ResolvedPreview preview={preview} />\n                </QueryPreview>\n              </TabPanel>\n            </TabContext>\n          </Panel>\n        </PanelGroup>\n      </Panel>\n    </PanelGroup>\n  ) : (\n    <Alert severity=\"error\">\n      An error occurred while rendering this tab. Please refresh and try again.\n    </Alert>\n  );\n}\n\nfunction getInitialQueryValue(): LocalQuery {\n  return {};\n}\n\nconst dataSource: ClientDataSource<LocalConnectionParams, LocalQuery, LocalPrivateApi> = {\n  displayName: 'Custom',\n  QueryEditor,\n  getInitialQueryValue,\n  hasDefault: true,\n};\n\nexport default dataSource;\n","import * as React from 'react';\nimport {\n  Autocomplete,\n  AutocompleteCloseReason,\n  autocompleteClasses,\n  Box,\n  Button,\n  Chip,\n  InputBase,\n  ListSubheader,\n  Stack,\n  styled,\n  alpha,\n} from '@mui/material';\nimport AddOutlinedIcon from '@mui/icons-material/AddOutlined';\nimport DataObjectOutlinedIcon from '@mui/icons-material/DataObjectOutlined';\nimport Popper from '@mui/material/Popper';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport DoneIcon from '@mui/icons-material/Done';\nimport { FileIntrospectionResult } from '../../server/functionsTypesWorker';\nimport OpenCodeEditorButton from '../../toolpad/OpenCodeEditor';\nimport { parseLegacyFunctionId, serializeFunctionId } from './shared';\n\ninterface PopperComponentProps {\n  anchorEl?: any;\n  disablePortal?: boolean;\n  open: boolean;\n}\n\nconst StyledAutocompletePopper = styled('div')(({ theme }) => ({\n  [`& .${autocompleteClasses.paper}`]: {\n    boxShadow: 'none',\n    margin: 0,\n    borderRadius: 0,\n    color: 'inherit',\n    fontSize: 12,\n  },\n  [`& .${autocompleteClasses.listbox}`]: {\n    backgroundColor:\n      theme.palette.mode === 'light'\n        ? theme.palette.background.paper\n        : theme.palette.primaryDark[900],\n    padding: 0,\n    [`& .${autocompleteClasses.option}`]: {\n      minHeight: 'auto',\n      alignItems: 'flex-start',\n      padding: 8,\n      borderBottom: `1px solid  ${theme.palette.divider}`,\n      [`&.${autocompleteClasses.focused}:not([aria-selected=\"true\"])`]: {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  },\n  [`&.${autocompleteClasses.popperDisablePortal}`]: {\n    position: 'relative',\n  },\n}));\n\nfunction PopperComponent(props: PopperComponentProps) {\n  const { disablePortal, anchorEl, open, ...other } = props;\n  return <StyledAutocompletePopper {...other} />;\n}\n\nconst StyledPopper = styled(Popper)(({ theme }) => ({\n  border: `1px solid ${theme.palette.divider}`,\n  boxShadow: `0 8px 24px ${\n    theme.palette.mode === 'light'\n      ? alpha(theme.palette.grey[800], 0.5)\n      : alpha(theme.palette.grey[700], 0.2)\n  }`,\n  borderRadius: 6,\n  width: 300,\n  zIndex: theme.zIndex.modal,\n  fontSize: 12,\n  color: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.grey[500],\n  backgroundColor: theme.palette.background.paper,\n}));\n\nconst StyledInput = styled(InputBase)(({ theme }) => ({\n  padding: 10,\n  width: '100%',\n  border: `1px solid ${theme.palette.divider}`,\n  '& input': {\n    borderRadius: 4,\n    backgroundColor: theme.palette.background.paper,\n    padding: 8,\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    border: `1px solid ${theme.palette.divider}`,\n    fontSize: 12,\n    color: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.grey[500],\n    '&:focus': {\n      boxShadow: `0px 0px 0px 3px ${\n        theme.palette.mode === 'light' ? theme.palette.primary[100] : theme.palette.primaryDark[600]\n      }`,\n      borderColor:\n        theme.palette.mode === 'light'\n          ? theme.palette.primary.main\n          : theme.palette.primaryDark.main,\n    },\n  },\n}));\n\nconst FunctionButton = styled(Chip)(({ theme }) => ({\n  fontSize: 12,\n  width: '100%',\n  fontFamily: theme.typography.fontFamilyCode,\n  marginTop: theme.spacing(1),\n  fontWeight: 'normal',\n  color: theme.palette.primary.main,\n  transition: theme.transitions.create('color', { duration: theme.transitions.duration.shorter }),\n  '&:active': {\n    boxShadow: 'none',\n  },\n  '&:focus': {\n    backgroundColor:\n      theme.palette.mode === 'light' ? theme.palette.primary[100] : theme.palette.primaryDark[600],\n  },\n  '& svg': {\n    width: 12,\n    height: 12,\n  },\n}));\n\nconst StyledListSubheader = styled(ListSubheader)(({ theme }) => ({\n  lineHeight: 2.5,\n  fontSize: 13,\n  fontFamily: theme.typography.fontFamilyCode,\n  backgroundColor:\n    theme.palette.mode === 'light' ? theme.palette.grey[200] : alpha(theme.palette.grey[900], 0.5),\n  borderRadius: 0,\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[500],\n}));\n\ninterface FunctionAutocompleteProps {\n  files: FileIntrospectionResult[];\n  selectedFunctionId?: string;\n  onCreateNew: () => Promise<string>;\n  onSelect: (functionName: string) => void;\n}\n\nexport default function FunctionSelector({\n  files,\n  selectedFunctionId,\n  onCreateNew,\n  onSelect,\n}: FunctionAutocompleteProps) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [inputValue, setInputValue] = React.useState<string>('');\n\n  const { selectedFileName, selectedFunctionName } = React.useMemo(() => {\n    const parsed = parseLegacyFunctionId(selectedFunctionId ?? '');\n    return {\n      selectedFileName: parsed.file,\n      selectedFunctionName: parsed.handler,\n    };\n  }, [selectedFunctionId]);\n\n  const selectedFunctionLabel = React.useMemo(() => {\n    if (selectedFunctionName) {\n      return `${selectedFileName} > ${selectedFunctionName}`;\n    }\n    return 'Select function';\n  }, [selectedFileName, selectedFunctionName]);\n\n  const options = React.useMemo(() => {\n    const functions: string[] = [];\n\n    files.forEach((file) => {\n      file.handlers.forEach((fn) => {\n        functions.push(serializeFunctionId({ file: file.name, handler: fn.name }));\n      });\n    });\n    return functions;\n  }, [files]);\n\n  const handleClick = React.useCallback((event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const handleClose = React.useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'function-selector' : undefined;\n\n  const handleCreateNew = React.useCallback(async () => {\n    const functionId = await onCreateNew();\n    // Select the newly created function.\n    onSelect(functionId);\n  }, [onCreateNew, onSelect]);\n\n  const handleInput = React.useCallback((event: React.FormEvent<HTMLInputElement>) => {\n    setInputValue((event.target as HTMLInputElement).value);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <FunctionButton\n        aria-describedby={id}\n        clickable\n        icon={<DataObjectOutlinedIcon fontSize=\"inherit\" color=\"inherit\" />}\n        onClick={handleClick}\n        label={selectedFunctionLabel}\n      />\n      <StyledPopper\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        placement=\"auto-start\"\n        popperOptions={{ modifiers: [{ name: 'flip', enabled: false }] }}\n      >\n        <ClickAwayListener onClickAway={handleClose}>\n          <div>\n            <Box\n              sx={{\n                px: 1,\n                py: 0.5,\n                fontWeight: 'bold',\n              }}\n            >\n              Search for functions\n            </Box>\n            <Autocomplete\n              open\n              onClose={(event: React.ChangeEvent<{}>, reason: AutocompleteCloseReason) => {\n                if (reason === 'escape') {\n                  handleClose();\n                }\n              }}\n              value={selectedFunctionId}\n              inputValue={inputValue}\n              onInput={handleInput}\n              onChange={(event, newValue, reason) => {\n                if (\n                  event.type === 'keydown' &&\n                  (event as React.KeyboardEvent).key === 'Backspace' &&\n                  reason === 'removeOption'\n                ) {\n                  return;\n                }\n\n                if (newValue) {\n                  onSelect(newValue);\n                }\n\n                handleClose();\n              }}\n              PopperComponent={PopperComponent}\n              renderTags={() => null}\n              noOptionsText=\"No functions\"\n              groupBy={(option) => parseLegacyFunctionId(option).file ?? ''}\n              renderGroup={(params) => [\n                <StyledListSubheader key={params.key}>\n                  <Stack direction=\"row\" justifyContent={'space-between'}>\n                    {params.group}\n                    <OpenCodeEditorButton\n                      filePath={params.group}\n                      fileType=\"resource\"\n                      iconButton\n                      disableRipple\n                      sx={{\n                        transition: (theme) => theme.transitions.create('color', { duration: 200 }),\n                        '&:hover': {\n                          color: (theme) =>\n                            theme.palette.mode === 'light'\n                              ? theme.palette.grey[800]\n                              : theme.palette.grey[300],\n                        },\n                      }}\n                    />\n                  </Stack>\n                </StyledListSubheader>,\n                params.children,\n              ]}\n              renderOption={(props, option, { selected }) => (\n                <li {...props}>\n                  <Box\n                    component={DoneIcon}\n                    sx={{\n                      width: 17,\n                      height: 17,\n                      ml: 1,\n                      mr: -1,\n                      mt: 0,\n                      opacity: 0.75,\n                      color: selected ? 'primary.main' : 'text.primary',\n                    }}\n                    style={{\n                      visibility: selected ? 'visible' : 'hidden',\n                    }}\n                  />\n                  <Box\n                    component=\"span\"\n                    sx={{\n                      width: 12,\n                      height: 12,\n                      flexShrink: 0,\n                      mr: 1,\n                      mt: 1,\n                    }}\n                  />\n                  <Box\n                    sx={{\n                      flexGrow: 1,\n                      color: selected ? 'primary.main' : 'text.primary',\n                      fontFamily: (theme) => theme.typography.fontFamilyCode,\n                    }}\n                  >\n                    {parseLegacyFunctionId(option).handler ?? ''}\n                  </Box>\n                </li>\n              )}\n              options={options.sort((a, b) => {\n                // Display the selected function first.\n                if (selectedFunctionId === a) {\n                  return -1;\n                }\n                if (selectedFunctionId === b) {\n                  return 1;\n                }\n\n                // Then display the functions in the same file.\n                const fa = parseLegacyFunctionId(a).file;\n                const fb = parseLegacyFunctionId(b).file;\n\n                // Display the file with the selected function first.\n                const sf = parseLegacyFunctionId(selectedFunctionId ?? '').file;\n\n                if (sf === fa) {\n                  if (fa === fb) {\n                    // Alphabetically sort functions with the same file\n                    return a.localeCompare(b);\n                  }\n                  return -1;\n                }\n                if (sf === fb) {\n                  return 1;\n                }\n                return fa?.localeCompare(fb ?? '') ?? 0;\n              })}\n              renderInput={(params) => (\n                <StyledInput\n                  ref={params.InputProps.ref}\n                  inputProps={params.inputProps}\n                  placeholder=\"Filter functions\"\n                  autoFocus\n                />\n              )}\n            />\n            <Button\n              sx={{ m: 1, mb: 0.5 }}\n              startIcon={<AddOutlinedIcon fontSize=\"inherit\" />}\n              onClick={handleCreateNew}\n            >\n              New file\n            </Button>\n          </div>\n        </ClickAwayListener>\n      </StyledPopper>\n    </React.Fragment>\n  );\n}\n","import rest from './rest/client';\nimport { ClientDataSource } from '../types';\nimport local from './local/client';\n\ntype ClientDataSources = { [key: string]: ClientDataSource<any, any> | undefined };\n\nconst dataSources: ClientDataSources = {\n  rest,\n  local,\n};\n\nexport default dataSources;\n","import * as React from 'react';\n\nfunction isMac(): boolean {\n  const userAgent = navigator.userAgent;\n  return /Mac|iPod|iPhone|iPad/.test(userAgent);\n}\n\nexport function getModifierKey(): string | JSX.Element {\n  return isMac() ? '⌘' : <kbd>Ctrl</kbd>;\n}\n","import { Box } from '@mui/material';\n\nimport * as React from 'react';\nimport PagePanel from './PagePanel';\n\nimport { PropControlsContextProvider, PropTypeControls } from '../propertyControls';\n\nimport string from '../propertyControls/string';\nimport boolean from '../propertyControls/boolean';\nimport number from '../propertyControls/number';\nimport select from '../propertyControls/select';\nimport json from '../propertyControls/json';\nimport event from '../propertyControls/event';\nimport markdown from '../propertyControls/Markdown';\nimport GridColumns from '../propertyControls/GridColumns';\nimport ToggleButtons from '../propertyControls/ToggleButtons';\nimport SelectOptions from '../propertyControls/SelectOptions';\nimport ChartData from '../propertyControls/ChartData';\nimport RowIdFieldSelect from '../propertyControls/RowIdFieldSelect';\nimport HorizontalAlign from '../propertyControls/HorizontalAlign';\nimport VerticalAlign from '../propertyControls/VerticalAlign';\nimport NumberFormat from '../propertyControls/NumberFormat';\nimport ColorScale from '../propertyControls/ColorScale';\nimport DataProviderSelector from '../propertyControls/DataProviderSelector';\n\nexport const PROP_TYPE_CONTROLS: PropTypeControls = {\n  string,\n  boolean,\n  number,\n  select,\n  json,\n  markdown,\n  event,\n  GridColumns,\n  ToggleButtons,\n  SelectOptions,\n  ChartData,\n  RowIdFieldSelect,\n  HorizontalAlign,\n  VerticalAlign,\n  NumberFormat,\n  ColorScale,\n  DataProviderSelector,\n};\nexport interface ToolpadShellProps {\n  children: React.ReactNode;\n}\n\nexport default function AppEditorShell({ children }: ToolpadShellProps) {\n  return (\n    <PropControlsContextProvider value={PROP_TYPE_CONTROLS}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'row',\n          overflow: 'hidden',\n          height: '100%',\n        }}\n      >\n        <PagePanel\n          sx={{\n            width: 250,\n            borderRight: 1,\n            borderColor: 'divider',\n          }}\n        />\n        <Box\n          sx={{\n            flex: 1,\n            overflow: 'hidden',\n            position: 'relative',\n          }}\n        >\n          {children}\n        </Box>\n      </Box>\n    </PropControlsContextProvider>\n  );\n}\n","import * as React from 'react';\nimport { styled, SxProps, Box, Divider, Typography } from '@mui/material';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { Panel, PanelGroup, PanelResizeHandle } from '../../components/resizablePanels';\nimport PagesExplorer from './PagesExplorer';\nimport PageHierarchyExplorer from './HierarchyExplorer';\nimport { useAppState } from '../AppState';\nimport AppOptions from '../AppOptions';\nimport { QueriesExplorer, ActionsExplorer } from './PageEditor/QueriesExplorer';\nimport { useProject } from '../../project';\n\nconst PAGE_PANEL_WIDTH = 250;\n\nconst PagePanelRoot = styled('div')({\n  display: 'flex',\n  flexDirection: 'column',\n  width: PAGE_PANEL_WIDTH,\n});\n\nexport interface ComponentPanelProps {\n  className?: string;\n  sx?: SxProps;\n}\n\nexport default function PagePanel({ className, sx }: ComponentPanelProps) {\n  const project = useProject();\n  const { dom, currentView } = useAppState();\n\n  const currentPageNode = currentView?.name ? appDom.getPageByName(dom, currentView.name) : null;\n\n  return (\n    <PagePanelRoot className={className} sx={sx}>\n      <Box\n        sx={{\n          pl: 2,\n          pr: 1,\n          py: 1,\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}\n      >\n        <Typography noWrap>{project.rootDir.split(/[/\\\\]/).pop()}</Typography>\n\n        <AppOptions dom={dom} />\n      </Box>\n      <Divider />\n\n      <PanelGroup autoSaveId=\"toolpad-page-panel\" direction=\"vertical\">\n        <Panel id=\"pages-explorer\" order={1} minSize={10} defaultSize={25}>\n          <PagesExplorer />\n        </Panel>\n        {currentPageNode ? (\n          <React.Fragment>\n            <PanelResizeHandle />\n            <Panel id=\"hierarchy-explorer\" order={2} minSize={10} defaultSize={25} maxSize={90}>\n              <PageHierarchyExplorer />\n            </Panel>\n            <PanelResizeHandle />\n            <Panel id=\"queries-explorer\" order={3} minSize={10} defaultSize={25} maxSize={90}>\n              <QueriesExplorer />\n            </Panel>\n            <PanelResizeHandle />\n            <Panel id=\"actions-explorer\" order={4} minSize={10} defaultSize={25} maxSize={90}>\n              <ActionsExplorer />\n            </Panel>\n          </React.Fragment>\n        ) : null}\n      </PanelGroup>\n    </PagePanelRoot>\n  );\n}\n","import * as React from 'react';\nimport { styled, Box, IconButton, Stack, Tooltip } from '@mui/material';\nimport { SimpleTreeView, treeItemClasses } from '@mui/x-tree-view';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { NodeId } from '@toolpad/studio-runtime';\nimport clsx from 'clsx';\nimport invariant from 'invariant';\nimport { alphabeticComparator, createPropComparator } from '@toolpad/utils/comparators';\nimport useBoolean from '@toolpad/utils/hooks/useBoolean';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { useAppStateApi, useAppState } from '../../AppState';\nimport useLocalStorageState from '../../../utils/useLocalStorageState';\nimport NodeMenu from '../NodeMenu';\nimport { DomView } from '../../../utils/domView';\nimport { useProjectApi } from '../../../projectApi';\nimport EditableTreeItem, { EditableTreeItemProps } from '../../../components/EditableTreeItem';\nimport { scrollIntoViewIfNeeded } from '../../../utils/dom';\nimport ExplorerHeader from '../ExplorerHeader';\n\nconst PagesExplorerRoot = styled(Stack)({\n  height: '100%',\n  width: '100%',\n});\n\nconst classes = {\n  treeItemMenuButton: 'Toolpad__PagesExplorerTreeItem',\n  treeItemMenuOpen: 'Toolpad__PagesExplorerTreeItemMenuOpen',\n};\n\nconst StyledEditableTreeItem = styled(EditableTreeItem)({\n  [`& .${classes.treeItemMenuButton}`]: {\n    visibility: 'hidden',\n  },\n  [`\n    & .${treeItemClasses.content}:hover .${classes.treeItemMenuButton},\n    & .${classes.treeItemMenuOpen}\n  `]: {\n    visibility: 'visible',\n  },\n});\n\ninterface StyledTreeItemProps extends EditableTreeItemProps {\n  ref?: React.RefObject<HTMLLIElement>;\n  onRenameNode?: (nodeId: NodeId, updatedName: string) => void;\n  onDeleteNode?: (nodeId: NodeId) => void;\n  onDuplicateNode?: (nodeId: NodeId) => void;\n  onCreate?: React.MouseEventHandler;\n  labelIcon?: React.ReactNode;\n  labelText: string;\n  createLabelText?: string;\n  renameLabelText?: string;\n  deleteLabelText?: string;\n  duplicateLabelText?: string;\n  toolpadNodeId?: NodeId;\n}\n\nfunction PagesExplorerTreeItem(props: StyledTreeItemProps) {\n  const {\n    itemId,\n    labelIcon,\n    labelText,\n    title,\n    onRenameNode,\n    onDeleteNode,\n    onDuplicateNode,\n    renameLabelText = 'Rename',\n    deleteLabelText = 'Delete',\n    duplicateLabelText = 'Duplicate',\n    toolpadNodeId,\n    validateItemName,\n    ...other\n  } = props;\n\n  const { value: isEditing, setTrue: startEditing, setFalse: stopEditing } = useBoolean(false);\n\n  const handleRenameConfirm = React.useCallback(\n    (updatedName: string) => {\n      if (onRenameNode) {\n        onRenameNode(itemId as NodeId, updatedName);\n        stopEditing();\n      }\n    },\n    [itemId, onRenameNode, stopEditing],\n  );\n\n  const validateEditablePageName = React.useCallback(\n    (newName: string) => {\n      if (newName !== labelText && validateItemName) {\n        return validateItemName(newName);\n      }\n      return { isValid: true };\n    },\n    [labelText, validateItemName],\n  );\n\n  return (\n    <StyledEditableTreeItem\n      itemId={itemId}\n      labelText={labelText}\n      renderLabel={(children) => (\n        <Tooltip title={title} placement=\"right\" disableInteractive>\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            {labelIcon}\n            {children}\n            {toolpadNodeId ? (\n              <NodeMenu\n                renderButton={({ buttonProps, menuProps }) => (\n                  <IconButton\n                    className={clsx(classes.treeItemMenuButton, {\n                      [classes.treeItemMenuOpen]: menuProps.open,\n                    })}\n                    aria-label=\"Open page explorer menu\"\n                    size=\"small\"\n                    {...buttonProps}\n                  >\n                    <MoreVertIcon fontSize=\"inherit\" />\n                  </IconButton>\n                )}\n                nodeId={toolpadNodeId}\n                renameLabelText={renameLabelText}\n                deleteLabelText={deleteLabelText}\n                duplicateLabelText={duplicateLabelText}\n                onRenameNode={startEditing}\n                onDeleteNode={onDeleteNode}\n                onDuplicateNode={onDuplicateNode}\n              />\n            ) : null}\n          </Box>\n        </Tooltip>\n      )}\n      suggestedNewItemName={labelText}\n      onCancel={stopEditing}\n      isEditing={isEditing}\n      {...(onRenameNode ? { onEdit: handleRenameConfirm } : {})}\n      validateItemName={validateEditablePageName}\n      {...other}\n    />\n  );\n}\n\nfunction getNodeEditorDomView(node: appDom.AppDomNode): DomView | undefined {\n  switch (node.type) {\n    case 'page':\n      return { kind: 'page', name: node.name };\n    default:\n      return undefined;\n  }\n}\n\nconst DEFAULT_NEW_PAGE_NAME = 'page';\n\nexport interface PagesExplorerProps {\n  className?: string;\n}\n\nexport default function PagesExplorer({ className }: PagesExplorerProps) {\n  const projectApi = useProjectApi();\n  const { dom, currentView } = useAppState();\n  const appStateApi = useAppStateApi();\n\n  const app = appDom.getApp(dom);\n  const { pages = [] } = appDom.getChildNodes(dom, app);\n\n  const existingNames = React.useMemo(\n    () => appDom.getExistingNamesForChildren(dom, appDom.getApp(dom), 'pages'),\n    [dom],\n  );\n\n  const [expanded, setExpanded] = useLocalStorageState<string[]>(\n    `editor/${app.id}/pages-explorer-expansion`,\n    [':pages'],\n  );\n\n  const activePage = currentView.name ? appDom.getPageByName(dom, currentView.name) : null;\n\n  const handleToggle = (event: React.SyntheticEvent, nodeIds: string[]) => {\n    setExpanded(nodeIds as NodeId[]);\n  };\n\n  const handleSelect = (event: React.SyntheticEvent, nodeIds: string[]) => {\n    if (nodeIds.length <= 0) {\n      return;\n    }\n\n    const rawNodeId = nodeIds[0];\n    if (rawNodeId.startsWith(':')) {\n      return;\n    }\n\n    const selectedNodeId: NodeId = rawNodeId as NodeId;\n    const node = appDom.getNode(dom, selectedNodeId);\n    if (appDom.isElement(node)) {\n      // TODO: sort out in-page selection\n      const page = appDom.getPageAncestor(dom, node);\n      if (page) {\n        appStateApi.setView({ kind: 'page', name: page.name });\n      }\n    }\n\n    if (appDom.isPage(node)) {\n      appStateApi.setView({ kind: 'page', name: node.name });\n    }\n  };\n\n  const pagesTreeRef = React.useRef<HTMLUListElement | null>(null);\n\n  const [hasMounted, setHasMounted] = React.useState(false);\n\n  React.useEffect(() => {\n    setHasMounted(true);\n  }, []);\n\n  React.useEffect(() => {\n    const pagesTree = pagesTreeRef.current;\n    if (pagesTree && hasMounted) {\n      const selectedItem = pagesTree.querySelector(`.${treeItemClasses.selected}`);\n\n      if (selectedItem) {\n        scrollIntoViewIfNeeded(selectedItem);\n      }\n    }\n  }, [hasMounted, pages]);\n\n  const {\n    value: isCreateNewPageOpen,\n    setTrue: handleOpenCreateNewPage,\n    setFalse: handleCloseCreateNewPage,\n  } = useBoolean(false);\n\n  const nextProposedName = React.useMemo(\n    () => appDom.proposeName(DEFAULT_NEW_PAGE_NAME, existingNames),\n    [existingNames],\n  );\n\n  const handleCreateNewCommit = React.useCallback(\n    async (newPageName: string) => {\n      const newNode = appDom.createNode(dom, 'page', {\n        name: newPageName,\n        attributes: {\n          title: newPageName,\n          display: 'shell',\n          authorization: {\n            allowAll: true,\n          },\n        },\n      });\n      const appNode = appDom.getApp(dom);\n\n      appStateApi.update((draft) => appDom.addNode(draft, newNode, appNode, 'pages'), {\n        kind: 'page',\n        name: newNode.name,\n      });\n\n      handleCloseCreateNewPage();\n    },\n    [appStateApi, dom, handleCloseCreateNewPage],\n  );\n\n  const validatePageName = React.useCallback(\n    (pageName: string) => {\n      const validationErrorMessage = appDom.validateNodeName(pageName, existingNames, 'page');\n\n      return {\n        isValid: !validationErrorMessage,\n        ...(validationErrorMessage ? { errorMessage: validationErrorMessage } : {}),\n      };\n    },\n    [existingNames],\n  );\n\n  const handleDeletePage = React.useCallback(\n    async (nodeId: NodeId) => {\n      const deletedNode = appDom.getNode(dom, nodeId);\n\n      let domViewAfterDelete: DomView | undefined;\n      if (nodeId === activePage?.id) {\n        const siblings = appDom.getSiblings(dom, deletedNode);\n        const firstSiblingOfType = siblings.find((sibling) => sibling.type === deletedNode.type);\n        domViewAfterDelete = firstSiblingOfType\n          ? getNodeEditorDomView(firstSiblingOfType)\n          : { kind: 'page' };\n      }\n\n      await projectApi.methods.deletePage(deletedNode.name);\n\n      appStateApi.update((draft) => appDom.removeNode(draft, nodeId), domViewAfterDelete);\n    },\n    [projectApi, activePage?.id, appStateApi, dom],\n  );\n\n  const handleRenameNode = React.useCallback(\n    (nodeId: NodeId, updatedName: string) => {\n      appStateApi.update(\n        (draft) => {\n          const page = appDom.getNode(draft, nodeId, 'page');\n          return appDom.setNodeName(draft, page, updatedName);\n        },\n        {\n          kind: 'page',\n          name: updatedName,\n        },\n      );\n\n      const oldNameNode = dom.nodes[nodeId];\n      if (oldNameNode.type === 'page' && updatedName !== oldNameNode.name) {\n        setTimeout(async () => {\n          await projectApi.methods.deletePage(oldNameNode.name);\n        }, 300);\n      }\n    },\n    [appStateApi, dom.nodes, projectApi.methods],\n  );\n\n  const handleDuplicateNode = React.useCallback(\n    (nodeId: NodeId) => {\n      const node = appDom.getNode(dom, nodeId);\n\n      invariant(\n        node.parentId && node.parentProp,\n        'Duplication should never be called on nodes that are not placed in the dom',\n      );\n\n      const fragment = appDom.cloneFragment(dom, nodeId);\n\n      const newNode = appDom.getNode(fragment, fragment.root);\n      const editorDomView = getNodeEditorDomView(newNode);\n\n      appStateApi.update(\n        (draft) => appDom.addFragment(draft, fragment, node.parentId!, node.parentProp!),\n        editorDomView || { kind: 'page' },\n      );\n    },\n    [appStateApi, dom],\n  );\n\n  const alphabeticSortedPages = React.useMemo(\n    () => [...pages].sort(createPropComparator('name', alphabeticComparator)),\n    [pages],\n  );\n\n  return (\n    <PagesExplorerRoot data-testid=\"pages-explorer\" direction=\"column\" className={className}>\n      <ExplorerHeader\n        headerText=\"Pages\"\n        onCreate={handleOpenCreateNewPage}\n        createLabelText=\"Create new page\"\n      />\n      <SimpleTreeView\n        ref={pagesTreeRef}\n        aria-label=\"Pages explorer\"\n        selectedItems={activePage ? [activePage.id] : []}\n        onSelectedItemsChange={handleSelect}\n        expandedItems={expanded}\n        onExpandedItemsChange={handleToggle}\n        multiSelect\n        sx={{\n          overflow: 'auto',\n          scrollbarGutter: 'stable',\n        }}\n      >\n        {isCreateNewPageOpen ? (\n          <EditableTreeItem\n            itemId=\"::create::\"\n            isEditing\n            suggestedNewItemName={nextProposedName}\n            onEdit={handleCreateNewCommit}\n            onCancel={handleCloseCreateNewPage}\n            validateItemName={validatePageName}\n          />\n        ) : null}\n        {alphabeticSortedPages.map((page) => (\n          <PagesExplorerTreeItem\n            key={page.id}\n            itemId={page.id}\n            toolpadNodeId={page.id}\n            labelText={page.name}\n            title={appDom.getPageDisplayName(page)}\n            onRenameNode={handleRenameNode}\n            onDuplicateNode={handleDuplicateNode}\n            onDeleteNode={handleDeletePage}\n            validateItemName={validatePageName}\n          />\n        ))}\n      </SimpleTreeView>\n    </PagesExplorerRoot>\n  );\n}\n","import { MenuItem, Menu, ListItemIcon, ListItemText, ButtonProps, MenuProps } from '@mui/material';\nimport * as React from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport { NodeId } from '@toolpad/studio-runtime';\nimport useLatest from '@toolpad/utils/hooks/useLatest';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { useAppState } from '../AppState';\nimport { ConfirmDialog } from '../../components/SystemDialogs';\nimport useMenu from '../../utils/useMenu';\n\nexport interface NodeMenuProps {\n  nodeId: NodeId;\n  renderButton: (params: { buttonProps: ButtonProps; menuProps: MenuProps }) => React.ReactNode;\n  renameLabelText?: string;\n  deleteLabelText?: string;\n  duplicateLabelText?: string;\n  onRenameNode?: (nodeId: NodeId) => void;\n  onDeleteNode?: (nodeId: NodeId) => void;\n  onDuplicateNode?: (nodeId: NodeId) => void;\n}\n\nexport default function NodeMenu({\n  nodeId,\n  renderButton,\n  renameLabelText = 'Rename',\n  deleteLabelText = 'Delete',\n  duplicateLabelText = 'Duplicate',\n  onRenameNode,\n  onDeleteNode,\n  onDuplicateNode,\n}: NodeMenuProps) {\n  const { dom } = useAppState();\n\n  const { menuProps, buttonProps, onMenuClose } = useMenu();\n\n  const [deletedNodeId, setDeletedNodeId] = React.useState<NodeId | null>(null);\n  const handleDeleteNodeDialogOpen = React.useCallback(\n    (event: React.MouseEvent) => {\n      event.stopPropagation();\n      setDeletedNodeId(nodeId);\n      onMenuClose(event);\n    },\n    [nodeId, onMenuClose],\n  );\n  const deletedNode = deletedNodeId && appDom.getMaybeNode(dom, deletedNodeId);\n  const latestDeletedNode = useLatest(deletedNode);\n\n  const isAction = React.useMemo(() => {\n    if (latestDeletedNode?.type === 'query' && latestDeletedNode?.attributes?.mode === 'mutation') {\n      return true;\n    }\n    return false;\n  }, [latestDeletedNode]);\n\n  const handleDeleteNodeDialogClose = React.useCallback(\n    (confirmed: boolean, event: React.MouseEvent) => {\n      event.stopPropagation();\n      setDeletedNodeId(null);\n      if (confirmed && deletedNode) {\n        onDeleteNode?.(deletedNodeId);\n      }\n    },\n    [deletedNode, deletedNodeId, onDeleteNode],\n  );\n\n  const handleRenameClick = React.useCallback(\n    (event: React.MouseEvent) => {\n      onRenameNode?.(nodeId);\n      onMenuClose(event);\n    },\n    [nodeId, onRenameNode, onMenuClose],\n  );\n\n  const handleDuplicateClick = React.useCallback(\n    (event: React.MouseEvent) => {\n      onMenuClose(event);\n      onDuplicateNode?.(nodeId);\n    },\n    [onDuplicateNode, nodeId, onMenuClose],\n  );\n\n  return (\n    <React.Fragment>\n      {renderButton({\n        buttonProps,\n        menuProps,\n      })}\n      <Menu\n        {...menuProps}\n        onClick={(event) => {\n          event.stopPropagation();\n          menuProps.onClick?.(event);\n        }}\n      >\n        {onRenameNode ? (\n          <MenuItem onClick={handleRenameClick}>\n            <ListItemIcon>\n              <ModeEditIcon />\n            </ListItemIcon>\n            <ListItemText>{renameLabelText}</ListItemText>\n          </MenuItem>\n        ) : null}\n        {onDuplicateNode ? (\n          <MenuItem onClick={handleDuplicateClick}>\n            <ListItemIcon>\n              <ContentCopyIcon />\n            </ListItemIcon>\n            <ListItemText>{duplicateLabelText}</ListItemText>\n          </MenuItem>\n        ) : null}\n        {onDeleteNode ? (\n          <MenuItem onClick={handleDeleteNodeDialogOpen}>\n            <ListItemIcon>\n              <DeleteIcon />\n            </ListItemIcon>\n            <ListItemText>{deleteLabelText}</ListItemText>\n          </MenuItem>\n        ) : null}\n      </Menu>\n      <ConfirmDialog\n        open={!!deletedNode}\n        severity=\"error\"\n        onClose={handleDeleteNodeDialogClose}\n        okButton=\"Delete\"\n      >\n        Delete {isAction ? 'action' : 'query'} &quot;{latestDeletedNode?.name}\n        &quot;?\n      </ConfirmDialog>\n    </React.Fragment>\n  );\n}\n","import { LoadingButton, LoadingButtonProps } from '@mui/lab';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  ButtonProps,\n  TextField,\n} from '@mui/material';\nimport * as React from 'react';\n\nconst SystemDialog = Dialog;\nconst SystemDialogTitle = DialogTitle;\nconst SystemDialogContent = DialogContent;\nconst SystemDialogActions = DialogActions;\nconst SystemDialogCancelButton = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ children = 'cancel', ...props }, ref) => (\n    <Button ref={ref} color=\"inherit\" variant=\"text\" {...props}>\n      {children}\n    </Button>\n  ),\n);\nconst SystemDialogOkButton = React.forwardRef<HTMLButtonElement, LoadingButtonProps>(\n  ({ children = 'ok', ...props }, ref) => (\n    <LoadingButton ref={ref} {...props}>\n      {children}\n    </LoadingButton>\n  ),\n);\n\nexport interface ConfirmDialogProps {\n  open: boolean;\n  onClose: (result: boolean, event: React.MouseEvent) => void;\n  title?: React.ReactNode;\n  children?: React.ReactNode;\n  cancelButton?: React.ReactNode;\n  okButton?: React.ReactNode;\n  severity?: 'error' | 'warning';\n  loading?: boolean;\n}\n\nexport function ConfirmDialog({\n  open,\n  onClose,\n  title,\n  children,\n  cancelButton = 'Cancel',\n  okButton = 'ok',\n  severity,\n  loading,\n}: ConfirmDialogProps) {\n  const handleCancel = React.useCallback(\n    (event: React.MouseEvent) => onClose(false, event),\n    [onClose],\n  );\n\n  const handleOk = React.useCallback((event: React.MouseEvent) => onClose(true, event), [onClose]);\n\n  return (\n    <SystemDialog open={open} onClose={handleCancel}>\n      <SystemDialogTitle>{title ?? 'Confirm'}</SystemDialogTitle>\n      <SystemDialogContent>{children}</SystemDialogContent>\n      <SystemDialogActions>\n        <SystemDialogCancelButton onClick={handleCancel}>{cancelButton}</SystemDialogCancelButton>\n        <SystemDialogOkButton color={severity} loading={loading} onClick={handleOk}>\n          {okButton}\n        </SystemDialogOkButton>\n      </SystemDialogActions>\n    </SystemDialog>\n  );\n}\n\nexport interface AlertDialogProps {\n  open: boolean;\n  onClose: () => void;\n  title?: React.ReactNode;\n  children?: React.ReactNode;\n  okButton?: React.ReactNode;\n}\n\nexport function AlertDialog({ open, onClose, title, children, okButton = 'ok' }: AlertDialogProps) {\n  const handleOk = React.useCallback(() => onClose(), [onClose]);\n\n  return (\n    <SystemDialog open={open} onClose={handleOk}>\n      <SystemDialogTitle>{title ?? 'Alert'}</SystemDialogTitle>\n      <SystemDialogContent>{children}</SystemDialogContent>\n      <SystemDialogActions>\n        <SystemDialogOkButton onClick={handleOk}>{okButton}</SystemDialogOkButton>\n      </SystemDialogActions>\n    </SystemDialog>\n  );\n}\n\nexport interface PromptDialogProps {\n  open: boolean;\n  onClose: (result: string | null) => void;\n  title?: React.ReactNode;\n  children?: React.ReactNode;\n  cancelButton?: React.ReactNode;\n  okButton?: React.ReactNode;\n  loading?: boolean;\n}\n\nexport function PromptDialog({\n  open,\n  onClose,\n  title,\n  children,\n  cancelButton = 'cancel',\n  okButton = 'ok',\n  loading,\n}: PromptDialogProps) {\n  const [input, setInput] = React.useState('');\n\n  const handleCancel = React.useCallback(() => onClose(null), [onClose]);\n\n  const handleOk = React.useCallback(() => onClose(input), [input, onClose]);\n\n  const handleInput = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => setInput(event.target.value),\n    [],\n  );\n\n  return (\n    <SystemDialog open={open} onClose={handleCancel}>\n      <SystemDialogTitle>{title ?? 'Prompt'}</SystemDialogTitle>\n      <SystemDialogContent>\n        {children}\n        <TextField fullWidth value={input} onChange={handleInput} />\n      </SystemDialogContent>\n      <SystemDialogActions>\n        <SystemDialogCancelButton onClick={handleCancel}>{cancelButton}</SystemDialogCancelButton>\n        <SystemDialogOkButton loading={loading} onClick={handleOk}>\n          {okButton}\n        </SystemDialogOkButton>\n      </SystemDialogActions>\n    </SystemDialog>\n  );\n}\n","import { ButtonProps, MenuProps } from '@mui/material';\nimport * as React from 'react';\n\n/**\n * Abstracts MUI menus opening logic and some of the a11y.\n */\nexport default function useMenu() {\n  const buttonId = React.useId();\n  const menuId = React.useId();\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const onMenuClose = React.useCallback((event?: any) => {\n    event?.stopPropagation?.();\n    setAnchorEl(null);\n  }, []);\n\n  const buttonProps = React.useMemo<ButtonProps>(\n    () => ({\n      id: buttonId,\n      'aria-controls': open ? menuId : undefined,\n      'aria-haspopup': 'true',\n      'aria-expanded': open ? 'true' : undefined,\n      onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.stopPropagation();\n        setAnchorEl(event.currentTarget);\n      },\n    }),\n    [buttonId, menuId, open],\n  );\n\n  const menuProps = React.useMemo<MenuProps>(\n    () => ({\n      id: menuId,\n      anchorEl,\n      open,\n      onClose: onMenuClose,\n      MenuListProps: {\n        'aria-labelledby': buttonId,\n      },\n    }),\n    [anchorEl, buttonId, menuId, onMenuClose, open],\n  );\n\n  return {\n    buttonProps,\n    menuProps,\n    onMenuClose,\n  };\n}\n","import * as React from 'react';\nimport { TreeItem, TreeItemProps } from '@mui/x-tree-view';\nimport {\n  Alert,\n  CircularProgress,\n  InputBase,\n  InputBaseProps,\n  Popover,\n  Typography,\n  alpha,\n  styled,\n} from '@mui/material';\n\nconst EditableTreeItemRoot = styled(TreeItem, {\n  shouldForwardProp: (prop) => prop !== 'isEditing',\n})<{\n  isEditing: boolean;\n}>(({ theme, isEditing }) => ({\n  paddingLeft: theme.spacing(0.5),\n  '> .MuiTreeItem-content': {\n    padding: theme.spacing(0, 0.5),\n    gap: theme.spacing(0.5),\n    backgroundColor: isEditing ? alpha(theme.palette.primary.main, 0.2) : undefined,\n  },\n}));\n\nexport interface EditableTreeItemProps extends Omit<TreeItemProps, 'label'> {\n  labelText?: string;\n  renderLabel?: (children: React.ReactNode) => React.ReactNode;\n  suggestedNewItemName?: string;\n  isEditing?: boolean;\n  onEdit?: (newItemName: string) => void | Promise<void>;\n  onCancel?: () => void | Promise<void>;\n  isLoading?: boolean;\n  validateItemName?: (newItemName: string) => { isValid: boolean; errorMessage?: string };\n  inputProps?: Omit<\n    InputBaseProps,\n    'value' | 'onChange' | 'autoFocus' | 'onFocus' | 'onBlur' | 'onKeyDown' | 'fullWidth'\n  >;\n}\n\nconst defaultRenderLabel = (children: React.ReactNode) => children;\n\nexport default function EditableTreeItem({\n  labelText = '',\n  renderLabel = defaultRenderLabel,\n  suggestedNewItemName = '',\n  validateItemName,\n  isEditing: isExternalEditing = false,\n  onEdit,\n  onCancel,\n  isLoading = false,\n  inputProps,\n  sx,\n  ...rest\n}: EditableTreeItemProps) {\n  const inputRef = React.useRef<HTMLInputElement | null>(null);\n\n  const [itemNameInput, setItemNameInput] = React.useState(suggestedNewItemName);\n  const [isInternalEditing, setIsInternalEditing] = React.useState(false);\n\n  const isEditing = isExternalEditing || isInternalEditing;\n\n  const newItemValidationResult = React.useMemo(\n    () => (validateItemName ? validateItemName(itemNameInput) : { isValid: true }),\n    [itemNameInput, validateItemName],\n  );\n  const validationErrorMessage = newItemValidationResult.errorMessage;\n\n  React.useEffect(() => {\n    setItemNameInput(suggestedNewItemName);\n  }, [suggestedNewItemName]);\n\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent) => {\n      // Double-click\n      if (event.detail === 2 && onEdit) {\n        setIsInternalEditing(true);\n      }\n    },\n    [onEdit],\n  );\n\n  const handleCancel = React.useCallback(() => {\n    setItemNameInput(suggestedNewItemName);\n    setIsInternalEditing(false);\n\n    if (onCancel) {\n      onCancel();\n    }\n  }, [onCancel, suggestedNewItemName]);\n\n  const handleConfirm = React.useCallback(async () => {\n    if (!itemNameInput || !newItemValidationResult.isValid || isLoading) {\n      handleCancel();\n      return;\n    }\n\n    if (onEdit) {\n      await onEdit(itemNameInput);\n    }\n    setIsInternalEditing(false);\n  }, [handleCancel, isLoading, itemNameInput, newItemValidationResult.isValid, onEdit]);\n\n  const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setItemNameInput(event.target.value.replaceAll(/[^a-zA-Z0-9]/g, ''));\n  }, []);\n\n  const handleFocus = React.useCallback((event: React.FocusEvent<HTMLInputElement>) => {\n    event.target.select();\n    event.stopPropagation();\n  }, []);\n\n  const handleBlur = React.useCallback(() => {\n    handleConfirm();\n  }, [handleConfirm]);\n\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      event.stopPropagation();\n      if (event.key === 'Enter') {\n        handleConfirm();\n      } else if (event.key === 'Escape') {\n        handleCancel();\n      }\n    },\n    [handleCancel, handleConfirm],\n  );\n\n  const inputErrorPopoverAnchorEl = inputRef.current;\n\n  const labelTextSx = {\n    fontSize: 14,\n    pt: '4px',\n    pb: '4px',\n  };\n\n  return (\n    <EditableTreeItemRoot\n      {...rest}\n      onClick={handleClick}\n      label={renderLabel(\n        isEditing ? (\n          <React.Fragment>\n            <InputBase\n              {...inputProps}\n              ref={inputRef}\n              value={itemNameInput}\n              onChange={handleChange}\n              autoFocus\n              onFocus={handleFocus}\n              onBlur={handleBlur}\n              onKeyDown={handleKeyDown}\n              fullWidth\n              disabled={isLoading}\n              endAdornment={isLoading ? <CircularProgress size={14} /> : null}\n              sx={{\n                ...(inputProps?.sx || {}),\n                ...labelTextSx,\n                padding: 0,\n              }}\n            />\n            {inputErrorPopoverAnchorEl ? (\n              <Popover\n                open={!!validationErrorMessage}\n                anchorEl={inputErrorPopoverAnchorEl}\n                disableAutoFocus\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                }}\n              >\n                {validationErrorMessage ? (\n                  <Alert severity=\"error\" variant=\"outlined\">\n                    {validationErrorMessage}\n                  </Alert>\n                ) : null}\n              </Popover>\n            ) : null}\n          </React.Fragment>\n        ) : (\n          <Typography\n            variant=\"body2\"\n            sx={{\n              fontWeight: 'inherit',\n              flexGrow: 1,\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              ...labelTextSx,\n            }}\n            noWrap\n          >\n            {labelText}\n          </Typography>\n        ),\n      )}\n      isEditing={isEditing}\n      sx={sx}\n    />\n  );\n}\n","import * as React from 'react';\nimport {\n  IconButton,\n  Tooltip,\n  Stack,\n  Typography,\n  styled,\n  InputAdornment,\n  TextField,\n} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport SearchIcon from '@mui/icons-material/Search';\n// import ClearIcon from '@mui/icons-material/Clear';\n\ninterface ExplorerHeaderProps {\n  headerText: string;\n  headerIcon?: React.ReactNode;\n  createLabelText?: string;\n  onCreate?: React.MouseEventHandler<HTMLButtonElement>;\n  searchLabelText?: string;\n  onSearch?: (searchTerm: string) => void | Promise<void>;\n  hasPersistentSearch?: boolean;\n}\n\nconst ExplorerHeaderContainer = styled(Stack)(({ theme }) => ({\n  backgroundColor: theme.palette.background.paper,\n  width: '100%',\n  height: 36,\n}));\n\nconst ExplorerHeaderTitle = styled(Typography)(({ theme }) => ({\n  fontSize: 13,\n  flexGrow: 1,\n  fontWeight: theme.typography.fontWeightLight,\n}));\n\nexport default function ExplorerHeader({\n  headerText,\n  headerIcon,\n  onCreate,\n  onSearch,\n  createLabelText,\n  searchLabelText = 'Search',\n  hasPersistentSearch = false,\n}: ExplorerHeaderProps) {\n  const [isSearching, setIsSearching] = React.useState(false || hasPersistentSearch);\n  const [searchTerm, setSearchTerm] = React.useState('');\n\n  const handleSearchClick = React.useCallback(() => {\n    if (isSearching && searchTerm) {\n      setSearchTerm('');\n    }\n\n    setIsSearching((previousIsSearching) => !previousIsSearching);\n  }, [isSearching, searchTerm]);\n\n  const handleSearchChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(event.target.value);\n  }, []);\n\n  // const handleClearSearch = React.useCallback(() => {\n  //   setSearchTerm('');\n  // }, []);\n\n  React.useEffect(() => {\n    if (onSearch) {\n      onSearch(searchTerm);\n    }\n  }, [onSearch, searchTerm]);\n\n  return (\n    <ExplorerHeaderContainer\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      sx={{ pl: isSearching ? 2 : 2.5 }}\n    >\n      {isSearching ? (\n        <TextField\n          hiddenLabel\n          value={searchTerm}\n          onChange={handleSearchChange}\n          variant=\"standard\"\n          fullWidth\n          size=\"small\"\n          placeholder={`${searchLabelText}…`}\n          slotProps={{\n            input: {\n              startAdornment: hasPersistentSearch ? (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" sx={{ mt: '-4px' }} />\n                </InputAdornment>\n              ) : null,\n              sx: {\n                fontSize: 14,\n                borderRadius: 0,\n              },\n            },\n          }}\n        />\n      ) : (\n        <React.Fragment>\n          {headerIcon}\n          <ExplorerHeaderTitle\n            variant=\"body2\"\n            sx={{\n              mx: 0.5,\n              my: 0.5,\n            }}\n          >\n            {headerText}\n          </ExplorerHeaderTitle>\n        </React.Fragment>\n      )}\n      {onSearch && searchLabelText && !hasPersistentSearch ? (\n        <Tooltip title={searchLabelText}>\n          <IconButton aria-label={searchLabelText} size=\"medium\" onClick={handleSearchClick}>\n            <SearchIcon color={isSearching ? 'primary' : 'inherit'} />\n          </IconButton>\n        </Tooltip>\n      ) : null}\n      {onCreate && createLabelText ? (\n        <Tooltip title={createLabelText}>\n          <IconButton aria-label={createLabelText} size=\"small\" onClick={onCreate}>\n            <AddIcon />\n          </IconButton>\n        </Tooltip>\n      ) : null}\n    </ExplorerHeaderContainer>\n  );\n}\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport { NodeId } from '@toolpad/studio-runtime';\nimport { Box, Typography, styled, IconButton } from '@mui/material';\nimport { SimpleTreeView, TreeItem, TreeItemProps, treeItemClasses } from '@mui/x-tree-view';\nimport useBoolean from '@toolpad/utils/hooks/useBoolean';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport invariant from 'invariant';\nimport { useAppState, useDomApi, useAppStateApi } from '../../AppState';\nimport { ComponentIcon } from '../PageEditor/ComponentCatalog/ComponentCatalogItem';\nimport { DomView } from '../../../utils/domView';\nimport { removePageLayoutNode } from '../pageLayout';\nimport EditableTreeItem, { EditableTreeItemProps } from '../../../components/EditableTreeItem';\nimport ExplorerHeader from '../ExplorerHeader';\nimport NodeMenu from '../NodeMenu';\n\nconst classes = {\n  treeItemMenuButton: 'Toolpad__HierarchyListItem',\n  treeItemMenuOpen: 'Toolpad__HierarchyListItemMenuOpen',\n};\n\nconst StyledTreeItem = styled(EditableTreeItem)({\n  [`& .${classes.treeItemMenuButton}`]: {\n    visibility: 'hidden',\n  },\n  [`& .${treeItemClasses.content}:hover .${classes.treeItemMenuButton}, & .${classes.treeItemMenuOpen}`]:\n    {\n      visibility: 'visible',\n    },\n});\n\ninterface CustomTreeItemProps extends TreeItemProps, EditableTreeItemProps {\n  ref?: React.RefObject<HTMLLIElement>;\n  node: appDom.ElementNode;\n}\n\nfunction CustomTreeItem(props: CustomTreeItemProps) {\n  const domApi = useDomApi();\n  const { dom } = useAppState();\n  const appStateApi = useAppStateApi();\n\n  const { label, node, ...other } = props;\n\n  const {\n    value: domNodeEditing,\n    setTrue: startDomNodeEditing,\n    setFalse: stopDomNodeEditing,\n  } = useBoolean(false);\n\n  const existingNames = React.useMemo(() => appDom.getExistingNamesForNode(dom, node), [dom, node]);\n\n  const validateEditableNodeName = React.useCallback(\n    (newName: string) => {\n      if (newName !== node.name) {\n        const validationErrorMessage = appDom.validateNodeName(newName, existingNames, node.type);\n\n        return {\n          isValid: !validationErrorMessage,\n          ...(validationErrorMessage ? { errorMessage: validationErrorMessage } : {}),\n        };\n      }\n      return { isValid: true };\n    },\n    [existingNames, node.name, node.type],\n  );\n\n  const handleNameSave = React.useCallback(\n    (newName: string) => {\n      domApi.setNodeName(node.id, newName);\n      stopDomNodeEditing();\n    },\n    [domApi, node.id, stopDomNodeEditing],\n  );\n\n  const handleNodeDelete = React.useCallback(\n    (nodeId: NodeId) => {\n      domApi.update((draft) => {\n        const toRemove = appDom.getNode(draft, nodeId);\n        if (appDom.isElement(toRemove)) {\n          draft = removePageLayoutNode(draft, toRemove);\n        }\n\n        return draft;\n      });\n    },\n    [domApi],\n  );\n\n  const handleNodeDuplicate = React.useCallback(\n    (nodeId: NodeId) => {\n      const currentNode = appDom.getNode(dom, nodeId);\n\n      invariant(\n        node.parentId && node.parentProp,\n        'Duplication should never be called on nodes that are not placed in the dom',\n      );\n\n      domApi.update((draft) => {\n        draft = appDom.duplicateNode(draft, currentNode);\n\n        return draft;\n      });\n    },\n    [dom, domApi, node.parentId, node.parentProp],\n  );\n\n  const handleNodeHover = React.useCallback(\n    (event: React.MouseEvent, nodeId: NodeId) => {\n      appStateApi.hoverNode(nodeId as NodeId);\n    },\n    [appStateApi],\n  );\n\n  const handleNodeBlur = React.useCallback(() => {\n    appStateApi.blurHoverNode();\n  }, [appStateApi]);\n\n  return (\n    <StyledTreeItem\n      key={node.id}\n      labelText={node.name}\n      renderLabel={(children) => (\n        <Box\n          sx={{ display: 'flex', alignItems: 'center' }}\n          onMouseEnter={(event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n            handleNodeHover?.(event, node.id);\n          }}\n          onMouseLeave={handleNodeBlur}\n        >\n          <ComponentIcon\n            id={node.attributes.component}\n            kind=\"builtIn\"\n            sx={{ marginRight: 1, fontSize: 18, opacity: 0.5 }}\n          />\n          {children}\n          {node.id ? (\n            <NodeMenu\n              renderButton={({ buttonProps, menuProps }) => (\n                <IconButton\n                  className={clsx(classes.treeItemMenuButton, {\n                    [classes.treeItemMenuOpen]: menuProps.open,\n                  })}\n                  aria-label=\"Open hierarchy menu\"\n                  size=\"small\"\n                  {...buttonProps}\n                >\n                  <MoreVertIcon fontSize=\"inherit\" />\n                </IconButton>\n              )}\n              nodeId={node.id}\n              onRenameNode={startDomNodeEditing}\n              onDuplicateNode={handleNodeDuplicate}\n              onDeleteNode={handleNodeDelete}\n            />\n          ) : null}\n        </Box>\n      )}\n      isEditing={domNodeEditing}\n      onEdit={handleNameSave}\n      suggestedNewItemName={node.name}\n      onCancel={stopDomNodeEditing}\n      validateItemName={validateEditableNodeName}\n      {...other}\n    />\n  );\n}\n\nfunction RecursiveSubTree({ dom, root }: { dom: appDom.AppDom; root: appDom.ElementNode }) {\n  const { children = [], renderItem = [] } = React.useMemo(\n    () => appDom.getChildNodes(dom, root),\n    [dom, root],\n  );\n\n  if (children.length > 0) {\n    return (\n      <CustomTreeItem itemId={root.id} node={root}>\n        {children.map((childNode) => (\n          <RecursiveSubTree key={childNode.id} dom={dom} root={childNode} />\n        ))}\n      </CustomTreeItem>\n    );\n  }\n  if (renderItem.length > 0) {\n    return (\n      <CustomTreeItem\n        itemId={root.id}\n        node={root}\n        label={<Typography variant=\"body2\">{root.name}</Typography>}\n      >\n        <TreeItem\n          itemId={`${root.id}-renderItem`}\n          label={<Typography variant=\"body2\">renderItem</Typography>}\n        >\n          {renderItem.map((childNode) => (\n            <RecursiveSubTree key={childNode.id} dom={dom} root={childNode} />\n          ))}\n        </TreeItem>\n      </CustomTreeItem>\n    );\n  }\n\n  return <CustomTreeItem itemId={root.id} node={root} />;\n}\n\nexport default function HierarchyExplorer() {\n  const { dom, currentView } = useAppState();\n  const appStateApi = useAppStateApi();\n  const [expandedDomNodeIds, setExpandedDomNodeIds] = React.useState<string[]>([]);\n\n  const currentPageNode = currentView?.name ? appDom.getPageByName(dom, currentView.name) : null;\n  const selectedDomNodeId = currentView?.selectedNodeId;\n\n  const selectedNodeAncestorIds = React.useMemo(() => {\n    if (!selectedDomNodeId) {\n      return [];\n    }\n    const selectedNode = appDom.getMaybeNode(dom, selectedDomNodeId);\n    if (selectedNode) {\n      return appDom.getAncestors(dom, selectedNode).map((node) => node.id);\n    }\n    return [];\n  }, [dom, selectedDomNodeId]);\n\n  const { children: rootChildren = [] } = React.useMemo(() => {\n    if (!currentPageNode) {\n      return { children: [] };\n    }\n    return appDom.getChildNodes(dom, currentPageNode);\n  }, [dom, currentPageNode]);\n\n  const handleNodeSelect = React.useCallback(\n    (event: React.SyntheticEvent, itemIds: string | null) => {\n      if (!itemIds) {\n        return;\n      }\n      appStateApi.selectNode(itemIds as NodeId);\n    },\n    [appStateApi],\n  );\n\n  const handleNodeFocus = React.useCallback(\n    (event: React.SyntheticEvent | null, nodeId: string) => {\n      appStateApi.hoverNode(nodeId as NodeId);\n    },\n    [appStateApi],\n  );\n\n  const handleNodeToggle = React.useCallback(\n    (event: React.SyntheticEvent, nodeIds: string[]) => {\n      setExpandedDomNodeIds(nodeIds);\n    },\n    [setExpandedDomNodeIds],\n  );\n\n  const deleteNode = React.useCallback(() => {\n    if (!selectedDomNodeId) {\n      return;\n    }\n    appStateApi.update(\n      (draft) => {\n        const toRemove = appDom.getMaybeNode(dom, selectedDomNodeId);\n        if (toRemove && appDom.isElement(toRemove)) {\n          draft = removePageLayoutNode(draft, toRemove);\n        }\n        return draft;\n      },\n      {\n        ...(currentView as Extract<DomView, { kind: 'page' }>),\n        selectedNodeId: null,\n      },\n    );\n  }, [selectedDomNodeId, appStateApi, currentView, dom]);\n\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent<HTMLUListElement>) => {\n      // delete selected node if event.key is Backspace\n      if (event.key === 'Backspace') {\n        deleteNode();\n      }\n    },\n    [deleteNode],\n  );\n\n  const expandedDomNodeIdSet = React.useMemo(() => {\n    return new Set([...selectedNodeAncestorIds, ...expandedDomNodeIds]);\n  }, [selectedNodeAncestorIds, expandedDomNodeIds]);\n\n  return (\n    <React.Fragment>\n      <ExplorerHeader headerText=\"Page hierarchy\" />\n      <SimpleTreeView\n        aria-label=\"Page hierarchy explorer\"\n        expandedItems={Array.from(expandedDomNodeIdSet)}\n        selectedItems={selectedDomNodeId}\n        onSelectedItemsChange={handleNodeSelect}\n        onItemFocus={handleNodeFocus}\n        onExpandedItemsChange={handleNodeToggle}\n        onKeyDown={handleKeyDown}\n        sx={{\n          flexGrow: 1,\n          maxWidth: 400,\n          maxHeight: '85%',\n          overflowY: 'auto',\n          scrollbarGutter: 'stable',\n        }}\n      >\n        {rootChildren.map((childNode) => (\n          <RecursiveSubTree key={childNode.id} dom={dom} root={childNode} />\n        ))}\n      </SimpleTreeView>\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\nimport { Divider, ListItemIcon, ListItemText, Menu, MenuItem } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport CodeIcon from '@mui/icons-material/Code';\nimport useBoolean from '@toolpad/utils/hooks/useBoolean';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport useMenu from '../../utils/useMenu';\nimport AppExportDialog from './AppExportDialog';\n\ninterface AppOptionsProps {\n  dom?: appDom.AppDom;\n}\n\nfunction AppOptions({ dom }: AppOptionsProps) {\n  const { buttonProps, menuProps, onMenuClose } = useMenu();\n\n  const {\n    setTrue: handleOpenAppExport,\n    setFalse: handleCloseAppExport,\n    value: appExportOpen,\n  } = useBoolean(false);\n\n  const handleAppExportClick = React.useCallback(() => {\n    onMenuClose();\n    handleOpenAppExport();\n  }, [handleOpenAppExport, onMenuClose]);\n\n  return (\n    <React.Fragment>\n      <IconButton {...buttonProps} aria-label=\"Application menu\">\n        <MoreVertIcon />\n      </IconButton>\n      <Menu {...menuProps}>\n        <Divider />\n        {dom ? (\n          <MenuItem onClick={handleAppExportClick}>\n            <ListItemIcon>\n              <CodeIcon />\n            </ListItemIcon>\n            <ListItemText>View DOM</ListItemText>\n          </MenuItem>\n        ) : null}\n      </Menu>\n      {dom ? (\n        <AppExportDialog open={appExportOpen} onClose={handleCloseAppExport} dom={dom} />\n      ) : null}\n    </React.Fragment>\n  );\n}\n\nexport default AppOptions;\n","import * as React from 'react';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport JsonView from '../../components/JsonView';\n\ninterface AppExportDialogProps {\n  open: boolean;\n  onClose: () => void;\n  dom: any;\n}\n\nfunction AppExportDialog({ open, onClose, dom }: AppExportDialogProps) {\n  const dialogTitleId = React.useId();\n\n  return (\n    <Dialog aria-labelledby={dialogTitleId} fullWidth maxWidth=\"sm\" open={open} onClose={onClose}>\n      <DialogTitle id={dialogTitleId}>Application DOM</DialogTitle>\n      <DialogContent sx={{ position: 'relative', display: 'flex', alignItems: 'stretch' }}>\n        <JsonView sx={{ flex: 1 }} copyToClipboard src={dom} expandPaths={[]} expandLevel={5} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Close</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default AppExportDialog;\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport { NodeId } from '@toolpad/studio-runtime';\nimport invariant from 'invariant';\nimport {\n  styled,\n  Box,\n  Button,\n  IconButton,\n  Typography,\n  Popover,\n  Stack,\n  Paper,\n  SxProps,\n  Link,\n} from '@mui/material';\nimport { SimpleTreeView, treeItemClasses } from '@mui/x-tree-view';\nimport AddIcon from '@mui/icons-material/Add';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport useBoolean from '@toolpad/utils/hooks/useBoolean';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport dataSources from '../../../../toolpadDataSources/client';\nimport QueryIcon from '../../QueryIcon';\nimport { useAppState, useAppStateApi } from '../../../AppState';\nimport EditableTreeItem, { EditableTreeItemProps } from '../../../../components/EditableTreeItem';\nimport NodeMenu from '../../NodeMenu';\nimport ExplorerHeader from '../../ExplorerHeader';\n\nconst classes = {\n  treeItemMenuButton: 'Toolpad__QueryListItem',\n  treeItemMenuOpen: 'Toolpad__QueryListItemMenuOpen',\n};\n\nconst StyledTreeItem = styled(EditableTreeItem)({\n  [`& .${classes.treeItemMenuButton}`]: {\n    visibility: 'hidden',\n  },\n  [`\n  & .${treeItemClasses.content}:hover .${classes.treeItemMenuButton},\n      & .${classes.treeItemMenuOpen}\n    `]: {\n    visibility: 'visible',\n  },\n});\n\ninterface StyledTreeItemProps extends EditableTreeItemProps {\n  onDeleteNode?: (nodeId: NodeId) => void;\n  onDuplicateNode?: (nodeId: NodeId) => void;\n  onRenameNode?: (nodeId: NodeId, updatedName: string) => void;\n  onSelectNode?: (nodeId: NodeId) => void;\n  onCreate?: (event: React.MouseEvent, mode?: appDom.FetchMode) => void;\n  labelTextSx?: SxProps;\n  labelIconId?: string;\n  labelIconSx?: SxProps;\n  createLabelText?: string;\n  deleteLabelText?: string;\n  renameLabelText?: string;\n  duplicateLabelText?: string;\n  toolpadNodeId?: NodeId;\n}\n\nfunction DataTreeItem(props: StyledTreeItemProps) {\n  const {\n    itemId,\n    labelText,\n    labelTextSx,\n    labelIconSx,\n    labelIconId,\n    onCreate,\n    onSelectNode,\n    onDeleteNode,\n    onDuplicateNode,\n    onRenameNode,\n    createLabelText,\n    deleteLabelText = 'Delete',\n    duplicateLabelText = 'Duplicate',\n    renameLabelText = 'Rename',\n    toolpadNodeId,\n    validateItemName,\n    ...other\n  } = props;\n\n  const { value: isEditing, setTrue: startEditing, setFalse: stopEditing } = useBoolean(false);\n\n  const handleRenameConfirm = React.useCallback(\n    (updatedName: string) => {\n      if (onRenameNode) {\n        onRenameNode(itemId as NodeId, updatedName);\n        stopEditing();\n      }\n    },\n    [itemId, onRenameNode, stopEditing],\n  );\n\n  const validateEditableQueryName = React.useCallback(\n    (newName: string) => {\n      if (newName !== labelText && validateItemName) {\n        return validateItemName(newName);\n      }\n      return { isValid: true };\n    },\n    [labelText, validateItemName],\n  );\n\n  const handleClick = React.useCallback(() => {\n    invariant(toolpadNodeId, 'DataTreeItem should only be used for nodes with a toolpadNodeId');\n    onSelectNode?.(toolpadNodeId);\n  }, [onSelectNode, toolpadNodeId]);\n\n  const queryCreationMode = React.useMemo(() => {\n    if (props.itemId === ':query') {\n      return 'query';\n    }\n    if (props.itemId === ':mutation') {\n      return 'mutation';\n    }\n    return undefined;\n  }, [props.itemId]);\n\n  return (\n    <StyledTreeItem\n      itemId={itemId}\n      labelText={labelText}\n      renderLabel={(children) => (\n        <Box sx={{ display: 'flex', alignItems: 'center' }} onClick={handleClick}>\n          <QueryIcon id={labelIconId || 'query'} sx={{ fontSize: 24, my: 0, ...labelIconSx }} />\n          {children}\n          {onCreate ? (\n            <IconButton\n              aria-label={createLabelText}\n              onClick={(event) => {\n                onCreate(event, queryCreationMode);\n              }}\n              size=\"small\"\n            >\n              <AddIcon fontSize=\"inherit\" />\n            </IconButton>\n          ) : null}\n          {toolpadNodeId ? (\n            <NodeMenu\n              renderButton={({ buttonProps, menuProps }) => (\n                <IconButton\n                  className={clsx(classes.treeItemMenuButton, {\n                    [classes.treeItemMenuOpen]: menuProps.open,\n                  })}\n                  aria-label=\"Open hierarchy menu\"\n                  size=\"small\"\n                  {...buttonProps}\n                >\n                  <MoreVertIcon fontSize=\"inherit\" />\n                </IconButton>\n              )}\n              nodeId={toolpadNodeId}\n              deleteLabelText={deleteLabelText}\n              duplicateLabelText={duplicateLabelText}\n              renameLabelText={renameLabelText}\n              onRenameNode={startEditing}\n              onDeleteNode={onDeleteNode}\n              onDuplicateNode={onDuplicateNode}\n            />\n          ) : null}\n        </Box>\n      )}\n      suggestedNewItemName={labelText}\n      onCancel={stopEditing}\n      isEditing={isEditing}\n      {...(onRenameNode ? { onEdit: handleRenameConfirm } : {})}\n      validateItemName={validateEditableQueryName}\n      {...other}\n    />\n  );\n}\n\ninterface CreatePopoverProps {\n  anchorEl: Element | null;\n  createPopoverOpen: boolean;\n  handleCreateNode: (dataSourceId: string) => () => void;\n  handleCreateClose: () => void;\n  createMode: appDom.FetchMode | undefined;\n}\n\nfunction CreatePopover({\n  anchorEl,\n  createPopoverOpen,\n  handleCreateNode,\n  handleCreateClose,\n  createMode,\n}: CreatePopoverProps) {\n  return (\n    <Popover\n      open={createPopoverOpen}\n      anchorEl={anchorEl}\n      onClose={handleCreateClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n    >\n      <Paper sx={{ p: 2, maxWidth: 500 }}>\n        <Typography variant=\"body2\" sx={{ mb: 2, textAlign: 'center' }}>\n          {createMode === 'query' ? (\n            <React.Fragment>\n              Make backend data available as state on the page. Read more in the{' '}\n              <Link\n                href=\"https://mui.com/toolpad/studio/concepts/queries/#queries\"\n                target=\"_blank\"\n                rel=\"noopener\"\n              >\n                docs.\n              </Link>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              Run an action on the page. Read more in the{' '}\n              <Link\n                href=\"https://mui.com/toolpad/studio/concepts/queries/#actions\"\n                target=\"_blank\"\n                rel=\"noopener\"\n              >\n                docs.\n              </Link>\n            </React.Fragment>\n          )}\n        </Typography>\n        <Stack direction=\"row\" gap={1} display={'grid'} gridTemplateColumns={'1fr 1fr'}>\n          {Object.keys(dataSources).map((dataSourceId) => {\n            const dataSource = dataSources[dataSourceId];\n            return (\n              <Button\n                key={dataSourceId}\n                sx={{ minHeight: 50, minWidth: 150 }}\n                variant=\"outlined\"\n                onClick={handleCreateNode(dataSourceId)}\n              >\n                <QueryIcon id={dataSourceId} sx={{ fontSize: 28 }} />{' '}\n                {dataSource?.displayName || dataSourceId}\n              </Button>\n            );\n          })}\n        </Stack>\n      </Paper>\n    </Popover>\n  );\n}\n\ninterface ExplorerProps {\n  nodes: appDom.QueryNode[];\n  setAnchorEl: (anchorEl: Element | null) => void;\n  headerText: string;\n  nodeName: string;\n}\n\nfunction Explorer({ nodes, setAnchorEl, nodeName, headerText }: ExplorerProps) {\n  const { dom, currentView } = useAppState();\n  const appStateApi = useAppStateApi();\n  const currentPageName = currentView.name;\n\n  const handleQuerySelect = React.useCallback(\n    (selectedQueryId: NodeId) => {\n      appStateApi.openQueryTab(selectedQueryId);\n    },\n    [appStateApi],\n  );\n\n  const handleCreateClick = React.useCallback(\n    (event: React.MouseEvent) => {\n      event.stopPropagation();\n      setAnchorEl(event.currentTarget);\n    },\n    [setAnchorEl],\n  );\n\n  const handleDeleteNode = React.useCallback(\n    (selectedQueryId: NodeId) => {\n      const selectedQueryTabIndex = currentView.queryPanel?.queryTabs?.findIndex(\n        (tab) => tab.meta?.id === selectedQueryId,\n      );\n\n      appStateApi.closeQueryTab(selectedQueryId, selectedQueryTabIndex, true);\n    },\n    [appStateApi, currentView],\n  );\n\n  const existingNames = React.useMemo(() => {\n    if (!currentPageName) {\n      return undefined;\n    }\n    const currentPageNode = appDom.getPageByName(dom, currentPageName);\n    if (!currentPageNode) {\n      return undefined;\n    }\n    return appDom.getExistingNamesForChildren(dom, currentPageNode);\n  }, [currentPageName, dom]);\n\n  const handleDuplicateNode = React.useCallback(\n    (nodeId: NodeId) => {\n      const node = appDom.getNode(dom, nodeId, 'query');\n      invariant(\n        currentPageName,\n        'handleDuplicateNode should only be used for queries, which should always belong to a page',\n      );\n      const currentPageNode = appDom.getPageByName(dom, currentPageName);\n\n      const newName = appDom.proposeName(node.name, existingNames);\n      const copy = appDom.createNode(dom, 'query', { ...node, name: newName });\n      if (!currentPageNode) {\n        return;\n      }\n      appStateApi.update((draft) => appDom.addNode(draft, copy, currentPageNode, 'queries'), {\n        kind: 'page',\n        name: currentPageName,\n        view: { kind: 'query', nodeId: copy.id },\n      });\n    },\n    [dom, currentPageName, existingNames, appStateApi],\n  );\n\n  const validateName = React.useCallback(\n    (queryName: string) => {\n      if (!existingNames) {\n        return {\n          isValid: true,\n        };\n      }\n\n      const validationErrorMessage = appDom.validateNodeName(queryName, existingNames, 'query');\n      return {\n        isValid: !validationErrorMessage,\n        ...(validationErrorMessage ? { errorMessage: validationErrorMessage } : {}),\n      };\n    },\n    [existingNames],\n  );\n\n  const handleRenameNode = React.useCallback(\n    (nodeId: NodeId, updatedName: string) => {\n      const node = appDom.getNode(dom, nodeId, 'query');\n      appStateApi.update((draft) => appDom.setNodeName(draft, node, updatedName), {\n        ...currentView,\n        queryPanel: {\n          ...currentView.queryPanel,\n          queryTabs: currentView.queryPanel?.queryTabs?.map((tab) => {\n            if (tab?.meta?.id === nodeId && tab.draft && tab.saved) {\n              const updatedNode = { ...tab.draft, name: updatedName };\n              return {\n                ...tab,\n                meta: {\n                  ...tab.meta,\n                  name: updatedName,\n                },\n                draft: updatedNode,\n                saved: updatedNode,\n              };\n            }\n            return tab;\n          }),\n        },\n      });\n    },\n    [dom, appStateApi, currentView],\n  );\n\n  return (\n    <Stack data-testid={`${nodeName}-explorer`} sx={{ height: '100%', width: '100%' }}>\n      <ExplorerHeader\n        headerIcon={<QueryIcon mode={nodeName} />}\n        headerText={headerText}\n        onCreate={handleCreateClick}\n        createLabelText={`Create new ${nodeName}`}\n      />\n      <SimpleTreeView\n        aria-label={`${nodeName} explorer`}\n        defaultExpandedItems={[`:queries`]}\n        selectedItems={\n          currentView.kind === 'page' && currentView.view?.kind === 'query'\n            ? currentView.view.nodeId\n            : ''\n        }\n        sx={{\n          flexGrow: 1,\n          maxWidth: 400,\n          overflowY: 'auto',\n          scrollbarGutter: 'stable',\n        }}\n      >\n        {nodes.map((node) => (\n          <DataTreeItem\n            key={node.id}\n            itemId={node.id}\n            toolpadNodeId={node.id}\n            aria-level={1}\n            aria-label={node.name}\n            labelText={node.name}\n            labelTextSx={{ fontSize: 13 }}\n            labelIconId={node.attributes?.dataSource}\n            onDuplicateNode={handleDuplicateNode}\n            onDeleteNode={handleDeleteNode}\n            onSelectNode={handleQuerySelect}\n            onRenameNode={handleRenameNode}\n            validateItemName={validateName}\n          />\n        ))}\n      </SimpleTreeView>\n    </Stack>\n  );\n}\n\nexport function QueriesExplorer() {\n  const { dom, currentView } = useAppState();\n  const appStateApi = useAppStateApi();\n  const currentPageName = currentView.name;\n  const queryNodes = React.useMemo(() => {\n    if (!currentPageName) {\n      return [];\n    }\n    if (currentPageName) {\n      const currentPageNode = appDom.getPageByName(dom, currentPageName);\n      if (currentPageNode) {\n        return appDom.getChildNodes(dom, currentPageNode).queries ?? [];\n      }\n    }\n    return [];\n  }, [currentPageName, dom]);\n\n  const queries = React.useMemo(() => {\n    return queryNodes.filter(\n      (query) => query.attributes?.mode === 'query' || !query.attributes?.mode,\n    );\n  }, [queryNodes]);\n\n  const [anchorEl, setAnchorEl] = React.useState<Element | null>(null);\n  const createPopoverOpen = Boolean(anchorEl);\n  const handleCreateClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleCreateNode = React.useCallback(\n    (dataSourceId: string) => () => {\n      const dataSource = dataSources[dataSourceId];\n      invariant(dataSource, `Selected non-existing dataSource \"${dataSourceId}\"`);\n      invariant(\n        currentPageName,\n        'handleCreateNode should only be used for queries, which should always belong to a page',\n      );\n\n      appStateApi.createQueryTab(dataSource, dataSourceId, 'query');\n      setAnchorEl(null);\n    },\n    [currentPageName, appStateApi],\n  );\n\n  return (\n    <React.Fragment>\n      <Explorer nodes={queries} setAnchorEl={setAnchorEl} headerText=\"Queries\" nodeName=\"query\" />\n      <CreatePopover\n        anchorEl={anchorEl}\n        createPopoverOpen={createPopoverOpen}\n        handleCreateNode={handleCreateNode}\n        handleCreateClose={handleCreateClose}\n        createMode={'query'}\n      />\n    </React.Fragment>\n  );\n}\n\nexport function ActionsExplorer() {\n  const { dom, currentView } = useAppState();\n  const appStateApi = useAppStateApi();\n  const currentPageName = currentView.name;\n  const queryNodes = React.useMemo(() => {\n    if (!currentPageName) {\n      return [];\n    }\n    if (currentPageName) {\n      const currentPageNode = appDom.getPageByName(dom, currentPageName);\n      if (currentPageNode) {\n        return appDom.getChildNodes(dom, currentPageNode).queries ?? [];\n      }\n    }\n    return [];\n  }, [currentPageName, dom]);\n\n  const actions = React.useMemo(() => {\n    return queryNodes.filter((query) => query.attributes?.mode === 'mutation');\n  }, [queryNodes]);\n\n  const [anchorEl, setAnchorEl] = React.useState<Element | null>(null);\n  const createPopoverOpen = Boolean(anchorEl);\n  const handleCreateClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleCreateNode = React.useCallback(\n    (dataSourceId: string) => () => {\n      const dataSource = dataSources[dataSourceId];\n      invariant(dataSource, `Selected non-existing dataSource \"${dataSourceId}\"`);\n      invariant(\n        currentPageName,\n        'handleCreateNode should only be used for queries, which should always belong to a page',\n      );\n\n      appStateApi.createQueryTab(dataSource, dataSourceId, 'mutation');\n      setAnchorEl(null);\n    },\n    [currentPageName, appStateApi],\n  );\n\n  return (\n    <React.Fragment>\n      <Explorer nodes={actions} setAnchorEl={setAnchorEl} headerText=\"Actions\" nodeName=\"action\" />\n      <CreatePopover\n        anchorEl={anchorEl}\n        createPopoverOpen={createPopoverOpen}\n        handleCreateNode={handleCreateNode}\n        handleCreateClose={handleCreateClose}\n        createMode={'mutation'}\n      />\n    </React.Fragment>\n  );\n}\n","import {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Skeleton,\n} from '@mui/material';\nimport * as React from 'react';\nimport type { EditorProps } from '../../types';\nimport useShortcut from '../../utils/useShortcut';\nimport lazyComponent from '../../utils/lazyComponent';\nimport PropertyControl from '../../components/PropertyControl';\n\nconst MarkdownEditor = lazyComponent(() => import('../../components/MarkdownEditor'), {\n  noSsr: true,\n  fallback: <Skeleton variant=\"rectangular\" height=\"100%\" />,\n});\n\nfunction MarkdownPropEditor({ propType, value, onChange }: EditorProps<any>) {\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n\n  useShortcut({ key: 's', metaKey: true, disabled: !dialogOpen }, () => {\n    setDialogOpen(false);\n  });\n\n  return (\n    <React.Fragment>\n      <PropertyControl propType={propType}>\n        <Button variant=\"outlined\" color=\"inherit\" fullWidth onClick={() => setDialogOpen(true)}>\n          Edit Markdown\n        </Button>\n      </PropertyControl>\n      <Dialog fullWidth open={dialogOpen} onClose={() => setDialogOpen(false)}>\n        <DialogTitle>Edit Markdown</DialogTitle>\n        <DialogContent>\n          <Box sx={{ height: 200 }}>\n            <MarkdownEditor value={value} onChange={(newValue = '') => onChange(newValue)} />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"inherit\" variant=\"text\" onClick={() => setDialogOpen(false)}>\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nexport default MarkdownPropEditor;\n","import {\n  Box,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  IconButton,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Popover,\n  Stack,\n  TextField,\n  TextFieldProps,\n  TextFieldVariants,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport * as React from 'react';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport {\n  inferColumns,\n  SerializableGridColumn,\n  SerializableGridColumns,\n} from '@toolpad/studio-components';\nimport { generateUniqueString } from '@toolpad/utils/strings';\nimport { NumberFormatEditor } from '@toolpad/studio-runtime/numberFormat';\nimport { DateFormatEditor } from '@toolpad/studio-runtime/dateFormat';\nimport { useAppHost } from '@toolpad/studio-runtime';\nimport type { EditorProps } from '../../types';\nimport { ToolpadComponentDefinition, useToolpadComponents } from '../AppEditor/toolpadComponents';\nimport PropertyControl from '../../components/PropertyControl';\n// TODO: this import suggests leaky abstraction\nimport { usePageEditorState } from '../AppEditor/PageEditor/PageEditorProvider';\nimport { UpgradeChip } from '../AppEditor/UpgradeNotification';\nimport ToggleButtonSelect from '../../components/ToggleButtonSelect';\n\ntype GridAlignment = SerializableGridColumn['align'];\n\nconst COLUMN_TYPES: string[] = [\n  'string',\n  'number',\n  'date',\n  'dateTime',\n  'boolean',\n  'link',\n  'image',\n  'codeComponent',\n];\nconst ALIGNMENTS: GridAlignment[] = ['left', 'right', 'center'];\n\ntype ImmediateInputProps<V extends TextFieldVariants = TextFieldVariants> = TextFieldProps<V> & {\n  validate?: (input: string) => string | null;\n};\n\ninterface ImmediateInputState {\n  input: string;\n  error: string | null;\n}\n\nfunction useImmediateTextField<V extends TextFieldVariants = TextFieldVariants>(\n  props: ImmediateInputProps<V>,\n): TextFieldProps<V> {\n  const { value, onChange, error, helperText, required, onBlur, validate } = props;\n  const createInputState = React.useCallback(\n    (rawInput: unknown): ImmediateInputState => {\n      const input = String(rawInput);\n      let inputError = null;\n      if (required && !input) {\n        inputError = 'Input required';\n      } else if (validate) {\n        inputError = validate(input);\n      }\n      return { input, error: inputError };\n    },\n    [validate, required],\n  );\n  const [state, setState] = React.useState<ImmediateInputState>(createInputState(value));\n  React.useEffect(() => {\n    setState(createInputState(value));\n  }, [value, createInputState]);\n\n  return {\n    ...props,\n    value: state.input,\n    error: !!state.error || error,\n    helperText: state.error || helperText,\n    required,\n    onBlur: (event) => {\n      if (state.input !== value) {\n        setState(createInputState(value));\n      }\n      onBlur?.(event);\n    },\n    onChange: (event) => {\n      const newState = createInputState(event.target.value);\n      setState(newState);\n      if (!newState.error) {\n        onChange?.(event);\n      }\n    },\n  };\n}\n\ninterface GridColumnEditorProps {\n  value: SerializableGridColumn;\n  onChange: (newValue: SerializableGridColumn) => void;\n  disabled?: boolean;\n}\n\nfunction GridColumnEditor({\n  disabled,\n  value: editedColumn,\n  onChange: handleColumnChange,\n}: GridColumnEditorProps) {\n  const toolpadComponents = useToolpadComponents();\n  const codeComponents: ToolpadComponentDefinition[] = React.useMemo(() => {\n    return Object.values(toolpadComponents)\n      .filter(Boolean)\n      .filter((definition) => !definition.builtIn);\n  }, [toolpadComponents]);\n\n  const fieldInput = useImmediateTextField({\n    label: 'field',\n    disabled,\n    required: true,\n    value: editedColumn.field,\n    onChange: (event) => {\n      handleColumnChange({ ...editedColumn, field: event.target.value });\n    },\n  });\n\n  const appHost = useAppHost();\n  const isProPlan = appHost.plan === 'pro';\n\n  return (\n    <Stack gap={1} py={1}>\n      <TextField {...fieldInput} />\n\n      <TextField\n        label=\"header\"\n        value={editedColumn.headerName || ''}\n        disabled={disabled}\n        onChange={(event) =>\n          handleColumnChange({\n            ...editedColumn,\n            headerName: event.target.value ? event.target.value : undefined,\n          })\n        }\n      />\n\n      <TextField\n        select\n        fullWidth\n        label=\"align\"\n        value={editedColumn.align ?? ''}\n        disabled={disabled}\n        onChange={(event) =>\n          handleColumnChange({\n            ...editedColumn,\n            align: (event.target.value as GridAlignment) || undefined,\n          })\n        }\n      >\n        {ALIGNMENTS.map((alignment) => (\n          <MenuItem key={alignment} value={alignment}>\n            {alignment}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      <TextField\n        label=\"width\"\n        type=\"number\"\n        value={editedColumn.width}\n        disabled={disabled}\n        onChange={(event) =>\n          handleColumnChange({ ...editedColumn, width: Number(event.target.value) })\n        }\n      />\n\n      <TextField\n        select\n        fullWidth\n        label=\"type\"\n        value={editedColumn.type ?? ''}\n        disabled={disabled}\n        onChange={(event) =>\n          handleColumnChange({\n            ...editedColumn,\n            type: event.target.value,\n            numberFormat: undefined,\n          })\n        }\n      >\n        {COLUMN_TYPES.map((type) => (\n          <MenuItem key={type} value={type}>\n            {type}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      <Box sx={{ ml: 1, pl: 1, borderLeft: 1, borderColor: 'divider' }}>\n        {editedColumn.type === 'number' ? (\n          <NumberFormatEditor\n            disabled={disabled}\n            value={editedColumn.numberFormat}\n            onChange={(numberFormat) => handleColumnChange({ ...editedColumn, numberFormat })}\n          />\n        ) : null}\n\n        {editedColumn.type === 'date' ? (\n          <DateFormatEditor\n            disabled={disabled}\n            disableTimeFormat\n            value={editedColumn.dateFormat}\n            onChange={(dateFormat) => {\n              handleColumnChange({ ...editedColumn, dateFormat });\n            }}\n          />\n        ) : null}\n\n        {editedColumn.type === 'dateTime' ? (\n          <DateFormatEditor\n            disabled={disabled}\n            value={editedColumn.dateTimeFormat}\n            onChange={(dateTimeFormat) => {\n              handleColumnChange({ ...editedColumn, dateTimeFormat });\n            }}\n          />\n        ) : null}\n\n        {editedColumn.type === 'codeComponent' ? (\n          <TextField\n            select\n            required\n            fullWidth\n            label=\"Custom component\"\n            value={editedColumn.codeComponent ?? ''}\n            disabled={disabled}\n            error={!editedColumn.codeComponent}\n            helperText={editedColumn.codeComponent ? undefined : 'Please select a component'}\n            onChange={(event) =>\n              handleColumnChange({\n                ...editedColumn,\n                codeComponent: event.target.value,\n              })\n            }\n          >\n            {codeComponents.map(({ displayName }) => (\n              <MenuItem key={displayName} value={displayName}>\n                {displayName}\n              </MenuItem>\n            ))}\n          </TextField>\n        ) : null}\n      </Box>\n\n      <Tooltip title=\"Initial visibility of this column.\">\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={editedColumn.visible ?? true}\n              disabled={disabled}\n              onChange={(event) =>\n                handleColumnChange({\n                  ...editedColumn,\n                  visible: event.target.checked,\n                })\n              }\n            />\n          }\n          label=\"Visible\"\n        />\n      </Tooltip>\n\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={editedColumn.sortable ?? true}\n            disabled={disabled}\n            onChange={(event) =>\n              handleColumnChange({\n                ...editedColumn,\n                sortable: event.target.checked,\n              })\n            }\n          />\n        }\n        label=\"Sortable\"\n      />\n\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={editedColumn.filterable ?? true}\n            disabled={disabled}\n            onChange={(event) =>\n              handleColumnChange({\n                ...editedColumn,\n                filterable: event.target.checked,\n              })\n            }\n          />\n        }\n        label=\"Filterable\"\n      />\n\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={editedColumn.editable ?? true}\n            disabled={disabled}\n            onChange={(event) =>\n              handleColumnChange({\n                ...editedColumn,\n                editable: event.target.checked,\n              })\n            }\n          />\n        }\n        label=\"Editable\"\n      />\n\n      {isProPlan ? (\n        <React.Fragment>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={editedColumn.groupable ?? true}\n                disabled={disabled}\n                onChange={(event) =>\n                  handleColumnChange({\n                    ...editedColumn,\n                    groupable: event.target.checked,\n                  })\n                }\n              />\n            }\n            label=\"Groupable\"\n          />\n\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={editedColumn.aggregable ?? true}\n                disabled={disabled}\n                onChange={(event) =>\n                  handleColumnChange({\n                    ...editedColumn,\n                    aggregable: event.target.checked,\n                  })\n                }\n              />\n            }\n            label=\"Aggregable\"\n          />\n\n          <ToggleButtonSelect\n            options={['left', 'center', 'right']}\n            fullWidth\n            label=\"Pinned\"\n            value={editedColumn.pin ?? 'center'}\n            onChange={(pin) =>\n              handleColumnChange({ ...editedColumn, pin: pin === 'center' ? undefined : pin })\n            }\n          />\n        </React.Fragment>\n      ) : (\n        <Typography variant=\"body2\">\n          Grouping/aggregation/pinning\n          <UpgradeChip\n            sx={{ ml: 1 }}\n            url=\"https://mui.com/toolpad/studio/components/data-grid/#grouping\"\n          />\n        </Typography>\n      )}\n    </Stack>\n  );\n}\n\nfunction GridColumnsPropEditor({\n  propType,\n  label,\n  nodeId,\n  value = [],\n  onChange,\n  disabled,\n}: EditorProps<SerializableGridColumns>) {\n  const { nodeData } = usePageEditorState();\n  const [editedIndex, setEditedIndex] = React.useState<number | null>(null);\n\n  const editedColumn = typeof editedIndex === 'number' ? value[editedIndex] : null;\n\n  const [menuAnchorEl, setMenuAnchorEl] = React.useState<null | HTMLElement>(null);\n  const menuOpen = Boolean(menuAnchorEl);\n  const handleMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setMenuAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setMenuAnchorEl(null);\n  };\n\n  const gridNodeData = nodeId && nodeData[nodeId];\n\n  const rawRows: unknown = gridNodeData && gridNodeData.rawRows;\n\n  const inferredColumns = React.useMemo(\n    () => inferColumns(Array.isArray(rawRows) ? rawRows : []),\n    [rawRows],\n  );\n\n  const columnSuggestions = React.useMemo(() => {\n    const existingFields = new Set(value.map(({ field }) => field));\n    return inferredColumns.filter((column) => !existingFields.has(column.field));\n  }, [inferredColumns, value]);\n\n  const handleCreateColumn = React.useCallback(\n    (suggestion: SerializableGridColumn) => () => {\n      const existingFields = new Set(value.map(({ field }) => field));\n      const newFieldName = generateUniqueString(suggestion.field, existingFields);\n      const newValue = [...value, { ...suggestion, field: newFieldName }];\n      onChange(newValue);\n      setEditedIndex(newValue.length - 1);\n      handleClose();\n    },\n    [value, onChange],\n  );\n\n  const handleColumnItemClick = React.useCallback(\n    (index: number) => () => {\n      setEditedIndex(index);\n    },\n    [],\n  );\n\n  const handleColumnChange = React.useCallback<React.Dispatch<SerializableGridColumn>>(\n    (newValue) => {\n      onChange(value.map((column, i) => (i === editedIndex ? newValue : column)));\n    },\n    [editedIndex, onChange, value],\n  );\n\n  const handleColumnDelete = React.useCallback(\n    (deletedIndex: number) => (event: React.MouseEvent) => {\n      event.stopPropagation();\n      onChange(value.filter((column, i) => i !== deletedIndex));\n    },\n    [onChange, value],\n  );\n\n  const handleRecreateColumns = React.useCallback(() => {\n    if (inferredColumns.length > 0) {\n      onChange(inferredColumns);\n    }\n  }, [inferredColumns, onChange]);\n\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n\n  const handlePopoverClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n  const open = Boolean(anchorEl);\n  const popoverIdValue = React.useId();\n  const popoverId = open ? popoverIdValue : undefined;\n\n  React.useEffect(() => {\n    if (open) {\n      setEditedIndex(null);\n    }\n  }, [open]);\n\n  return (\n    <React.Fragment>\n      <PropertyControl propType={propType}>\n        <Button aria-describedby={popoverId} onClick={handlePopoverClick}>\n          {label}\n        </Button>\n      </PropertyControl>\n      <Popover\n        id={popoverId}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handlePopoverClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left',\n        }}\n      >\n        <Box sx={{ minWidth: 300, p: 2 }} aria-label=\"Column editor\">\n          {editedColumn ? (\n            <React.Fragment>\n              <IconButton aria-label=\"Back\" onClick={() => setEditedIndex(null)}>\n                <ArrowBackIcon />\n              </IconButton>\n              <GridColumnEditor\n                value={editedColumn}\n                onChange={handleColumnChange}\n                disabled={disabled}\n              />\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <Tooltip describeChild title=\"Recreate columns\">\n                <span>\n                  <IconButton\n                    aria-label=\"Recreate columns\"\n                    onClick={handleRecreateColumns}\n                    disabled={inferredColumns.length <= 0}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </span>\n              </Tooltip>\n              <Tooltip title=\"Add column\">\n                <IconButton onClick={handleMenuClick} disabled={disabled}>\n                  <AddIcon />\n                </IconButton>\n              </Tooltip>\n              <Menu\n                id=\"new-column-menu\"\n                anchorEl={menuAnchorEl}\n                open={menuOpen}\n                onClose={handleClose}\n                MenuListProps={{\n                  'aria-labelledby': 'basic-button',\n                }}\n              >\n                {columnSuggestions.map((suggestion) => (\n                  <MenuItem key={suggestion.field} onClick={handleCreateColumn(suggestion)}>\n                    {suggestion.field}\n                  </MenuItem>\n                ))}\n                <MenuItem onClick={handleCreateColumn({ field: 'new' })}>New column</MenuItem>\n              </Menu>\n              <List>\n                {value.map((colDef, i) => {\n                  return (\n                    <ListItem\n                      key={colDef.field}\n                      disableGutters\n                      onClick={handleColumnItemClick(i)}\n                      secondaryAction={\n                        <IconButton\n                          aria-label=\"Remove column\"\n                          edge=\"end\"\n                          onClick={handleColumnDelete(i)}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      }\n                    >\n                      <ListItemButton>\n                        <ListItemText primary={colDef.headerName || colDef.field} />\n                      </ListItemButton>\n                    </ListItem>\n                  );\n                })}\n              </List>\n            </React.Fragment>\n          )}\n        </Box>\n      </Popover>\n    </React.Fragment>\n  );\n}\n\nexport default GridColumnsPropEditor;\n","import * as React from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport ToggleButton, { toggleButtonClasses } from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport { styled } from '@mui/material';\n\nconst PropControlToggleButtonGroup = styled(\n  ToggleButtonGroup,\n  {},\n)(({ fullWidth }) => ({\n  display: 'flex',\n  [`& .${toggleButtonClasses.root}`]: fullWidth\n    ? {\n        flex: 1,\n      }\n    : {},\n}));\n\nexport interface ToggleButtonSelectProps<T extends string = string> {\n  label?: string;\n  options?: (T | { value: T; label?: string })[];\n  value?: T;\n  onChange?: (value: T) => void;\n  disabled?: boolean;\n  fullWidth?: boolean;\n}\n\nfunction ToggleButtonSelect<T extends string = string>({\n  options,\n  label,\n  value,\n  onChange,\n  disabled,\n  fullWidth,\n}: ToggleButtonSelectProps<T>) {\n  const handleChange = React.useCallback(\n    (event: React.MouseEvent, newValue: T) => {\n      onChange?.(newValue);\n    },\n    [onChange],\n  );\n\n  return (\n    <FormControl>\n      <FormLabel>{label}</FormLabel>\n      <PropControlToggleButtonGroup\n        color=\"primary\"\n        value={value}\n        exclusive\n        onChange={handleChange}\n        aria-label=\"Platform\"\n        disabled={disabled}\n        fullWidth={fullWidth}\n      >\n        {options?.map((option) => {\n          const optionValue = typeof option === 'string' ? option : option.value;\n          const optionLabel = (typeof option === 'string' ? option : option.label) || optionValue;\n          return (\n            <ToggleButton key={optionValue} value={optionValue}>\n              {optionLabel}\n            </ToggleButton>\n          );\n        })}\n      </PropControlToggleButtonGroup>\n    </FormControl>\n  );\n}\n\nexport default ToggleButtonSelect;\n","import {\n  Box,\n  ToggleButton,\n  ToggleButtonGroup,\n  Typography,\n  styled,\n  toggleButtonClasses,\n} from '@mui/material';\nimport * as React from 'react';\nimport type { EditorProps } from '../../types';\nimport PropertyControl from '../../components/PropertyControl';\n\nconst PropControlToggleButtonGroup = styled(ToggleButtonGroup)({\n  display: 'flex',\n  [`& .${toggleButtonClasses.root}`]: {\n    flex: 1,\n  },\n});\n\nfunction SelectPropEditor({ label, propType, value, onChange, disabled }: EditorProps<string>) {\n  const items = propType.type === 'string' ? (propType.enum ?? []) : [];\n  const handleChange = React.useCallback(\n    (event: React.MouseEvent, newValue: string) => {\n      onChange(newValue || undefined);\n    },\n    [onChange],\n  );\n\n  const enumLabels: Record<string, string> =\n    propType.type === 'string' ? (propType.enumLabels ?? {}) : {};\n\n  return (\n    <PropertyControl propType={propType}>\n      <Box sx={{ my: 0.5 }}>\n        <Typography variant=\"body2\">{label}</Typography>\n        <PropControlToggleButtonGroup\n          color=\"primary\"\n          value={value}\n          exclusive\n          onChange={handleChange}\n          aria-label=\"Platform\"\n          disabled={disabled}\n        >\n          {items.map((item) => (\n            <ToggleButton key={item} value={item}>\n              {enumLabels[item] || item}\n            </ToggleButton>\n          ))}\n        </PropControlToggleButtonGroup>\n      </Box>\n    </PropertyControl>\n  );\n}\n\nexport default SelectPropEditor;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  Stack,\n  TextField,\n} from '@mui/material';\nimport * as React from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport type { EditorProps } from '../../types';\nimport PropertyControl from '../../components/PropertyControl';\n\ninterface SelectOption {\n  label?: string;\n  value: string;\n}\n\nfunction SelectOptionsPropEditor({\n  propType,\n  label,\n  value = [],\n  onChange,\n}: EditorProps<(string | SelectOption)[]>) {\n  const [editOptionsDialogOpen, setEditOptionsDialogOpen] = React.useState(false);\n  const [editingIndex, setEditingIndex] = React.useState<number | null>(null);\n  const [input, setInput] = React.useState<string>('');\n\n  const editingOption: SelectOption | null = React.useMemo(() => {\n    if (typeof editingIndex === 'number') {\n      const option: SelectOption | string = value[editingIndex];\n      if (typeof option === 'string') {\n        return {\n          value: option,\n          label: '',\n        };\n      }\n      return option;\n    }\n    return null;\n  }, [editingIndex, value]);\n\n  const handleOptionTextInput = React.useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        onChange([...value, input]);\n        setInput('');\n      }\n    },\n    [input, onChange, value],\n  );\n\n  const handleOptionDelete = React.useCallback(\n    (deletedIndex: number) => (event: React.MouseEvent) => {\n      event.stopPropagation();\n      onChange(value.filter((column, i) => i !== deletedIndex));\n    },\n    [onChange, value],\n  );\n\n  const handleDeleteAll = React.useCallback(() => {\n    onChange([]);\n  }, [onChange]);\n\n  const handleOptionItemClick = React.useCallback(\n    (index: number) => () => {\n      setEditingIndex(index);\n    },\n    [],\n  );\n\n  const handleOptionChange = React.useCallback(\n    (newOption: string | SelectOption) => {\n      if (typeof newOption === 'object') {\n        if (!newOption.label) {\n          newOption = newOption.value;\n        }\n      }\n      onChange(value.map((option, i) => (i === editingIndex ? newOption : option)));\n    },\n    [editingIndex, onChange, value],\n  );\n\n  const handleEditOptionsDialogClose = React.useCallback(() => {\n    setEditingIndex(null);\n    setEditOptionsDialogOpen(false);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <PropertyControl propType={propType}>\n        <Button\n          variant=\"outlined\"\n          color=\"inherit\"\n          fullWidth\n          onClick={() => {\n            setEditOptionsDialogOpen(true);\n          }}\n        >\n          {label}\n        </Button>\n      </PropertyControl>\n      <Dialog\n        fullWidth\n        open={editOptionsDialogOpen}\n        onClose={() => {\n          setEditOptionsDialogOpen(false);\n        }}\n      >\n        {editingOption ? (\n          <React.Fragment>\n            <DialogTitle>\n              <IconButton aria-label=\"Back\" onClick={() => setEditingIndex(null)}>\n                <ArrowBackIcon />\n              </IconButton>\n              Edit option &ldquo;{editingOption.value}&rdquo;\n            </DialogTitle>\n            <DialogContent>\n              <Stack gap={1} py={1}>\n                <TextField\n                  label=\"Value\"\n                  value={editingOption.value}\n                  onChange={(event) => {\n                    handleOptionChange({ ...editingOption, value: event.target.value });\n                  }}\n                />\n                <TextField\n                  label=\"Label\"\n                  value={editingOption.label}\n                  onChange={(event) => {\n                    handleOptionChange({ ...editingOption, label: event.target.value });\n                  }}\n                />\n              </Stack>\n            </DialogContent>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <DialogTitle>\n              Edit options\n              {value.length > 0 ? (\n                <Button\n                  aria-label=\"Delete all options\"\n                  variant=\"text\"\n                  color=\"inherit\"\n                  onClick={handleDeleteAll}\n                  sx={{\n                    position: 'absolute',\n                    right: 16,\n                    top: 16,\n                  }}\n                >\n                  Delete All\n                </Button>\n              ) : null}\n            </DialogTitle>\n            <DialogContent>\n              {value.length > 0 ? (\n                <List>\n                  {value.map((option, i) => {\n                    return (\n                      <ListItem\n                        key={i}\n                        disableGutters\n                        onClick={handleOptionItemClick(i)}\n                        secondaryAction={\n                          <IconButton\n                            aria-label=\"Delete option\"\n                            edge=\"end\"\n                            onClick={handleOptionDelete(i)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        }\n                      >\n                        <ListItemButton>\n                          <ListItemText\n                            primary={\n                              typeof option === 'string' ? option : (option as SelectOption).value\n                            }\n                            secondary={\n                              typeof option === 'object'\n                                ? `Label: \"${(option as SelectOption).label}\"`\n                                : null\n                            }\n                          />\n                        </ListItemButton>\n                      </ListItem>\n                    );\n                  })}\n                </List>\n              ) : null}\n              <TextField\n                fullWidth\n                sx={{ my: 1 }}\n                variant=\"outlined\"\n                value={input}\n                onChange={(event) => setInput(event.target.value)}\n                onKeyUp={handleOptionTextInput}\n                label={'Add option'}\n                helperText={\n                  <span>\n                    Press <kbd>Enter</kbd> or <kbd>Return</kbd> to add\n                  </span>\n                }\n              />\n            </DialogContent>\n          </React.Fragment>\n        )}\n        <DialogActions>\n          <Button color=\"inherit\" variant=\"text\" onClick={handleEditOptionsDialogClose}>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nexport default SelectOptionsPropEditor;\n","import * as React from 'react';\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  IconButton,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  MenuItem,\n  Popover,\n  Stack,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport { CHART_DATA_SERIES_KINDS, type ChartDataSeries } from '@toolpad/studio-components';\nimport { useBrowserJsRuntime } from '@toolpad/studio-runtime/jsBrowserRuntime';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport { BindableAttrValue } from '@toolpad/studio-runtime';\nimport ScatterPlotIcon from '@mui/icons-material/ScatterPlot';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport ShowChartIcon from '@mui/icons-material/ShowChart';\nimport LegendToggleIcon from '@mui/icons-material/LegendToggle';\nimport { evaluateBindable } from '@toolpad/studio-runtime/jsRuntime';\nimport { blueberryTwilightPalette } from '@mui/x-charts/colorPalettes';\nimport { updateArray, remove } from '@toolpad/utils/immutability';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport type { EditorProps } from '../../types';\nimport PropertyControl from '../../components/PropertyControl';\nimport { usePageEditorState } from '../AppEditor/PageEditor/PageEditorProvider';\nimport { useAppState, useDomApi } from '../AppState';\nimport BindableEditor from '../AppEditor/PageEditor/BindableEditor';\nimport { createToolpadAppTheme } from '../../runtime/AppThemeProvider';\nimport ColorPicker from '../../components/ColorPicker';\n\nconst CHART_KIND_OPTIONS: {\n  kind: (typeof CHART_DATA_SERIES_KINDS)[number];\n  icon: React.ComponentType;\n}[] = [\n  { kind: 'line', icon: ShowChartIcon },\n  { kind: 'bar', icon: BarChartIcon },\n  { kind: 'area', icon: LegendToggleIcon },\n  { kind: 'scatter', icon: ScatterPlotIcon },\n];\n\nfunction ChartDataPropEditor({\n  nodeId,\n  propType,\n  value = [],\n  onChange,\n}: EditorProps<ChartDataSeries[]>) {\n  const { dom } = useAppState();\n  const domApi = useDomApi();\n  const { pageState, bindings, globalScopeMeta } = usePageEditorState();\n  const jsBrowserRuntime = useBrowserJsRuntime();\n\n  const appTheme = React.useMemo(() => createToolpadAppTheme(dom), [dom]);\n\n  const defaultPalette = blueberryTwilightPalette(appTheme.palette.mode);\n\n  const [dataSeriesEditIndex, setDataSeriesEditIndex] = React.useState<number | null>(null);\n  const [popoverAnchorElement, setPopoverAnchorElement] = React.useState<HTMLElement | null>(null);\n\n  const handleAddDataSeries = React.useCallback(() => {\n    const newDataSeriesCount = value.length + 1;\n\n    const newDataSeriesLabel = `dataSeries${newDataSeriesCount}`;\n\n    onChange([\n      ...value,\n      {\n        label: newDataSeriesLabel,\n        kind: 'line',\n        data: [],\n        color: defaultPalette[(newDataSeriesCount - 1) % defaultPalette.length],\n      },\n    ]);\n  }, [defaultPalette, onChange, value]);\n\n  const previousDataSeriesCountRef = React.useRef(value.length);\n  React.useEffect(() => {\n    if (previousDataSeriesCountRef.current === 0 && value.length === 1) {\n      setDataSeriesEditIndex(0);\n      setPopoverAnchorElement(document.getElementById('data-series-button-1'));\n    }\n\n    previousDataSeriesCountRef.current = value.length;\n  }, [value.length]);\n\n  const handleDataSeriesClick = React.useCallback(\n    (index: number) => (event: React.MouseEvent<HTMLElement>) => {\n      setDataSeriesEditIndex(index);\n      setPopoverAnchorElement(event.currentTarget);\n    },\n    [],\n  );\n\n  const handleDuplicateDataSeries = React.useCallback(\n    (index: number) => () => {\n      const newDataSeriesCount = value.length + 1;\n\n      onChange([\n        ...value.slice(0, index + 1),\n        {\n          ...value[index],\n          color: defaultPalette[(newDataSeriesCount - 1) % defaultPalette.length],\n        },\n        ...value.slice(index + 1),\n      ]);\n    },\n    [defaultPalette, onChange, value],\n  );\n\n  const handleRemoveDataSeries = React.useCallback(\n    (index: number) => () => {\n      onChange(remove(value, index));\n    },\n    [onChange, value],\n  );\n\n  const popoverId = React.useId();\n\n  const isPopoverOpen = Boolean(popoverAnchorElement);\n\n  const handlePopoverClose = React.useCallback(() => {\n    setPopoverAnchorElement(null);\n  }, []);\n\n  const updateDataSeriesProp = React.useCallback(\n    (\n      draft: appDom.AppDom,\n      index: number,\n      newValue: unknown,\n      propName: string,\n      defaultValue: unknown = '',\n    ): appDom.AppDom => {\n      const draftNode = nodeId ? (appDom.getMaybeNode(draft, nodeId) as appDom.ElementNode) : null;\n\n      if (draftNode) {\n        const previousData = draftNode.props?.data || [];\n\n        return appDom.setNodeNamespacedProp(\n          draft,\n          draftNode,\n          'props',\n          'data',\n          updateArray(\n            previousData,\n            {\n              ...previousData[index],\n              [propName]: newValue || defaultValue,\n            },\n            index,\n          ),\n        );\n      }\n\n      return draft;\n    },\n    [nodeId],\n  );\n\n  const handleDataSeriesDataChange = React.useCallback(\n    (index: number) => (newValue: BindableAttrValue<ChartDataSeries['data']> | null) => {\n      const previousDataSeries = value[index];\n\n      domApi.update((draft) => {\n        draft = updateDataSeriesProp(draft, index, newValue, 'data', []);\n\n        if (!previousDataSeries.xKey || !previousDataSeries.yKey) {\n          const newDataResult = (evaluateBindable(jsBrowserRuntime, newValue, pageState).value ||\n            []) as NonNullable<ChartDataSeries['data']>;\n\n          let inferredXKey;\n\n          const keySuggestions = newDataResult\n            .flatMap((dataSeriesPoint) => Object.keys(dataSeriesPoint))\n            .filter((key, pointIndex, array) => array.indexOf(key) === pointIndex);\n\n          if (!previousDataSeries.xKey) {\n            inferredXKey =\n              keySuggestions.find((key) =>\n                newDataResult.every((dataSeriesPoint) => typeof dataSeriesPoint[key] === 'string'),\n              ) || keySuggestions[0];\n\n            draft = updateDataSeriesProp(draft, index, inferredXKey, 'xKey');\n          }\n\n          if (!previousDataSeries.yKey) {\n            const xKey = previousDataSeries.xKey || inferredXKey;\n            const inferredYKey =\n              xKey && xKey === keySuggestions[0] ? keySuggestions[1] : keySuggestions[0];\n\n            draft = updateDataSeriesProp(draft, index, inferredYKey, 'yKey');\n          }\n        }\n\n        return draft;\n      });\n    },\n    [domApi, jsBrowserRuntime, pageState, updateDataSeriesProp, value],\n  );\n\n  const handleDataSeriesTextInputPropChange = React.useCallback(\n    (index: number, propName: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue = event.target.value;\n      domApi.update((draft) => updateDataSeriesProp(draft, index, newValue, propName));\n    },\n    [domApi, updateDataSeriesProp],\n  );\n\n  const handleDataSeriesAutocompletePropChange = React.useCallback(\n    (index: number, propName: string) => (event: React.SyntheticEvent, newValue: string) => {\n      domApi.update((draft) => updateDataSeriesProp(draft, index, newValue, propName));\n    },\n    [domApi, updateDataSeriesProp],\n  );\n\n  const handleDataSeriesColorChange = React.useCallback(\n    (index: number) => (newValue: string | undefined) => {\n      domApi.update((draft) => updateDataSeriesProp(draft, index, newValue, 'color'));\n    },\n    [domApi, updateDataSeriesProp],\n  );\n\n  const dataSeriesKeySuggestions = React.useMemo(\n    () =>\n      value.map((dataSeries) => {\n        const dataResult = (evaluateBindable(jsBrowserRuntime, dataSeries.data, pageState).value ||\n          []) as NonNullable<ChartDataSeries['data']>;\n\n        return Array.isArray(dataResult)\n          ? dataResult\n              .flatMap((dataSeriesPoint) => Object.keys(dataSeriesPoint))\n              .filter((key, index, array) => array.indexOf(key) === index)\n          : [];\n      }),\n    [jsBrowserRuntime, pageState, value],\n  );\n\n  const editDataSeries = dataSeriesEditIndex !== null ? value[dataSeriesEditIndex] : null;\n\n  return (\n    <React.Fragment>\n      <PropertyControl propType={propType}>\n        <div>\n          <List sx={{ mb: 1 }}>\n            {value.map((dataSeries, index) => {\n              const { label } = dataSeries;\n\n              return (\n                <ListItem key={index} disableGutters>\n                  <ListItemButton\n                    id={`data-series-button-${index + 1}`}\n                    onClick={handleDataSeriesClick(index)}\n                    aria-describedby={popoverId}\n                  >\n                    <ListItemText\n                      primary={label}\n                      primaryTypographyProps={{\n                        style: { overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 166 },\n                      }}\n                    />\n                  </ListItemButton>\n                  <IconButton\n                    aria-label=\"Duplicate data series\"\n                    onClick={handleDuplicateDataSeries(index)}\n                  >\n                    <ContentCopyIcon />\n                  </IconButton>\n                  <IconButton\n                    aria-label=\"Delete data series\"\n                    onClick={handleRemoveDataSeries(index)}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItem>\n              );\n            })}\n          </List>\n          <Button\n            variant=\"outlined\"\n            startIcon={<AddIcon />}\n            fullWidth\n            onClick={handleAddDataSeries}\n          >\n            Add data series\n          </Button>\n        </div>\n      </PropertyControl>\n      <Popover\n        id={popoverId}\n        open={isPopoverOpen}\n        anchorEl={popoverAnchorElement}\n        onClose={handlePopoverClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n      >\n        {editDataSeries && dataSeriesEditIndex !== null ? (\n          <Box sx={{ minWidth: 300, p: 2 }}>\n            <Typography variant=\"body1\" sx={{ mb: 1 }}>\n              {editDataSeries.label}\n            </Typography>\n            <Stack gap={1} py={1}>\n              <TextField\n                label=\"label\"\n                value={editDataSeries?.label}\n                onChange={handleDataSeriesTextInputPropChange(dataSeriesEditIndex, 'label')}\n              />\n              <TextField\n                select\n                label=\"kind\"\n                value={editDataSeries?.kind}\n                onChange={handleDataSeriesTextInputPropChange(dataSeriesEditIndex, 'kind')}\n              >\n                {CHART_KIND_OPTIONS.map((option) => (\n                  <MenuItem key={option.kind} value={option.kind}>\n                    <Stack direction=\"row\" alignItems=\"center\">\n                      <option.icon />\n                      <ListItemText sx={{ ml: 1 }}>{option.kind}</ListItemText>\n                    </Stack>\n                  </MenuItem>\n                ))}\n              </TextField>\n              <BindableEditor\n                liveBinding={bindings[`${nodeId}.props.data[${dataSeriesEditIndex}].data`]}\n                globalScope={pageState}\n                globalScopeMeta={globalScopeMeta}\n                label=\"data\"\n                jsRuntime={jsBrowserRuntime}\n                propType={{ type: 'array' }}\n                value={editDataSeries?.data ?? null}\n                onChange={handleDataSeriesDataChange(dataSeriesEditIndex)}\n              />\n              <Autocomplete\n                freeSolo\n                options={dataSeriesKeySuggestions[dataSeriesEditIndex]}\n                value={editDataSeries?.xKey || ''}\n                onInputChange={handleDataSeriesAutocompletePropChange(dataSeriesEditIndex, 'xKey')}\n                renderInput={(params) => {\n                  const keyExists =\n                    !editDataSeries?.xKey ||\n                    dataSeriesKeySuggestions[dataSeriesEditIndex].includes(editDataSeries.xKey);\n\n                  return (\n                    <TextField\n                      {...params}\n                      label=\"xKey\"\n                      error={!keyExists}\n                      helperText={keyExists ? '' : 'Property not present in data'}\n                    />\n                  );\n                }}\n              />\n              <Autocomplete\n                freeSolo\n                options={dataSeriesKeySuggestions[dataSeriesEditIndex]}\n                value={editDataSeries?.yKey || ''}\n                onInputChange={handleDataSeriesAutocompletePropChange(dataSeriesEditIndex, 'yKey')}\n                renderInput={(params) => {\n                  const keyExists =\n                    !editDataSeries?.yKey ||\n                    dataSeriesKeySuggestions[dataSeriesEditIndex].includes(editDataSeries.yKey);\n\n                  return (\n                    <TextField\n                      {...params}\n                      label=\"yKey\"\n                      error={!keyExists}\n                      helperText={keyExists ? '' : 'Property not present in data'}\n                    />\n                  );\n                }}\n              />\n              <ColorPicker\n                label=\"color\"\n                value={editDataSeries?.color}\n                onChange={handleDataSeriesColorChange(dataSeriesEditIndex)}\n              />\n            </Stack>\n          </Box>\n        ) : null}\n      </Popover>\n    </React.Fragment>\n  );\n}\n\nexport default ChartDataPropEditor;\n","import { Box, IconButton, InputAdornment, Popover, TextField } from '@mui/material';\nimport * as React from 'react';\nimport ColorTool from './ColorTool';\n\ninterface ColorPickerIconButtonProps {\n  value?: string;\n  onChange?: (value?: string) => void;\n  label?: string;\n}\n\nexport function ColorPickerIconButton({ label, value, onChange }: ColorPickerIconButtonProps) {\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = React.useId();\n\n  return (\n    <React.Fragment>\n      <IconButton aria-label=\"select color\" edge=\"end\" onClick={handleClick}>\n        <Box\n          sx={{\n            background: value,\n            width: 24,\n            height: 24,\n            borderRadius: '50%',\n            boxShadow: 1,\n          }}\n        />\n      </IconButton>\n\n      <Popover\n        id={open ? id : undefined}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n      >\n        <ColorTool sx={{ m: 2 }} label={label} value={value} onChange={onChange} />\n      </Popover>\n    </React.Fragment>\n  );\n}\n\nexport interface ColorPickerProps {\n  value?: string;\n  onChange?: (value?: string) => void;\n  label?: string;\n}\n\nexport default function ColorPicker({ label, value, onChange }: ColorPickerProps) {\n  return (\n    <TextField\n      label={label}\n      value={value}\n      onChange={(event) => onChange?.(event.target.value)}\n      slotProps={{\n        input: {\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <ColorPickerIconButton value={value} onChange={onChange} label={label} />\n            </InputAdornment>\n          ),\n        },\n      }}\n    />\n  );\n}\n","import { PropValueType } from '@toolpad/studio-runtime';\nimport { GridColDef } from '@mui/x-data-grid-premium';\nimport * as React from 'react';\nimport { EditorProps } from '../../types';\nimport { usePageEditorState } from '../AppEditor/PageEditor/PageEditorProvider';\nimport SelectControl from './select';\n\nfunction ColumnSelect({ propType, nodeId, ...props }: EditorProps<string>) {\n  const { bindings } = usePageEditorState();\n  const { helperText } = propType;\n  const columnsValue = nodeId && bindings[`${nodeId}.props.columns`];\n  const definedColumns: GridColDef[] = columnsValue?.value as any;\n\n  const newPropType: PropValueType = React.useMemo(() => {\n    const columnNames = definedColumns?.map((column) => column.field);\n    return { type: 'string', enum: columnNames, helperText };\n  }, [helperText, definedColumns]);\n\n  return <SelectControl nodeId={nodeId} {...props} propType={newPropType} />;\n}\n\nexport default ColumnSelect;\n","import * as React from 'react';\nimport { ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport AlignHorizontalLeftIcon from '@mui/icons-material/AlignHorizontalLeft';\nimport AlignHorizontalCenterIcon from '@mui/icons-material/AlignHorizontalCenter';\nimport AlignHorizontalRightIcon from '@mui/icons-material/AlignHorizontalRight';\nimport type { EditorProps } from '../../types';\nimport PropertyControl from '../../components/PropertyControl';\n\nfunction HorizontalAlignPropEditor({\n  propType,\n  label,\n  value = 'start',\n  onChange,\n  disabled,\n}: EditorProps<string>) {\n  const handleHorizontalAlign = (\n    event: React.MouseEvent<HTMLElement>,\n    newHorizontalAlign: string | null,\n  ) => {\n    if (newHorizontalAlign) {\n      onChange(newHorizontalAlign);\n    }\n  };\n\n  return (\n    <PropertyControl propType={propType}>\n      <div>\n        {label ? <Typography variant=\"body2\">{label}:</Typography> : null}\n        <ToggleButtonGroup\n          exclusive\n          disabled={disabled}\n          value={value}\n          onChange={handleHorizontalAlign}\n          aria-label=\"HorizontalAlign\"\n        >\n          <ToggleButton value=\"start\" aria-label=\"start\">\n            <AlignHorizontalLeftIcon />\n          </ToggleButton>\n          <ToggleButton value=\"center\" aria-label=\"center\">\n            <AlignHorizontalCenterIcon />\n          </ToggleButton>\n          <ToggleButton value=\"end\" aria-label=\"end\">\n            <AlignHorizontalRightIcon />\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </div>\n    </PropertyControl>\n  );\n}\n\nexport default HorizontalAlignPropEditor;\n","import * as React from 'react';\nimport { ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport AlignverticalTopIcon from '@mui/icons-material/AlignVerticalTop';\nimport AlignVerticalCenterIcon from '@mui/icons-material/AlignVerticalCenter';\nimport AlignVerticalBottomIcon from '@mui/icons-material/AlignVerticalBottom';\nimport type { EditorProps } from '../../types';\nimport PropertyControl from '../../components/PropertyControl';\n\nfunction VerticalAlignPropEditor({\n  propType,\n  label,\n  value = 'start',\n  onChange,\n  disabled,\n}: EditorProps<string>) {\n  const VerticalAlign = (event: React.MouseEvent<HTMLElement>, newVerticalAlign: string | null) => {\n    if (newVerticalAlign) {\n      onChange(newVerticalAlign);\n    }\n  };\n\n  return (\n    <PropertyControl propType={propType}>\n      <div>\n        {label ? <Typography variant=\"body2\">{label}:</Typography> : null}\n        <ToggleButtonGroup\n          exclusive\n          disabled={disabled}\n          value={value}\n          onChange={VerticalAlign}\n          aria-label=\"VerticalAlign\"\n        >\n          <ToggleButton value=\"start\" aria-label=\"start\">\n            <AlignverticalTopIcon />\n          </ToggleButton>\n          <ToggleButton value=\"center\" aria-label=\"center\">\n            <AlignVerticalCenterIcon />\n          </ToggleButton>\n          <ToggleButton value=\"end\" aria-label=\"end\">\n            <AlignVerticalBottomIcon />\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </div>\n    </PropertyControl>\n  );\n}\n\nexport default VerticalAlignPropEditor;\n","import * as React from 'react';\nimport { NumberFormat, NumberFormatEditor } from '@toolpad/studio-runtime/numberFormat';\nimport type { EditorProps } from '../../types';\nimport PropertyControl from '../../components/PropertyControl';\n\nfunction NumberFormatPropEditor({\n  propType,\n  label,\n  value,\n  onChange,\n  disabled,\n}: EditorProps<NumberFormat>) {\n  return (\n    <PropertyControl propType={propType}>\n      <span>\n        <NumberFormatEditor label={label} disabled={disabled} value={value} onChange={onChange} />\n      </span>\n    </PropertyControl>\n  );\n}\n\nexport default NumberFormatPropEditor;\n","import * as React from 'react';\nimport { ColorScale, ColorScaleStop } from '@toolpad/studio-components';\nimport {\n  Box,\n  Stack,\n  Popover,\n  Button,\n  IconButton,\n  List,\n  ListItem,\n  Input,\n  ListItemProps,\n  Typography,\n  styled,\n} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { EditorProps } from '../../types';\nimport PropertyControl from '../../components/PropertyControl';\nimport { ColorPickerIconButton } from '../../components/ColorPicker';\nimport FlexFill from '../../components/FlexFill';\n\nconst ListItemRoot = styled(ListItem)({\n  gap: 1,\n});\n\nconst EMPTY_STOPS: ColorScaleStop[] = [];\n\ninterface ColorScaleListItemProps extends Omit<ListItemProps, 'onChange' | 'value'> {\n  valueLabel?: string;\n  value?: ColorScaleStop;\n  onChange?: (newValue: ColorScaleStop) => void;\n  onDelete?: (event: React.MouseEvent) => void;\n}\n\nfunction ColorScaleListItem({\n  valueLabel,\n  value,\n  onChange,\n  onDelete,\n  ...props\n}: ColorScaleListItemProps) {\n  return (\n    <ListItemRoot {...props}>\n      {valueLabel ? (\n        <Typography>{valueLabel}</Typography>\n      ) : (\n        <React.Fragment>\n          &gt;\n          <Input\n            type=\"number\"\n            value={value?.value ?? 0}\n            onChange={(event) => onChange?.({ ...value, value: Number(event.target.value) })}\n          />\n        </React.Fragment>\n      )}\n      <FlexFill />\n      <ColorPickerIconButton\n        value={value?.color}\n        onChange={(newValue: string | undefined) => {\n          if (newValue) {\n            onChange?.({ value: 0, ...value, color: newValue });\n          }\n        }}\n      />\n      <IconButton\n        onClick={onDelete}\n        size=\"small\"\n        sx={{ visibility: onDelete ? 'visible' : 'hidden' }}\n      >\n        <DeleteIcon fontSize=\"inherit\" />\n      </IconButton>\n    </ListItemRoot>\n  );\n}\n\nfunction getOrderedIndices(stops: ColorScaleStop[]): number[] {\n  return stops\n    .map((stop, index) => {\n      return { index, value: stop.value };\n    })\n    .sort((stop1, stop2) => stop1.value - stop2.value)\n    .map(({ index }) => index);\n}\n\ninterface ColorScaleEditorProps {\n  value?: ColorScale;\n  onChange: (value?: ColorScale) => void;\n}\n\nfunction ColorScaleEditor({ value, onChange }: ColorScaleEditorProps) {\n  const stops: ColorScaleStop[] = value?.stops ?? EMPTY_STOPS;\n\n  const stopsOrder: number[] = React.useMemo(() => getOrderedIndices(stops), [stops]);\n\n  const handleRemoveStop = (toRemoveIndex: number) => (event: React.MouseEvent) => {\n    event.stopPropagation();\n    const newStops = stops.filter((existingStop, index) => index !== toRemoveIndex);\n\n    onChange({\n      ...value,\n      stops: newStops,\n    });\n  };\n\n  const handleStopChange = (toChangeIndex: number) => (newValue: ColorScaleStop) => {\n    onChange({\n      ...value,\n      stops: stops.map((existingStop, index) =>\n        index === toChangeIndex ? newValue : existingStop,\n      ),\n    });\n  };\n\n  const handleAddStop = () => {\n    const lastStop: ColorScaleStop | undefined =\n      stops.length > 0 ? stops[stops.length - 1] : undefined;\n    const newStop = lastStop ? { ...lastStop, value: lastStop.value + 10 } : { value: 10 };\n    onChange({\n      ...value,\n      stops: [...stops, newStop],\n    });\n  };\n\n  return (\n    <Stack spacing={1} direction=\"row\">\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: 1,\n        }}\n      >\n        <Box sx={{ maxHeight: 300, overflow: 'auto' }}>\n          <List sx={{ width: 300 }}>\n            <ColorScaleListItem\n              valueLabel=\"Base color\"\n              value={value?.base ? { value: -Infinity, color: value.base } : undefined}\n              onChange={({ color }) => onChange({ ...value, base: color })}\n            />\n            {stopsOrder.map((index) => {\n              const stop = stops[index];\n              return (\n                <ColorScaleListItem\n                  key={index}\n                  value={stop}\n                  onChange={handleStopChange(index)}\n                  onDelete={handleRemoveStop(index)}\n                />\n              );\n            })}\n          </List>\n        </Box>\n        <Button startIcon={<AddIcon />} onClick={handleAddStop}>\n          Add Stop\n        </Button>\n      </Box>\n    </Stack>\n  );\n}\n\nexport type ColorScaleProps = EditorProps<ColorScale>;\n\nexport default function ColorScaleControl({ label, propType, value, onChange }: ColorScaleProps) {\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n\n  const handlePopoverClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n  const open = Boolean(anchorEl);\n  const popoverIdValue = React.useId();\n  const popoverId = open ? popoverIdValue : undefined;\n\n  return (\n    <React.Fragment>\n      <PropertyControl propType={propType}>\n        <Button aria-describedby={popoverId} onClick={handlePopoverClick}>\n          {label}\n        </Button>\n      </PropertyControl>\n      <Popover\n        id={popoverId}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handlePopoverClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left',\n        }}\n      >\n        <Box sx={{ minWidth: 300, p: 1 }}>\n          <ColorScaleEditor\n            value={value}\n            onChange={(newValue) => {\n              onChange(newValue);\n            }}\n          />\n        </Box>\n      </Popover>\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\nimport {\n  Autocomplete,\n  TextField,\n  styled,\n  autocompleteClasses,\n  createFilterOptions,\n  DialogContentText,\n  DialogContent,\n  DialogTitle,\n  Dialog,\n  DialogActions,\n  Button,\n  Box,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  FormHelperText,\n  Stack,\n} from '@mui/material';\nimport { errorFrom } from '@toolpad/utils/errors';\nimport AddIcon from '@mui/icons-material/Add';\nimport { useMutation } from '@tanstack/react-query';\nimport { LoadingButton } from '@mui/lab';\nimport { generateUniqueString } from '@toolpad/utils/strings';\nimport { PaginationMode } from '@toolpad/studio-runtime';\nimport { EditorProps } from '../../types';\nimport { useProjectApi } from '../../projectApi';\nimport type {\n  DataProviderIntrospectionResult,\n  FileIntrospectionResult,\n} from '../../server/functionsTypesWorker';\nimport OpenCodeEditorButton from '../OpenCodeEditor';\nimport type { CreateDataProviderOptions } from '../../server/FunctionsManager';\n\nconst PAGINATION_DOCUMENTATION_URL =\n  'https://mui.com/toolpad/studio/concepts/data-providers/#pagination';\n\nfunction useFunctionsIntrospectQuery() {\n  const projectApi = useProjectApi();\n  return projectApi.useQuery('introspect', []);\n}\n\nfunction handleInputFocus(event: React.FocusEvent<HTMLInputElement>) {\n  event.target.select();\n}\n\ntype DataProviderSelectorOption =\n  | {\n      kind: 'option';\n      file: FileIntrospectionResult;\n      dataProvider: DataProviderIntrospectionResult;\n      displayName: string;\n    }\n  | {\n      kind: 'create';\n      inputValue: string;\n    };\n\nconst filter = createFilterOptions<DataProviderSelectorOption>();\n\nconst classes = {\n  editButton: 'DataProviderSelector_editButton',\n};\n\nconst DataProviderSelectorRoot = styled('div')({\n  [`& .${classes.editButton}`]: {\n    visibility: 'hidden',\n  },\n\n  [`&:hover .${classes.editButton}, & .${autocompleteClasses.focused} .${classes.editButton}`]: {\n    visibility: 'visible',\n  },\n});\n\ninterface CreateNewDataProviderDialogProps {\n  open: boolean;\n  onClose: () => void;\n  onCommit: (newName: string) => void;\n  existingNames: Set<string>;\n  initialName: string;\n}\n\nfunction CreateNewDataProviderDialog({\n  open,\n  onClose,\n  onCommit,\n  existingNames,\n  initialName,\n}: CreateNewDataProviderDialogProps) {\n  const projectApi = useProjectApi();\n  const [newName, setNewName] = React.useState(initialName);\n  React.useEffect(() => {\n    if (open) {\n      setNewName(initialName);\n    }\n  }, [open, initialName]);\n\n  const [options, setOptions] = React.useState<CreateDataProviderOptions>({\n    paginationMode: 'index',\n  });\n\n  const createProviderMutation = useMutation({\n    mutationKey: [newName, options],\n    mutationFn: () => projectApi.methods.createDataProvider(newName, options),\n    onSuccess: () => {\n      onCommit(newName);\n      onClose();\n    },\n  });\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    createProviderMutation.mutate();\n  };\n\n  const nameExists = existingNames.has(newName);\n\n  const errorMessage = React.useMemo(() => {\n    if (nameExists) {\n      return `Provider \"${newName}\" already exists`;\n    }\n    if (createProviderMutation.error) {\n      return errorFrom(createProviderMutation.error).message;\n    }\n    return null;\n  }, [nameExists, createProviderMutation.error, newName]);\n\n  const paginationModeSelectId = React.useId();\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <form onSubmit={handleSubmit}>\n        <DialogTitle>Create a new data provider</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To create a new data provider please enter the name here.\n          </DialogContentText>\n          <Stack sx={{ gap: 2 }}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              fullWidth\n              value={newName}\n              onChange={(event) => setNewName(event.target.value)}\n              label=\"name\"\n              type=\"text\"\n              onFocus={handleInputFocus}\n              required\n              error={!!errorMessage}\n              helperText={errorMessage}\n            />\n\n            <FormControl>\n              <FormLabel id={paginationModeSelectId}>Pagination mode</FormLabel>\n              <RadioGroup\n                row\n                aria-labelledby={paginationModeSelectId}\n                value={options.paginationMode}\n                onChange={(event) =>\n                  setOptions((existing) => ({\n                    ...existing,\n                    paginationMode: event.target.value as PaginationMode,\n                  }))\n                }\n              >\n                <FormControlLabel value=\"index\" control={<Radio />} label=\"Index based\" />\n                <FormControlLabel value=\"cursor\" control={<Radio />} label=\"Cursor based\" />\n              </RadioGroup>\n              <FormHelperText>\n                How is your backend data paginated? By index, or by cursor? Find more about\n                pagination modes in the{' '}\n                <a href={PAGINATION_DOCUMENTATION_URL} target=\"_blank\" rel=\"noopener\">\n                  documentation\n                </a>\n                .\n              </FormHelperText>\n            </FormControl>\n          </Stack>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose}>Cancel</Button>\n          <LoadingButton\n            type=\"submit\"\n            disabled={!newName || !!errorMessage}\n            loading={createProviderMutation.isPending}\n          >\n            Create\n          </LoadingButton>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n\nfunction getProviderNameFromFile(file: FileIntrospectionResult): string {\n  return file.name.replace(/\\.[^.]+$/, '');\n}\n\nfunction DataProviderSelector({ value, onChange }: EditorProps<string>) {\n  const { data: introspection, isLoading, error } = useFunctionsIntrospectQuery();\n\n  const options = React.useMemo<DataProviderSelectorOption[]>(() => {\n    return (\n      introspection?.files.flatMap((file) =>\n        file.dataProviders\n          ?.filter((dataProvider) => dataProvider.name === 'default')\n          .map((dataProvider) => ({\n            kind: 'option',\n            file,\n            dataProvider,\n            displayName: getProviderNameFromFile(file),\n          })),\n      ) ?? []\n    );\n  }, [introspection]);\n\n  const [fileName = null, providerName = null] = value ? value.split(':') : [];\n\n  const autocompleteValue = React.useMemo(() => {\n    return (\n      options.find(\n        (option) =>\n          option.kind === 'option' &&\n          option.file.name === fileName &&\n          option.dataProvider.name === providerName,\n      ) ?? null\n    );\n  }, [fileName, providerName, options]);\n\n  const errorMessage = error ? errorFrom(error).message : undefined;\n\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const handleClose = () => {\n    setDialogOpen(false);\n  };\n  const [dialogValue, setDialogValue] = React.useState('');\n\n  const existingNames = React.useMemo(\n    () => new Set(introspection?.files.map((file) => getProviderNameFromFile(file))),\n    [introspection],\n  );\n\n  const handleCreateNewDataProvider = React.useCallback((suggestion: string) => {\n    setDialogValue(suggestion);\n    setDialogOpen(true);\n  }, []);\n\n  return (\n    <DataProviderSelectorRoot>\n      <CreateNewDataProviderDialog\n        open={dialogOpen}\n        onClose={handleClose}\n        onCommit={(newName) => onChange(`${newName}.ts:default`)}\n        initialName={dialogValue}\n        existingNames={existingNames}\n      />\n\n      <Autocomplete\n        options={options}\n        getOptionLabel={(option) => {\n          if (typeof option === 'string' || option.kind === 'create') {\n            const inputValue = typeof option === 'string' ? option : option.inputValue;\n            return inputValue ? `Create data provider \"${inputValue}\"` : 'Create new data provider';\n          }\n          return option.displayName;\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Data Provider\"\n            placeholder=\"Click to create or select a data provider\"\n            error={!!errorMessage}\n            helperText={errorMessage}\n            slotProps={{\n              input: {\n                ...params.InputProps,\n                endAdornment: (\n                  <React.Fragment>\n                    {fileName ? (\n                      <OpenCodeEditorButton\n                        className={classes.editButton}\n                        filePath={fileName}\n                        fileType=\"resource\"\n                        iconButton\n                      />\n                    ) : null}\n                    {params.InputProps.endAdornment}\n                  </React.Fragment>\n                ),\n              },\n\n              inputLabel: {\n                shrink: true,\n              },\n            }}\n          />\n        )}\n        filterOptions={(unfilteredOptions, params) => {\n          const filtered = filter(unfilteredOptions, params);\n\n          if (!existingNames.has(params.inputValue)) {\n            filtered.push({\n              kind: 'create',\n              inputValue: params.inputValue,\n            });\n          }\n\n          return filtered;\n        }}\n        value={autocompleteValue}\n        loading={isLoading}\n        onChange={(event, newValue) => {\n          if (typeof newValue === 'string') {\n            handleCreateNewDataProvider(\n              newValue || generateUniqueString('dataProvider', existingNames),\n            );\n          } else if (newValue && newValue.kind === 'create') {\n            handleCreateNewDataProvider(\n              newValue.inputValue || generateUniqueString('dataProvider', existingNames),\n            );\n          } else {\n            onChange(newValue ? `${newValue.file.name}:${newValue.dataProvider.name}` : undefined);\n          }\n        }}\n        renderOption={(props, option, state, ownerState) => {\n          const icon = option.kind === 'create' ? <AddIcon /> : undefined;\n          return (\n            <li {...props}>\n              <Box sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center', gap: 1 }}>\n                {icon}\n                {ownerState.getOptionLabel(option)}\n              </Box>\n            </li>\n          );\n        }}\n        selectOnFocus\n        clearOnBlur\n        freeSolo\n        sx={{ flex: 1 }}\n      />\n    </DataProviderSelectorRoot>\n  );\n}\n\nexport default DataProviderSelector;\n","import { Grid, Typography, Button } from '@mui/material';\nimport * as React from 'react';\nimport useBoolean from '@toolpad/utils/hooks/useBoolean';\nimport CreatePageNodeDialog from './PagesExplorer/CreatePageNodeDialog';\n\nexport default function NoPageFound() {\n  const {\n    value: createPageDialogOpen,\n    setTrue: handleCreatePageDialogOpen,\n    setFalse: handleCreatepageDialogClose,\n  } = useBoolean(false);\n\n  return (\n    <Grid\n      container\n      sx={{ minHeight: '100%', m: 1 }}\n      spacing={1}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      direction=\"column\"\n    >\n      <Grid item>\n        <Typography variant=\"h6\">No pages in this app.</Typography>\n      </Grid>\n      <Grid item>\n        <Button variant=\"outlined\" color=\"inherit\" onClick={handleCreatePageDialogOpen}>\n          Create new\n        </Button>\n      </Grid>\n      <CreatePageNodeDialog open={!!createPageDialogOpen} onClose={handleCreatepageDialogClose} />\n    </Grid>\n  );\n}\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from '@mui/material';\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport DialogForm from '../../../components/DialogForm';\nimport { useAppStateApi, useAppState } from '../../AppState';\nimport { useNodeNameValidation } from './validation';\n\nconst DEFAULT_NAME = 'page';\n\nexport interface CreatePageDialogProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport default function CreatePageDialog({ open, onClose, ...props }: CreatePageDialogProps) {\n  const { dom } = useAppState();\n  const appStateApi = useAppStateApi();\n\n  const existingNames = React.useMemo(\n    () => appDom.getExistingNamesForChildren(dom, appDom.getApp(dom), 'pages'),\n    [dom],\n  );\n\n  const [name, setName] = React.useState(appDom.proposeName(DEFAULT_NAME, existingNames));\n\n  // Reset form\n  const handleReset = useEventCallback(() =>\n    setName(appDom.proposeName(DEFAULT_NAME, existingNames)),\n  );\n\n  React.useEffect(() => {\n    if (open) {\n      handleReset();\n    }\n  }, [open, handleReset]);\n\n  const inputErrorMsg = useNodeNameValidation(name, existingNames, 'page');\n  const isNameValid = !inputErrorMsg;\n  const isFormValid = isNameValid;\n\n  return (\n    <Dialog open={open} onClose={onClose} {...props}>\n      <DialogForm\n        autoComplete=\"off\"\n        onSubmit={(event) => {\n          invariant(isFormValid, 'Invalid form should not be submitted when submit is disabled');\n\n          event.preventDefault();\n          const newNode = appDom.createNode(dom, 'page', {\n            name,\n            attributes: {\n              title: name,\n              display: 'shell',\n              authorization: {\n                allowAll: true,\n              },\n            },\n          });\n          const appNode = appDom.getApp(dom);\n\n          appStateApi.update((draft) => appDom.addNode(draft, newNode, appNode, 'pages'), {\n            kind: 'page',\n            name: newNode.name,\n          });\n\n          onClose();\n        }}\n      >\n        <DialogTitle>Create a new Page</DialogTitle>\n        <DialogContent>\n          <TextField\n            sx={{ my: 1 }}\n            required\n            autoFocus\n            fullWidth\n            label=\"name\"\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n            error={!isNameValid}\n            helperText={inputErrorMsg}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"inherit\" variant=\"text\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button type=\"submit\" disabled={!isFormValid}>\n            Create\n          </Button>\n        </DialogActions>\n      </DialogForm>\n    </Dialog>\n  );\n}\n","import * as React from 'react';\nimport { PaletteMode, ScopedCssBaseline } from '@mui/material';\nimport { ThemeProvider as MuiThemeProvider, createTheme } from '@mui/material/styles';\nimport { deepmerge } from '@mui/utils';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { getDesignTokens, getMetaThemeColor, getThemedComponents } from './theme';\nimport useLocalStorageState from './utils/useLocalStorageState';\n\ninterface ThemeProviderProps {\n  children?: React.ReactNode;\n}\n\nexport type ThemeMode = PaletteMode | 'system';\n\nfunction usePreferredMode(): PaletteMode {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  return prefersDarkMode ? 'dark' : 'light';\n}\n\nexport function useThemeMode() {\n  const [themeMode, setThemeMode] = useLocalStorageState<ThemeMode>(\n    'toolpad-palette-mode',\n    'system',\n  );\n  return { themeMode, setThemeMode };\n}\n\nexport function usePaletteMode(): PaletteMode {\n  const preferredMode = usePreferredMode();\n  const { themeMode } = useThemeMode();\n  return themeMode === 'system' ? preferredMode : themeMode;\n}\n\nexport function ThemeProvider({ children }: ThemeProviderProps) {\n  const paletteMode = usePaletteMode();\n  const theme = React.useMemo(() => {\n    const brandingDesignTokens = getDesignTokens(paletteMode);\n    let nextTheme = createTheme({\n      ...brandingDesignTokens,\n      palette: {\n        ...brandingDesignTokens.palette,\n        mode: paletteMode,\n      },\n    });\n    nextTheme = deepmerge(nextTheme, getThemedComponents(nextTheme));\n\n    return nextTheme;\n  }, [paletteMode]);\n\n  React.useMemo(() => {\n    let meta: HTMLMetaElement | null = document.querySelector(\"meta[name='theme-color']\");\n    if (!meta) {\n      meta = document.createElement('meta');\n      meta.name = 'theme-color';\n      document.head.appendChild(meta);\n    }\n    meta.setAttribute('content', getMetaThemeColor(paletteMode));\n    meta.setAttribute('media', `(prefers-color-scheme: ${paletteMode})`);\n  }, [paletteMode]);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <ScopedCssBaseline enableColorScheme>{children}</ScopedCssBaseline>\n    </MuiThemeProvider>\n  );\n}\n","import * as React from 'react';\nimport { Stack, styled } from '@mui/material';\nimport Header from './Header';\nimport ToolpadNavigation from './ToolpadNavigation';\nimport { FEATURE_FLAG_GLOBAL_FUNCTIONS } from '../../constants';\n\nexport interface ToolpadShellProps {\n  navigation?: React.ReactNode;\n  actions?: React.ReactNode;\n  status?: React.ReactNode;\n  children?: React.ReactNode;\n}\n\nconst ToolpadShellRoot = styled('div')({\n  height: '100vh',\n  display: 'flex',\n  flexDirection: 'column',\n});\n\nconst ViewPort = styled('div')({\n  flex: 1,\n  width: '100%',\n  overflow: 'auto',\n  position: 'relative',\n});\n\nexport default function ToolpadShell({ children, ...props }: ToolpadShellProps) {\n  return (\n    <ToolpadShellRoot>\n      <Header {...props} />\n      <Stack direction=\"row\" sx={{ flex: 1 }}>\n        {FEATURE_FLAG_GLOBAL_FUNCTIONS ? <ToolpadNavigation /> : null}\n        <ViewPort>{children}</ViewPort>\n      </Stack>\n    </ToolpadShellRoot>\n  );\n}\n","import * as React from 'react';\nimport { AppBar, Box, Toolbar, Tooltip, Chip, Link, useTheme } from '@mui/material';\nimport UserFeedback from './UserFeedback';\nimport ThemeModeMenu from './ThemeModeMenu';\nimport { useThemeMode, ThemeMode } from '../../../ThemeContext';\nimport productIconDark from '../../../../public/product-icon-dark.svg';\nimport productIconLight from '../../../../public/product-icon-light.svg';\n\nexport interface HeaderProps {\n  navigation?: React.ReactNode;\n  actions?: React.ReactNode;\n  status?: React.ReactNode;\n  enableUserFeedback?: boolean;\n}\n\nfunction Header({ navigation, actions, status, enableUserFeedback = true }: HeaderProps) {\n  const theme = useTheme();\n  const { themeMode, setThemeMode } = useThemeMode();\n\n  const handleThemeModeChange = React.useCallback(\n    (event: React.MouseEvent, mode: ThemeMode) => {\n      setThemeMode(mode);\n    },\n    [setThemeMode],\n  );\n\n  const productIcon = theme.palette.mode === 'dark' ? productIconDark : productIconLight;\n\n  return (\n    <React.Fragment>\n      <AppBar\n        position=\"fixed\"\n        color=\"default\"\n        elevation={0}\n        sx={{ zIndex: theme.zIndex.drawer + 1, borderBottom: 1, borderColor: 'divider' }}\n      >\n        <Toolbar>\n          <Box\n            sx={{\n              flex: 1,\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'start',\n            }}\n          >\n            <Tooltip title=\"Home\">\n              <Link\n                color=\"inherit\"\n                aria-label=\"Home\"\n                href=\"/\"\n                underline=\"none\"\n                sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center', gap: 1 }}\n              >\n                <img src={productIcon} alt=\"Toolpad product icon\" width={25} height={25} />\n                <Box\n                  data-testid=\"brand\"\n                  sx={{\n                    color: 'primary.main',\n                    lineHeight: '21px',\n                    fontSize: '16px',\n                    fontWeight: 700,\n                    letterSpacing: 0,\n                    fontFamily: theme.typography.fontFamily,\n                  }}\n                >\n                  Toolpad Studio\n                </Box>\n              </Link>\n            </Tooltip>\n            <Chip sx={{ ml: 1 }} label=\"Beta\" size=\"small\" color=\"grey\" />\n            {navigation}\n          </Box>\n          <Box\n            sx={{\n              flex: 1,\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            {actions}\n          </Box>\n          <Box\n            sx={{\n              flex: 1,\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'end',\n              gap: 2,\n            }}\n          >\n            {status}\n            <ThemeModeMenu mode={themeMode} onChange={handleThemeModeChange} />\n            {enableUserFeedback ? <UserFeedback /> : null}\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </React.Fragment>\n  );\n}\n\nexport default Header;\n","import * as React from 'react';\nimport {\n  Chip,\n  Divider,\n  ListItemText,\n  IconButton,\n  Menu,\n  MenuItem,\n  Tooltip,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Box,\n} from '@mui/material';\nimport HelpOutlinedIcon from '@mui/icons-material/HelpOutlined';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport invariant from 'invariant';\nimport useBoolean from '@toolpad/utils/hooks/useBoolean';\nimport useMenu from '../../../../utils/useMenu';\nimport { DOCUMENTATION_URL, VERSION_CHECK_INTERVAL } from '../../../../constants';\nimport { useProjectApi } from '../../../../projectApi';\nimport type { PackageManager } from '../../../../server/versionInfo';\n\nconst REPORT_BUG_URL = 'https://github.com/mui/toolpad/issues/new/choose';\nconst FEATURE_REQUEST_URL = 'https://github.com/mui/toolpad/issues';\nconst SUPPORT_URL = 'https://mui.com/toolpad/studio/getting-started/support';\ninterface SnippetProps {\n  children: string;\n}\n\nfunction CliCommandSnippet({ children }: SnippetProps) {\n  return (\n    <Box\n      component=\"pre\"\n      sx={{\n        p: 1,\n        backgroundColor: 'background.paper',\n        borderRadius: 1,\n        border: 1,\n        borderColor: 'divider',\n      }}\n    >\n      {children}\n    </Box>\n  );\n}\n\ninterface FeedbackMenuItemLinkProps {\n  href: string;\n  children: React.ReactNode;\n}\n\nfunction FeedbackMenuItemLink({ href, children }: FeedbackMenuItemLinkProps) {\n  return (\n    <MenuItem component=\"a\" target=\"_blank\" href={href}>\n      <ListItemText>{children}</ListItemText>\n      <OpenInNewIcon fontSize=\"inherit\" sx={{ ml: 3, color: 'text.secondary' }} />\n    </MenuItem>\n  );\n}\n\nfunction getUpgradeMessage(packageManager: PackageManager | null): string {\n  const pkgName = '@toolpad/studio';\n  switch (packageManager) {\n    case 'yarn':\n      return `yarn add ${pkgName}`;\n    case 'pnpm':\n      return `pnpm add ${pkgName}`;\n    default:\n      return `npm install ${pkgName}`;\n  }\n}\n\nfunction UserFeedback() {\n  const { buttonProps, menuProps } = useMenu();\n  const projectApi = useProjectApi();\n\n  invariant(process.env.TOOLPAD_VERSION, 'Missing env var TOOLPAD_VERSION');\n  invariant(process.env.TOOLPAD_BUILD, 'Missing env var TOOLPAD_BUILD');\n\n  const { data: versionInfo } = projectApi.useQuery('getVersionInfo', [], {\n    staleTime: VERSION_CHECK_INTERVAL,\n  });\n\n  const {\n    value: updateDialogOpen,\n    setFalse: handleUpdateDialogClose,\n    setTrue: handleUpdateDialogOpen,\n  } = useBoolean(false);\n\n  const updateAvailable = !!versionInfo?.updateAvailable;\n\n  return (\n    <React.Fragment>\n      <Dialog open={updateDialogOpen} onClose={handleUpdateDialogClose} maxWidth=\"xs\">\n        <DialogTitle>Update Toolpad</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            A new Toolpad Studio version is available. To upgrade to the latest version, run:\n            <CliCommandSnippet>\n              {getUpgradeMessage(versionInfo?.packageManager ?? null)}\n            </CliCommandSnippet>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleUpdateDialogClose} autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Tooltip title=\"Help and resources\">\n        <IconButton {...buttonProps} color=\"primary\">\n          <HelpOutlinedIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu {...menuProps}>\n        <FeedbackMenuItemLink href={DOCUMENTATION_URL}>Documentation</FeedbackMenuItemLink>\n        <FeedbackMenuItemLink href={REPORT_BUG_URL}>Report bug</FeedbackMenuItemLink>\n        <FeedbackMenuItemLink href={FEATURE_REQUEST_URL}>\n          Request or upvote feature\n        </FeedbackMenuItemLink>\n        <FeedbackMenuItemLink href={SUPPORT_URL}>Request support</FeedbackMenuItemLink>\n        <Divider />\n\n        <MenuItem\n          disabled={!updateAvailable}\n          onClick={handleUpdateDialogOpen}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          Version {process.env.TOOLPAD_VERSION}\n          {updateAvailable ? (\n            <Chip size=\"small\" color=\"error\" variant=\"outlined\" label=\"Update\" clickable />\n          ) : null}\n        </MenuItem>\n        <MenuItem disabled>Build {process.env.TOOLPAD_BUILD}</MenuItem>\n      </Menu>\n    </React.Fragment>\n  );\n}\n\nexport default UserFeedback;\n","import * as React from 'react';\nimport { IconButton, Menu, MenuItem, ListItemText, ListItemIcon, Tooltip } from '@mui/material';\nimport LightModeOutlined from '@mui/icons-material/LightMode';\nimport DarkModeOutlined from '@mui/icons-material/DarkMode';\nimport SettingsBrightnessOutlined from '@mui/icons-material/SettingsBrightnessOutlined';\nimport { ThemeMode } from '../../../ThemeContext';\nimport useMenu from '../../../utils/useMenu';\n\ninterface ThemeModeMenuProps {\n  mode: ThemeMode;\n  onChange: (event: React.MouseEvent, mode: ThemeMode) => void;\n}\n\ninterface ThemeModeMenuOption {\n  label: string;\n  icon: React.ReactNode;\n  value: ThemeMode;\n}\n\nconst options: Record<string, ThemeModeMenuOption> = {\n  light: {\n    label: 'Light',\n    value: 'light',\n    icon: <LightModeOutlined />,\n  },\n  dark: {\n    label: 'Dark',\n    value: 'dark',\n    icon: <DarkModeOutlined />,\n  },\n  system: {\n    label: 'System',\n    value: 'system',\n    icon: <SettingsBrightnessOutlined />,\n  },\n};\n\nfunction ThemeModeMenu({ mode, onChange }: ThemeModeMenuProps) {\n  const { buttonProps, menuProps, onMenuClose } = useMenu();\n\n  return (\n    <React.Fragment>\n      <Tooltip title=\"Change theme\">\n        <IconButton {...buttonProps} aria-label=\"Change theme\" color=\"primary\">\n          {options[mode].icon}\n        </IconButton>\n      </Tooltip>\n\n      <Menu {...menuProps}>\n        {Object.values(options).map((option) => (\n          <MenuItem\n            key={option.value}\n            selected={option.value === mode}\n            onClick={(event) => {\n              onChange(event, option.value);\n              onMenuClose();\n            }}\n          >\n            <ListItemIcon>{option.icon}</ListItemIcon>\n            <ListItemText primary={option.label} />\n          </MenuItem>\n        ))}\n      </Menu>\n    </React.Fragment>\n  );\n}\n\nexport default ThemeModeMenu;\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport ArticleIcon from '@mui/icons-material/Article';\nimport FunctionsIcon from '@mui/icons-material/Functions';\nimport {\n  ListItem,\n  Toolbar,\n  Drawer as MuiDrawer,\n  List,\n  Stack,\n  IconButton,\n  Tooltip,\n} from '@mui/material';\nimport { Link, matchPath, useLocation } from 'react-router-dom';\n\nconst DRAWER_WIDTH = 44; // px\n\nconst Drawer = styled(MuiDrawer)({\n  width: DRAWER_WIDTH,\n  '& .MuiDrawer-paper': {\n    overflow: 'hidden',\n    width: DRAWER_WIDTH,\n  },\n});\n\nconst navigationOptions = [\n  {\n    name: 'Pages',\n    path: '/app/pages',\n    icon: ArticleIcon,\n  },\n  {\n    name: 'Functions',\n    path: '/app/functions',\n    icon: FunctionsIcon,\n  },\n];\n\nexport default function ToolpadNavigation() {\n  const location = useLocation();\n\n  return (\n    <Drawer variant=\"permanent\" anchor=\"left\" open>\n      <Toolbar variant=\"dense\" />\n      <List component=\"nav\" sx={{ pt: 1 }}>\n        {navigationOptions.map(({ name, path, icon }) => {\n          const OptionIcon = icon;\n\n          const isSelected = !!matchPath(`${path}/*`, location.pathname);\n\n          return (\n            <ListItem key={name} sx={{ pt: 0.5, pb: 0.5, pl: 0, pr: 0 }}>\n              <Link to={path} style={{ textDecoration: 'none', color: 'inherit' }}>\n                <Stack\n                  flex={1}\n                  direction=\"column\"\n                  alignItems=\"center\"\n                  sx={{ width: DRAWER_WIDTH - 1 }}\n                >\n                  <Tooltip title={name} placement=\"right\">\n                    <IconButton>\n                      <OptionIcon color={isSelected ? 'primary' : 'action'} fontSize=\"medium\" />\n                    </IconButton>\n                  </Tooltip>\n                </Stack>\n              </Link>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Drawer>\n  );\n}\n","import * as React from 'react';\nimport {\n  Box,\n  Portal,\n  Skeleton,\n  IconButton,\n  generateUtilityClasses,\n  styled,\n  Stack,\n  useTheme,\n  alpha,\n  Typography,\n  Button,\n  Link,\n  Snackbar,\n  Toolbar,\n} from '@mui/material';\nimport { errorFrom } from '@toolpad/utils/errors';\nimport { treeItemClasses, TreeItem, SimpleTreeView } from '@mui/x-tree-view';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\nimport JavascriptIcon from '@mui/icons-material/Javascript';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport useBoolean from '@toolpad/utils/hooks/useBoolean';\nimport { useQuery } from '@tanstack/react-query';\nimport { ensureSuffix } from '@toolpad/utils/strings';\nimport { NodeId } from '@toolpad/studio-runtime';\nimport usePageTitle from '@toolpad/utils/hooks/usePageTitle';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { Panel, PanelGroup, PanelResizeHandle } from '../../components/resizablePanels';\nimport OpenCodeEditorButton from '../OpenCodeEditor';\nimport FlexFill from '../../components/FlexFill';\nimport { FileIntrospectionResult } from '../../server/functionsTypesWorker';\nimport {\n  parseFunctionId,\n  parseLegacyFunctionId,\n  serializeFunctionId,\n} from '../../toolpadDataSources/local/shared';\nimport { LocalPrivateApi } from '../../toolpadDataSources/local/types';\nimport { useProjectApi } from '../../projectApi';\nimport ExplorerHeader from '../AppEditor/ExplorerHeader';\nimport EditableTreeItem, { EditableTreeItemProps } from '../../components/EditableTreeItem';\nimport { scrollIntoViewIfNeeded } from '../../utils/dom';\n\nconst fileTreeItemClasses = generateUtilityClasses('FileTreeItem', ['actionButton', 'handlerItem']);\n\nconst FileTreeItemRoot = styled(EditableTreeItem)(({ theme }) => ({\n  [`& .${treeItemClasses.label}`]: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n\n    [`&:hover .${fileTreeItemClasses.actionButton}`]: {\n      visibility: 'visible',\n    },\n  },\n\n  [`& .${treeItemClasses.groupTransition}`]: {\n    borderLeft: `1px solid ${alpha(theme.palette.text.primary, 0.2)}`,\n    position: 'relative',\n    left: '-2px',\n  },\n\n  [`& .${fileTreeItemClasses.actionButton}`]: {\n    visibility: 'hidden',\n  },\n\n  [`& .${fileTreeItemClasses.handlerItem} .${treeItemClasses.label}`]: {\n    fontFamily: theme.typography.fontFamilyCode,\n    fontSize: 14,\n    padding: 4,\n    display: 'inline-block',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n}));\n\ninterface HandlerFileTreeItemProps extends EditableTreeItemProps {\n  file: FileIntrospectionResult;\n  onRename: (nodeId: NodeId, updatedName: string) => void | Promise<void>;\n}\n\nfunction HandlerFileTreeItem({\n  file,\n  itemId,\n  validateItemName,\n  onRename,\n  ...other\n}: HandlerFileTreeItemProps) {\n  const { value: isEditing, setFalse: stopEditing } = useBoolean(false);\n\n  const labelText = file.name;\n\n  // const handleRename = React.useCallback(\n  //   async (newName: string) => {\n  //     await onRename(nodeId as NodeId, newName);\n  //     stopEditing();\n  //   },\n  //   [nodeId, onRename, stopEditing],\n  // );\n\n  const validateEditableFileName = React.useCallback(\n    (newName: string) => {\n      if (newName !== labelText && validateItemName) {\n        return validateItemName(newName);\n      }\n      return { isValid: true };\n    },\n    [labelText, validateItemName],\n  );\n\n  return (\n    <FileTreeItemRoot\n      key={file.name}\n      itemId={itemId}\n      labelText={labelText}\n      renderLabel={(children) => (\n        <React.Fragment>\n          <JavascriptIcon fontSize=\"large\" />\n          {children}\n          <FlexFill />\n          <OpenCodeEditorButton\n            className={fileTreeItemClasses.actionButton}\n            iconButton\n            filePath={file.name}\n            fileType=\"resource\"\n          />\n        </React.Fragment>\n      )}\n      isEditing={isEditing}\n      // onEdit={handleRename}\n      suggestedNewItemName={labelText}\n      onCancel={stopEditing}\n      validateItemName={validateEditableFileName}\n      {...other}\n    >\n      {file.handlers.map((handler) => {\n        return (\n          <TreeItem\n            className={fileTreeItemClasses.handlerItem}\n            key={handler.name}\n            itemId={serializeFunctionId({ file: file.name, handler: handler.name })}\n            label={handler.name}\n          />\n        );\n      })}\n    </FileTreeItemRoot>\n  );\n}\n\nexport default function FunctionsEditor() {\n  usePageTitle(`Functions | Toolpad Studio editor`);\n\n  const theme = useTheme();\n\n  const projectApi = useProjectApi();\n\n  const [selectedHandler, setSelectedHandler] = React.useState<string | null>(null);\n  const { file: selectedFile = undefined, handler: selectedFunction = undefined } = selectedHandler\n    ? parseLegacyFunctionId(selectedHandler)\n    : {};\n\n  const selectedNodeId: string | null = selectedFile\n    ? serializeFunctionId({\n        file: selectedFile,\n        handler: selectedFunction,\n      })\n    : null;\n\n  const [expanded, setExpanded] = React.useState<string[]>(selectedFile ? [selectedFile] : []);\n\n  const [latestCreatedHandler, setLatestCreatedHandler] = React.useState<string | null>(null);\n\n  const execPrivate = React.useCallback(\n    <K extends keyof LocalPrivateApi>(\n      method: K,\n      args: Parameters<LocalPrivateApi[K]>,\n    ): Promise<Awaited<ReturnType<LocalPrivateApi[K]>>> => {\n      return projectApi.methods.dataSourceExecPrivate('local', method, args);\n    },\n    [projectApi.methods],\n  );\n\n  const introspection = useQuery({\n    queryKey: ['introspection'],\n    queryFn: () => execPrivate('introspection', []),\n    retry: false,\n  });\n\n  const handleSelectFunction = React.useCallback(\n    (_event: React.SyntheticEvent, itemId: string | null) => {\n      if (!itemId) {\n        return;\n      }\n      const parsed = parseFunctionId(itemId);\n      if (parsed.handler) {\n        setSelectedHandler(itemId);\n      }\n    },\n    [setSelectedHandler],\n  );\n\n  const handlerTreeRef = React.useRef<HTMLUListElement>(null);\n\n  React.useEffect(() => {\n    handlerTreeRef.current?.querySelector(`.${treeItemClasses.selected}`)?.scrollIntoView();\n  }, []);\n\n  const [newHandlerLoading, setNewHandlerLoading] = React.useState(false);\n\n  const [hasMounted, setHasMounted] = React.useState(false);\n\n  React.useEffect(() => {\n    setHasMounted(true);\n  }, []);\n\n  React.useEffect(() => {\n    const handlerTree = handlerTreeRef.current;\n    if (handlerTree && hasMounted) {\n      const selectedItem = handlerTree.querySelector(`.${treeItemClasses.selected}`);\n\n      if (selectedItem) {\n        scrollIntoViewIfNeeded(selectedItem);\n      }\n    }\n  }, [hasMounted, introspection.data]);\n\n  const {\n    value: isCreateNewHandlerOpen,\n    setTrue: handleOpenCreateNewHandler,\n    setFalse: handleCloseCreateNewHandler,\n  } = useBoolean(false);\n\n  const existingFileNames = React.useMemo(\n    () =>\n      new Set(\n        introspection.data?.files.flatMap((file) => [\n          file.name,\n          `${file.name.substring(0, file.name.lastIndexOf('.'))}`,\n        ]) ?? [],\n      ),\n    [introspection],\n  );\n\n  const validateFileName = React.useCallback(\n    (fileName: string) => {\n      const alreadyExists = existingFileNames.has(fileName);\n\n      return {\n        isValid: !alreadyExists,\n        ...(alreadyExists ? { errorMessage: 'File already exists' } : {}),\n      };\n    },\n    [existingFileNames],\n  );\n\n  const nextProposedName = React.useMemo(\n    () => appDom.proposeName('myfunctions', existingFileNames),\n    [existingFileNames],\n  );\n\n  const handleCreateNewCommit = React.useCallback(\n    async (newFileName: string) => {\n      const fileName = ensureSuffix(newFileName, '.ts');\n\n      setNewHandlerLoading(true);\n      try {\n        await execPrivate('createNew', [fileName]);\n        await introspection.refetch();\n      } catch (error) {\n        // eslint-disable-next-line no-alert\n        window.alert(errorFrom(error).message);\n      } finally {\n        setNewHandlerLoading(false);\n        setLatestCreatedHandler(fileName);\n      }\n\n      const newNodeId = serializeFunctionId({ file: fileName, handler: 'default' });\n      setSelectedHandler(newNodeId);\n      setExpanded([fileName]);\n\n      handleCloseCreateNewHandler();\n    },\n    [execPrivate, handleCloseCreateNewHandler, introspection],\n  );\n\n  const handleSnackbarClose = React.useCallback(() => {\n    setLatestCreatedHandler(null);\n  }, []);\n\n  const [searchTerm, setSearchTerm] = React.useState('');\n\n  const handleSearch = React.useCallback((newSearchTerm: string) => {\n    setSearchTerm(newSearchTerm);\n  }, []);\n\n  const handleFileRename = React.useCallback(async () => {\n    try {\n      // @TODO: Rename file\n      await introspection.refetch();\n    } catch (error) {\n      // eslint-disable-next-line no-alert\n      window.alert(errorFrom(error).message);\n    }\n  }, [introspection]);\n\n  const functionFiles = React.useMemo(() => {\n    const regex = new RegExp(searchTerm.split('').join('.*'), 'i');\n    return (\n      introspection.data?.files?.filter((file) => (searchTerm ? regex.test(file.name) : true)) || []\n    ).filter((file) => file.handlers.length > 0);\n  }, [introspection.data?.files, searchTerm]);\n\n  return (\n    <React.Fragment>\n      <Box sx={{ height: 'calc(100vh - 48px)' }}>\n        <PanelGroup direction=\"horizontal\">\n          <Panel defaultSize={16} minSize={16}>\n            <Stack\n              direction=\"column\"\n              sx={{\n                height: '100%',\n                position: 'relative',\n              }}\n            >\n              <ExplorerHeader\n                headerText=\"Functions\"\n                createLabelText=\"Create new function file\"\n                onCreate={handleOpenCreateNewHandler}\n                onSearch={handleSearch}\n                hasPersistentSearch\n              />\n              <SimpleTreeView\n                ref={handlerTreeRef}\n                selectedItems={selectedNodeId}\n                onSelectedItemsChange={handleSelectFunction}\n                expandedItems={expanded}\n                onExpandedItemsChange={(_event, itemIds) => setExpanded(itemIds)}\n                sx={{\n                  px: 1,\n                  overflow: 'auto',\n                  scrollbarGutter: 'stable',\n                }}\n              >\n                {isCreateNewHandlerOpen ? (\n                  <EditableTreeItem\n                    itemId=\"::create::\"\n                    isEditing\n                    suggestedNewItemName={nextProposedName}\n                    onEdit={handleCreateNewCommit}\n                    onCancel={handleCloseCreateNewHandler}\n                    validateItemName={validateFileName}\n                    isLoading={newHandlerLoading}\n                    renderLabel={(children) => (\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                        <JavascriptIcon fontSize=\"large\" />\n                        {children}\n                      </Box>\n                    )}\n                  />\n                ) : null}\n                {functionFiles.map((file) => (\n                  <HandlerFileTreeItem\n                    key={file.name}\n                    itemId={serializeFunctionId({ file: file.name })}\n                    file={file}\n                    validateItemName={validateFileName}\n                    onRename={handleFileRename}\n                  />\n                ))}\n\n                {introspection.data?.files.length === 0 ? (\n                  <Stack alignItems=\"center\" sx={{ mt: 2 }}>\n                    <Typography variant=\"body1\" fontSize={14}>\n                      You don&apos;t have any functions yet…\n                    </Typography>\n                    <Button\n                      onClick={handleOpenCreateNewHandler}\n                      variant=\"outlined\"\n                      startIcon={<AddIcon />}\n                      size=\"medium\"\n                      sx={{ mt: 1 }}\n                    >\n                      Create function file\n                    </Button>\n                  </Stack>\n                ) : null}\n\n                {introspection.isLoading ? (\n                  <React.Fragment>\n                    <TreeItem disabled itemId=\"loading-1\" label={<Skeleton />} />\n                    <TreeItem disabled itemId=\"loading-2\" label={<Skeleton />} />\n                    <TreeItem disabled itemId=\"loading-3\" label={<Skeleton />} />\n                  </React.Fragment>\n                ) : null}\n              </SimpleTreeView>\n              {introspection.error ? (\n                <Box\n                  sx={{\n                    position: 'absolute',\n                    inset: '0 0 0 0',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    color: theme.palette.error.main,\n                  }}\n                >\n                  {errorFrom(introspection.error).message}\n                </Box>\n              ) : null}\n            </Stack>\n          </Panel>\n          <PanelResizeHandle />\n          <Panel>\n            {selectedHandler && selectedFile && selectedFunction ? (\n              <Toolbar sx={{ borderBottom: `1px solid ${theme.palette.divider}` }}>\n                <Stack\n                  direction=\"row\"\n                  alignItems=\"center\"\n                  justifyContent=\"space-between\"\n                  sx={{ width: '100%', p: 1 }}\n                >\n                  <Stack direction=\"row\" alignItems=\"center\">\n                    <JavascriptIcon fontSize=\"large\" />\n                    <Typography variant=\"subtitle1\" fontSize={14}>\n                      {selectedFile}&nbsp;&nbsp;&rsaquo;&nbsp;&nbsp;\n                      <span style={{ fontFamily: theme.typography.fontFamilyCode }}>\n                        {selectedFunction}\n                      </span>\n                    </Typography>\n                  </Stack>\n                  <Stack direction=\"row\" alignItems=\"center\" gap={1}>\n                    <OpenCodeEditorButton\n                      className={fileTreeItemClasses.actionButton}\n                      filePath={selectedFile}\n                      fileType=\"resource\"\n                      actionText=\"Edit\"\n                      variant=\"outlined\"\n                    />\n                    <Button variant=\"contained\" size=\"medium\" startIcon={<PlayArrowIcon />}>\n                      Preview\n                    </Button>\n                  </Stack>\n                </Stack>\n              </Toolbar>\n            ) : (\n              <Box\n                sx={{\n                  height: '100%',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <Stack alignItems=\"center\" sx={{ px: 4 }}>\n                  <Typography variant=\"body1\" textAlign=\"center\" fontSize={14}>\n                    <strong>Custom Functions</strong> allow you to run your own JavaScript code,\n                    directly from your file system.\n                  </Typography>\n                  <Link\n                    href=\"https://mui.com/toolpad/studio/concepts/custom-functions\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    textAlign=\"center\"\n                    sx={{ mt: 1 }}\n                    fontSize={14}\n                  >\n                    Read more about Custom Functions\n                  </Link>\n                </Stack>\n              </Box>\n            )}\n          </Panel>\n        </PanelGroup>\n      </Box>\n      <Portal>\n        {latestCreatedHandler ? (\n          <Snackbar\n            open={!!latestCreatedHandler}\n            onClose={handleSnackbarClose}\n            message={`Function \"${latestCreatedHandler}\" created`}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n            autoHideDuration={6000}\n            action={\n              <React.Fragment>\n                <OpenCodeEditorButton\n                  className={fileTreeItemClasses.actionButton}\n                  filePath={latestCreatedHandler}\n                  fileType=\"resource\"\n                />\n                <IconButton\n                  size=\"small\"\n                  aria-label=\"close\"\n                  color=\"inherit\"\n                  onClick={handleSnackbarClose}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </IconButton>\n              </React.Fragment>\n            }\n          />\n        ) : null}\n      </Portal>\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\nimport {\n  Alert,\n  Box,\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  Link,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Snackbar,\n  Stack,\n  Tab,\n  TextField,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport {\n  DataGrid,\n  GridActionsCellItem,\n  GridColDef,\n  GridRowModel,\n  GridRowModes,\n  GridRowModesModel,\n  GridToolbarContainer,\n} from '@mui/x-data-grid';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport GoogleIcon from '@mui/icons-material/Google';\nimport { TabContext, TabList } from '@mui/lab';\nimport { updateArray } from '@toolpad/utils/immutability';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport invariant from 'invariant';\nimport { useAppState, useAppStateApi } from '../AppState';\nimport TabPanel from '../../components/TabPanel';\nimport AzureIcon from '../../components/icons/AzureIcon';\nimport { UpgradeAlert } from './UpgradeNotification';\n\ninterface AuthProviderOption {\n  name: string;\n  icon: React.ReactNode;\n  hasRoles: boolean;\n}\n\nconst AUTH_PROVIDER_OPTIONS = new Map<string, AuthProviderOption>([\n  ['github', { name: 'GitHub', icon: <GitHubIcon fontSize=\"small\" />, hasRoles: false }],\n  ['google', { name: 'Google', icon: <GoogleIcon fontSize=\"small\" />, hasRoles: false }],\n  [\n    'azure-ad',\n    {\n      name: 'Azure AD',\n      icon: <AzureIcon />,\n      hasRoles: true,\n    },\n  ],\n]);\n\nexport function AppAuthenticationEditor() {\n  const { dom } = useAppState();\n  const appState = useAppStateApi();\n  const plan = appDom.getPlan(dom);\n  const isPaidPlan = plan !== undefined && plan !== 'free';\n\n  const handleAuthProvidersChange = React.useCallback(\n    (event: SelectChangeEvent<appDom.AuthProvider[]>) => {\n      const {\n        target: { value: providers },\n      } = event;\n\n      appState.update((draft) => {\n        const app = appDom.getApp(draft);\n\n        draft = appDom.setNodeNamespacedProp(draft, app, 'attributes', 'authentication', {\n          ...app.attributes?.authentication,\n          providers: (typeof providers === 'string' ? providers.split(',') : providers).map(\n            (provider) => ({ provider }) as appDom.AuthProviderConfig,\n          ),\n        });\n\n        return draft;\n      });\n    },\n    [appState],\n  );\n\n  const handleRestrictedDomainsChange = React.useCallback(\n    (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      const {\n        target: { value: domain },\n      } = event;\n\n      appState.update((draft) => {\n        const app = appDom.getApp(draft);\n\n        draft = appDom.setNodeNamespacedProp(draft, app, 'attributes', 'authentication', {\n          ...app.attributes?.authentication,\n          restrictedDomains: updateArray(\n            app.attributes?.authentication?.restrictedDomains ?? [],\n            domain,\n            index,\n          ).filter((restrictedDomain) => restrictedDomain !== ''),\n        });\n\n        return draft;\n      });\n    },\n    [appState],\n  );\n\n  const appNode = appDom.getApp(dom);\n  const { authentication } = appNode.attributes;\n\n  const authProviders = React.useMemo(\n    () => authentication?.providers ?? [],\n    [authentication?.providers],\n  ).map((providerConfig) => providerConfig.provider);\n\n  const restrictedDomains = authentication?.restrictedDomains ?? [];\n\n  return (\n    <Stack direction=\"column\">\n      <Typography variant=\"subtitle1\" mb={1}>\n        Providers\n      </Typography>\n      <FormControl>\n        <InputLabel id=\"auth-providers-label\">Authentication providers</InputLabel>\n        <Select<appDom.AuthProvider[]>\n          labelId=\"auth-providers-label\"\n          label=\"Authentication providers\"\n          id=\"auth-providers\"\n          multiple\n          value={authProviders}\n          onChange={handleAuthProvidersChange}\n          fullWidth\n          renderValue={(selected) =>\n            selected\n              .filter((selectedValue) => AUTH_PROVIDER_OPTIONS.has(selectedValue))\n              .map((selectedValue) => AUTH_PROVIDER_OPTIONS.get(selectedValue)?.name ?? '')\n              .join(', ')\n          }\n        >\n          {[...AUTH_PROVIDER_OPTIONS].map(([value, { name, icon, hasRoles }]) => (\n            <MenuItem key={value} value={value} disabled={hasRoles && !isPaidPlan}>\n              <Stack direction=\"row\" alignItems=\"center\">\n                <Checkbox checked={authProviders.indexOf(value as appDom.AuthProvider) > -1} />\n                {icon}\n                <Typography mx={1}>{name}</Typography>\n                {hasRoles && !isPaidPlan ? (\n                  <UpgradeAlert type=\"warning\" message={`${name} requires a paid plan.`} />\n                ) : null}\n              </Stack>\n            </MenuItem>\n          ))}\n        </Select>\n        <FormHelperText id=\"auth-providers-helper-text\">\n          If set, only authenticated users can use the app.\n        </FormHelperText>\n      </FormControl>\n      <Alert severity=\"info\" sx={{ mt: 1 }}>\n        Certain environment variables must be set for authentication providers to work.{' '}\n        <Link href=\"https://mui.com/toolpad/studio/concepts/authentication\" target=\"_blank\">\n          Learn how to set up authentication\n        </Link>\n        .\n      </Alert>\n\n      <Typography variant=\"subtitle1\" mt={2}>\n        Required email domains\n      </Typography>\n      <Typography variant=\"body2\" mt={1}>\n        If set, authenticated user emails must be in one of the domains below.\n      </Typography>\n      {[...restrictedDomains, ''].map((domain, index) => (\n        <TextField\n          key={index}\n          value={domain}\n          onChange={handleRestrictedDomainsChange(index)}\n          placeholder=\"example.com\"\n        />\n      ))}\n      <div style={{ position: 'absolute', bottom: 0 }}>\n        {!isPaidPlan ? (\n          <UpgradeAlert\n            type=\"info\"\n            message=\"Using authentication with a few specific providers (Azure AD) requires a paid plan.\"\n            action\n          />\n        ) : (\n          <UpgradeAlert\n            type=\"warning\"\n            message=\"You are using features that are not covered by our MIT License. You will have to buy a license to use them in production.\"\n          />\n        )}\n      </div>\n    </Stack>\n  );\n}\n\ninterface RolesToolbarProps extends React.ComponentProps<typeof GridToolbarContainer> {\n  addNewRoleDisabled?: boolean;\n  onAddNewRole?: () => void;\n}\n\nfunction RolesToolbar({ addNewRoleDisabled, onAddNewRole }: RolesToolbarProps) {\n  invariant(typeof addNewRoleDisabled === 'boolean', 'addNewRoleDisabled is required in slotProps');\n  invariant(typeof onAddNewRole === 'function', 'onAddNewRole is required in slotProps');\n  return (\n    <GridToolbarContainer>\n      <Button\n        color=\"primary\"\n        startIcon={<AddIcon />}\n        onClick={onAddNewRole}\n        disabled={addNewRoleDisabled}\n      >\n        Add role\n      </Button>\n    </GridToolbarContainer>\n  );\n}\n\ninterface Role {\n  name: string;\n  description?: string;\n}\n\ninterface RoleRow extends Role {\n  id: string;\n  pages: string[];\n  isNew?: boolean;\n}\n\nexport function AppRolesEditor({ onRowUpdateError }: { onRowUpdateError: (error: Error) => void }) {\n  const { dom } = useAppState();\n  const appState = useAppStateApi();\n\n  const [draftRow, setDraftRow] = React.useState<RoleRow | null>(null);\n\n  const addRole = React.useCallback(\n    (role: Role) => {\n      appState.update((draft) => {\n        const app = appDom.getApp(draft);\n\n        draft = appDom.setNodeNamespacedProp(draft, app, 'attributes', 'authorization', {\n          ...app.attributes?.authorization,\n          roles: [...(app.attributes?.authorization?.roles ?? []), role],\n        });\n\n        return draft;\n      });\n    },\n    [appState],\n  );\n\n  const updateRole = React.useCallback(\n    (name: string, values: Omit<Role, 'name'>) => {\n      appState.update((draft) => {\n        const app = appDom.getApp(draft);\n\n        draft = appDom.setNodeNamespacedProp(draft, app, 'attributes', 'authorization', {\n          ...app.attributes?.authorization,\n          roles: (app.attributes?.authorization?.roles ?? []).map((role) => {\n            if (role.name === name) {\n              return {\n                ...role,\n                ...values,\n              };\n            }\n            return role;\n          }),\n        });\n\n        return draft;\n      });\n    },\n    [appState],\n  );\n\n  const deleteRole = React.useCallback(\n    (name: string) => {\n      appState.update((draft) => {\n        const app = appDom.getApp(draft);\n\n        draft = appDom.setNodeNamespacedProp(draft, app, 'attributes', 'authorization', {\n          ...app.attributes?.authorization,\n          roles: (app.attributes?.authorization?.roles ?? []).filter((role) => role.name !== name),\n        });\n\n        return draft;\n      });\n    },\n    [appState],\n  );\n\n  const rolesRows = React.useMemo<RoleRow[]>(() => {\n    const appNode = appDom.getApp(dom);\n    const authorization = appNode.attributes.authorization;\n    const roles = authorization?.roles;\n\n    const { pages = [] } = appDom.getChildNodes(dom, appNode);\n\n    const existingRows =\n      roles?.map((role) => ({\n        ...role,\n        id: role.name,\n        pages: pages\n          .filter((page) => page.attributes.authorization?.allowedRoles?.includes(role.name))\n          .map((page) => page.name),\n      })) ?? [];\n\n    return [...existingRows, ...(draftRow ? [draftRow] : [])];\n  }, [dom, draftRow]);\n\n  const rolesColumns = React.useMemo<GridColDef[]>(() => {\n    return [\n      {\n        field: 'name',\n        headerName: 'Name',\n        editable: true,\n        flex: 0.4,\n      },\n      {\n        field: 'description',\n        headerName: 'Description',\n        editable: true,\n        flex: 1,\n      },\n      {\n        field: 'pages',\n        headerName: 'Pages',\n        type: 'number',\n        renderCell: ({ value }) => {\n          const previewLength = 3;\n          const preview = `${value.slice(0, previewLength).join(', ')}${\n            value.length > previewLength ? '...' : ''\n          }`;\n          return (\n            <Tooltip title={preview}>\n              <span>{value.length}</span>\n            </Tooltip>\n          );\n        },\n      },\n      {\n        field: 'actions',\n        type: 'actions',\n        headerName: '',\n        width: 50,\n        cellClassName: 'actions',\n        getActions: ({ row }) => {\n          const isBlockedByPages = row.pages.length > 0;\n\n          const deleteButton = (\n            <GridActionsCellItem\n              key=\"delete\"\n              disabled={isBlockedByPages || row.isNew}\n              icon={<DeleteIcon />}\n              label=\"Delete\"\n              onClick={() => deleteRole(row.name)}\n              color=\"inherit\"\n            />\n          );\n\n          return [\n            isBlockedByPages ? (\n              <Tooltip\n                key=\"delete\"\n                title=\"This role can't be deleted because it is still associated with existing pages.\"\n              >\n                <span>{deleteButton}</span>\n              </Tooltip>\n            ) : (\n              deleteButton\n            ),\n          ];\n        },\n      },\n    ];\n  }, [deleteRole]);\n\n  const [rowModesModel, setRowModesModel] = React.useState<GridRowModesModel>({});\n\n  const handleRowModesModelChange = (newRowModesModel: GridRowModesModel) => {\n    setRowModesModel(newRowModesModel);\n  };\n\n  const processRowUpdate = (\n    newRow: GridRowModel<RoleRow>,\n    oldRow: GridRowModel<RoleRow>,\n  ): RoleRow => {\n    setDraftRow(null);\n\n    if (!newRow.name) {\n      throw new Error(`Invalid row`);\n    }\n\n    const exists = rolesRows.some((row) => row.id !== newRow.id && row.name === newRow.name);\n\n    if (exists) {\n      throw new Error(`Role \"${newRow.name}\" already exists`);\n    }\n\n    if (oldRow.isNew) {\n      addRole({\n        name: newRow.name,\n        description: newRow.description,\n      });\n    } else {\n      updateRole(newRow.name, {\n        description: newRow.description,\n      });\n    }\n\n    return {\n      ...newRow,\n      id: newRow.name,\n      pages: [],\n      isNew: false,\n    };\n  };\n\n  const handleAddNewRole = React.useCallback(() => {\n    const draftRowId = `<draft_row>-${Math.random()}`;\n    setDraftRow({ id: draftRowId, name: '', description: '', pages: [], isNew: true });\n    setRowModesModel((oldModel) => ({\n      ...oldModel,\n      [draftRowId]: { mode: GridRowModes.Edit, fieldToFocus: 'name' },\n    }));\n  }, []);\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div\n      style={{ height: 350, width: '100%' }}\n      onKeyDown={(event) => {\n        if (Object.keys(rowModesModel).length > 0) {\n          // Avoid the escape key from closing a dialog this grid is rendered in\n          event.stopPropagation();\n        }\n      }}\n    >\n      <DataGrid\n        rows={rolesRows}\n        columns={rolesColumns}\n        hideFooter\n        editMode=\"row\"\n        rowModesModel={rowModesModel}\n        onRowModesModelChange={handleRowModesModelChange}\n        processRowUpdate={processRowUpdate}\n        onProcessRowUpdateError={onRowUpdateError}\n        isCellEditable={(params) => {\n          if (params.field === 'name') {\n            return !!params.row.isNew;\n          }\n          return true;\n        }}\n        slots={{\n          toolbar: RolesToolbar,\n        }}\n        slotProps={{\n          toolbar: {\n            onAddNewRole: handleAddNewRole,\n            addNewRoleDisabled: !!draftRow,\n          },\n        }}\n        autoHeight\n      />\n    </div>\n  );\n}\n\ninterface RoleMapping {\n  role: string;\n  providerRoles: string;\n}\n\ninterface RoleMappingRow extends RoleMapping {\n  id: string;\n}\n\nexport function AppRoleMappingsEditor({\n  roleEnabledActiveAuthProviderOptions,\n  onRowUpdateError,\n}: {\n  roleEnabledActiveAuthProviderOptions: [string, AuthProviderOption][];\n  onRowUpdateError: (error: Error) => void;\n}) {\n  const { dom } = useAppState();\n  const appState = useAppStateApi();\n\n  const [activeAuthProvider, setAuthProvider] = React.useState<appDom.AuthProvider | null>(\n    (roleEnabledActiveAuthProviderOptions[0]?.[0] as appDom.AuthProvider) ?? null,\n  );\n\n  const handleAuthProviderChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { value: provider } = event.target;\n\n      setAuthProvider(provider as appDom.AuthProvider);\n    },\n    [],\n  );\n\n  const updateRoleMapping = React.useCallback(\n    (role: string, providerRoles: string) => {\n      if (!activeAuthProvider) {\n        return;\n      }\n\n      appState.update((draft) => {\n        const app = appDom.getApp(draft);\n\n        const activeAuthProviderConfig = app.attributes?.authentication?.providers?.find(\n          (providerConfig) => providerConfig.provider === activeAuthProvider,\n        );\n\n        draft = appDom.setNodeNamespacedProp(draft, app, 'attributes', 'authentication', {\n          ...app.attributes?.authentication,\n          providers: [\n            ...(app.attributes?.authentication?.providers ?? []).filter(\n              (providerConfig) => providerConfig.provider !== activeAuthProvider,\n            ),\n            {\n              ...activeAuthProviderConfig,\n              provider: activeAuthProvider,\n              roles: [\n                ...(activeAuthProviderConfig?.roles ?? []).filter(\n                  (roleMapping) => roleMapping.target !== role,\n                ),\n                {\n                  source: (providerRoles || role)\n                    .split(',')\n                    .map((updatedRole) => updatedRole.trim()),\n                  target: role,\n                },\n              ],\n            },\n          ],\n        });\n\n        return draft;\n      });\n    },\n    [activeAuthProvider, appState],\n  );\n\n  const roleMappingsRows = React.useMemo<RoleMappingRow[]>(() => {\n    if (!activeAuthProvider) {\n      return [];\n    }\n\n    const appNode = appDom.getApp(dom);\n    const authorization = appNode.attributes.authorization;\n    const roles = authorization?.roles ?? [];\n\n    const authentication = appNode.attributes.authentication;\n    const roleMappings = activeAuthProvider\n      ? (authentication?.providers?.find(\n          (providerConfig) => providerConfig.provider === activeAuthProvider,\n        )?.roles ?? [])\n      : [];\n\n    const existingRows =\n      roles?.map((role) => {\n        const targetRoleMapping = roleMappings.find(\n          (roleMapping) => roleMapping.target === role.name,\n        );\n\n        return {\n          id: role.name,\n          role: role.name,\n          providerRoles: targetRoleMapping ? targetRoleMapping.source.join(', ') : role.name,\n        };\n      }) ?? [];\n\n    return existingRows;\n  }, [activeAuthProvider, dom]);\n\n  const roleMappingsColumns = React.useMemo<GridColDef[]>(() => {\n    return [\n      {\n        field: 'role',\n        headerName: 'Role',\n        editable: false,\n        flex: 0.4,\n      },\n      {\n        field: 'providerRoles',\n        headerName: 'Provider roles',\n        editable: true,\n        flex: 1,\n      },\n    ];\n  }, []);\n\n  const [rowModesModel, setRowModesModel] = React.useState<GridRowModesModel>({});\n\n  const handleRowModesModelChange = (newRowModesModel: GridRowModesModel) => {\n    setRowModesModel(newRowModesModel);\n  };\n\n  const processRowUpdate = (newRow: GridRowModel<RoleMappingRow>): RoleMappingRow => {\n    updateRoleMapping(newRow.id, newRow.providerRoles);\n\n    return { ...newRow, providerRoles: newRow.providerRoles || newRow.role };\n  };\n\n  return (\n    <React.Fragment>\n      <TextField\n        label=\"Authentication provider\"\n        id=\"auth-provider\"\n        value={activeAuthProvider ?? undefined}\n        onChange={handleAuthProviderChange}\n        fullWidth\n        select\n        sx={{ mt: 2 }}\n      >\n        {roleEnabledActiveAuthProviderOptions.map(([value, { name }]) => (\n          <MenuItem key={value} value={value}>\n            {name}\n          </MenuItem>\n        ))}\n      </TextField>\n      {/* eslint-disable-next-line jsx-a11y/no-static-element-interactions */}\n      <div\n        style={{ height: 350, width: '100%' }}\n        onKeyDown={(event) => {\n          if (Object.keys(rowModesModel).length > 0) {\n            // Avoid the escape key from closing a dialog this grid is rendered in\n            event.stopPropagation();\n          }\n        }}\n      >\n        <DataGrid\n          rows={roleMappingsRows}\n          columns={roleMappingsColumns}\n          hideFooter\n          editMode=\"row\"\n          rowModesModel={rowModesModel}\n          onRowModesModelChange={handleRowModesModelChange}\n          processRowUpdate={processRowUpdate}\n          onProcessRowUpdateError={onRowUpdateError}\n          autoHeight\n          localeText={{\n            noRowsLabel: activeAuthProvider ? 'No roles defined' : 'No provider selected',\n          }}\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport interface AppAuthorizationDialogProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport default function AppAuthorizationDialog({ open, onClose }: AppAuthorizationDialogProps) {\n  const { dom } = useAppState();\n  const plan = appDom.getPlan(dom);\n  const isPaidPlan = plan !== undefined && plan !== 'free';\n\n  const [activeTab, setActiveTab] = React.useState<'authentication' | 'roles' | 'users'>(\n    'authentication',\n  );\n\n  const handleActiveTabChange = React.useCallback((event: React.SyntheticEvent, newTab: string) => {\n    setActiveTab(newTab as 'authentication' | 'roles' | 'users');\n  }, []);\n\n  const [errorSnackbarMessage, setErrorSnackbarMessage] = React.useState<string>('');\n\n  const handleRowUpdateError = React.useCallback((error: Error) => {\n    setErrorSnackbarMessage(error.message);\n  }, []);\n\n  const handleErrorSnackbarClose = React.useCallback(() => {\n    setErrorSnackbarMessage('');\n  }, []);\n\n  const roleEnabledActiveAuthProviderOptions = React.useMemo(() => {\n    const appNode = appDom.getApp(dom);\n\n    const authProviders = (appNode.attributes.authentication?.providers ?? [])\n      .filter((providerConfig) => AUTH_PROVIDER_OPTIONS.has(providerConfig.provider))\n      .map((providerConfig) => providerConfig.provider);\n\n    return [...AUTH_PROVIDER_OPTIONS].filter(\n      ([optionKey, { hasRoles }]) =>\n        hasRoles && authProviders.includes(optionKey as appDom.AuthProvider),\n    );\n  }, [dom]);\n\n  return (\n    <React.Fragment>\n      <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"md\">\n        <DialogTitle>Authorization</DialogTitle>\n        <TabContext value={activeTab}>\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n            <TabList\n              onChange={handleActiveTabChange}\n              aria-label=\"Authorization configuration options\"\n            >\n              <Tab label=\"Authentication\" value=\"authentication\" sx={{ px: 2 }} />\n              <Tab label=\"Roles\" value=\"roles\" sx={{ px: 2 }} />\n              {roleEnabledActiveAuthProviderOptions.length > 0 ? (\n                <Tab label=\"Role mappings\" value=\"roleMappings\" sx={{ px: 2 }} />\n              ) : null}\n            </TabList>\n          </Box>\n          <DialogContent sx={{ minHeight: 480, position: 'relative' }}>\n            <TabPanel disableGutters value=\"authentication\">\n              <AppAuthenticationEditor />\n            </TabPanel>\n\n            <React.Fragment>\n              <TabPanel disableGutters value=\"roles\">\n                {isPaidPlan ? (\n                  <React.Fragment>\n                    <Typography variant=\"body2\">\n                      Define the roles for your application. You can configure your pages to be\n                      accessible to specific roles only.\n                    </Typography>\n                    <AppRolesEditor onRowUpdateError={handleRowUpdateError} />\n                  </React.Fragment>\n                ) : (\n                  <UpgradeAlert\n                    type=\"info\"\n                    message=\"Role based access control requires a paid plan.\"\n                  />\n                )}\n              </TabPanel>\n              <TabPanel disableGutters value=\"roleMappings\">\n                {isPaidPlan ? (\n                  <React.Fragment>\n                    <Typography variant=\"body2\">\n                      Define mappings from authentication provider roles to Toolpad Studio roles.\n                    </Typography>\n                    <AppRoleMappingsEditor\n                      onRowUpdateError={handleRowUpdateError}\n                      roleEnabledActiveAuthProviderOptions={roleEnabledActiveAuthProviderOptions}\n                    />\n                  </React.Fragment>\n                ) : (\n                  <UpgradeAlert type=\"info\" message=\"Role mapping requires a paid plan.\" />\n                )}\n              </TabPanel>\n            </React.Fragment>\n          </DialogContent>\n        </TabContext>\n        <DialogActions>\n          <Button color=\"inherit\" variant=\"text\" onClick={onClose}>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        open={!!errorSnackbarMessage}\n        autoHideDuration={6000}\n        onClose={handleErrorSnackbarClose}\n      >\n        {errorSnackbarMessage ? (\n          <Alert onClose={handleErrorSnackbarClose} severity=\"error\">\n            {errorSnackbarMessage}\n          </Alert>\n        ) : undefined}\n      </Snackbar>\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\n\ninterface AzureIconProps {\n  size?: number;\n  color?: string;\n}\n\nexport default function AzureIcon({ size = 18, color = 'currentColor' }: AzureIconProps) {\n  return (\n    <svg viewBox=\"0 0 59.242 47.271\" width={size} height={size} xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"m32.368 0-17.468 15.145-14.9 26.75h13.437zm2.323 3.543-7.454 21.008 14.291 17.956-27.728 4.764h45.442z\"\n        fill={color}\n      />\n    </svg>\n  );\n}\n","import { ToolpadEditor } from '../toolpad/Toolpad';\n\nexport default ToolpadEditor;\n"],"mappings":"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","names":["CircularProgress","Box","styled","Button","Stack","Tooltip","React","useLocation","OpenInNewIcon","QueryClient","useBoolean","React","styled","useLocation","React","styled","appDom","React","styled","useEventCallback","appDom","React","styled","useEventCallback","Emitter","update","invariant","appDom","queryClient","React","invariant","React","dataSource","invariant","options","invariant","styled","useEventCallback","Emitter","update","React","update","React","styled","clsx","invariant","omit","appDom","React","styled","styled","React","styled","invariant","styled","OverlayGrid","invariant","React","styled","appDom","styled","React","styled","PinholeOverlay","appDom","styled","omit","invariant","clsx","styled","useEventCallback","TabContext","TabList","TabPanel","Tab","Box","styled","Typography","Link","React","appDom","Tooltip","Typography","Divider","Link","TextField","React","appDom","Typography","React","appDom","IconButton","React","DeleteIcon","React","Typography","TextField","React","appDom","React","appDom","TextField","TextField","React","appDom","TextField","IconButton","TextField","Tooltip","React","appDom","validateInput","TextField","Tooltip","IconButton","React","Button","Tooltip","styled","styled","Button","Tooltip","Typography","Tooltip","Link","TextField","Divider","Stack","styled","Typography","Divider","React","Box","React","Alert","Box","appDom","Stack","styled","React","createProvidedContext","TextField","React","React","Tooltip","React","TextField","Checkbox","FormControlLabel","React","FormControlLabel","Checkbox","TextField","React","TextField","TextField","React","TextField","Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","React","React","React","Button","Dialog","DialogTitle","DialogContent","Box","DialogActions","React","Typography","Typography","createProvidedContext","React","Box","Checkbox","Stack","Tooltip","Typography","styled","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","MenuItem","Autocomplete","Link","createProvidedContext","appDom","React","Skeleton","styled","React","Skeleton","styled","React","styled","IconButton","Tooltip","clsx","React","classes","styled","clsx","Tooltip","IconButton","React","mapValues","Typography","Divider","Box","styled","React","styled","Typography","Box","Divider","styled","createProvidedContext","styled","Tooltip","Typography","Box","Autocomplete","TextField","Stack","Link","defaultActionParameters","MenuItem","Dialog","DialogTitle","DialogContent","DialogActions","Button","Checkbox","styled","Stack","Box","Alert","React","useSuspenseQuery","useSuspenseQuery","classes","styled","Typography","Box","Divider","Stack","React","appDom","React","Box","Button","Stack","styled","ToggleButton","ToggleButtonGroup","useTheme","React","useTheme","Box","Tooltip","Typography","invariant","Stack","TooltipRadio","color","styled","styled","ToggleButton","useTheme","Button","Box","Stack","ToggleButtonGroup","ComponentEditor","classes","styled","TabContext","Box","TabList","Tab","TabPanel","Typography","Link","ComponentEditor","React","Box","IconButton","Link","styled","Typography","TextField","invariant","InputAdornment","appDom","React","Box","styled","AddIcon","LinkIcon","Button","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","Snackbar","TextField","React","invariant","useEventCallback","useLatest","appDom","React","styled","React","Button","IconButton","Dialog","DialogTitle","DialogContent","Link","DialogActions","Tooltip","Dialog","DialogTitle","DialogContent","Link","DialogActions","Button","Tooltip","IconButton","useEventCallback","useLatest","Dialog","invariant","DialogTitle","DialogContent","TextField","DialogActions","Button","Snackbar","IconButton","React","React","styled","Tooltip","styled","invariant","Box","TextField","InputAdornment","Typography","Link","IconButton","Box","Alert","React","React","React","Stack","Chip","Tab","IconButton","LinearProgress","LoadingButton","TabList","TabContext","TabPanel","appDom","React","styled","Box","Stack","TextField","InputAdornment","Alert","MenuItem","Typography","inputLabelClasses","inputBaseClasses","React","useBrowserJsRuntime","invariant","appDom","React","Box","Button","InputAdornment","MenuItem","Stack","Tab","TextField","Toolbar","Link","Typography","Alert","styled","Divider","inputLabelClasses","inputBaseClasses","LoadingButton","TabContext","TabList","React","Grid","MenuItem","Stack","TextField","Box","TextField","IconButton","React","DeleteIcon","Box","TextField","IconButton","DeleteIcon","React","Box","Divider","MenuItem","Skeleton","styled","TextField","Toolbar","Typography","inputLabelClasses","inputBaseClasses","TabContext","styled","Toolbar","Divider","Skeleton","TextField","inputLabelClasses","inputBaseClasses","MenuItem","TabContext","Box","Typography","React","errorFrom","Stack","Checkbox","FormControlLabel","IconButton","React","Stack","FormControlLabel","Checkbox","IconButton","React","TabPanel","TabContext","TabList","Box","IconButton","styled","Tab","darken","styled","clsx","React","classes","styled","darken","clsx","CircularProgress","styled","React","styled","TabPanel","TabContext","Box","IconButton","TabList","Tab","React","createProvidedContext","createProvidedContext","options","LinearProgress","Box","React","React","Alert","IconButton","Collapse","Box","styled","styled","AlertRoot","styled","Alert","IconButton","Collapse","Box","Box","LinearProgress","styled","TextField","InputAdornment","Stack","Typography","Toolbar","Box","Button","Alert","updateProp","TabContext","TabList","Tab","Link","Divider","MenuItem","inputLabelClasses","inputBaseClasses","LoadingButton","React","LoadingButton","Alert","Box","Divider","Stack","Tab","Link","Typography","PlayArrowIcon","TabContext","TabList","useBrowserJsRuntime","errorFrom","Grid","React","Autocomplete","Box","Button","Chip","Stack","styled","styled","Chip","options","Box","Autocomplete","Stack","Button","EMPTY_PARAMS","ResolvedPreview","Alert","PlayArrowIcon","QueryEditor","updateProp","useBrowserJsRuntime","errorFrom","TabContext","Stack","TabList","Tab","Typography","Link","Divider","Box","Grid","LoadingButton","getInitialQueryValue","dataSource","client_default","client_default","updateAttribute","Box","Stack","Typography","TextField","inputLabelClasses","inputBaseClasses","MenuItem","InputAdornment","dataSource","client_default","useBrowserJsRuntime","invariant","Alert","React","QueryEditor","Stack","TabContext","TabList","Tab","Chip","LoadingButton","IconButton","TabPanel","LinearProgress","classes","styled","QueryEditor","Box","React","React","styled","Box","Divider","Typography","appDom","React","styled","Box","IconButton","Stack","Tooltip","clsx","invariant","useBoolean","appDom","MenuItem","React","DeleteIcon","ContentCopyIcon","useLatest","appDom","LoadingButton","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","React","React","useLatest","MenuItem","ContentCopyIcon","DeleteIcon","React","Alert","CircularProgress","InputBase","Popover","Typography","alpha","styled","React","IconButton","Tooltip","Stack","Typography","styled","InputAdornment","TextField","AddIcon","styled","Stack","classes","useBoolean","Tooltip","Box","IconButton","clsx","invariant","React","clsx","Box","Typography","styled","IconButton","SimpleTreeView","TreeItem","treeItemClasses","useBoolean","appDom","MoreVertIcon","invariant","classes","styled","treeItemClasses","useBoolean","invariant","Box","IconButton","clsx","MoreVertIcon","Typography","TreeItem","SimpleTreeView","React","Divider","ListItemIcon","ListItemText","Menu","MenuItem","IconButton","MoreVertIcon","CodeIcon","useBoolean","React","Button","Dialog","DialogTitle","DialogContent","DialogActions","Dialog","DialogTitle","DialogContent","DialogActions","Button","useBoolean","IconButton","MoreVertIcon","Menu","Divider","MenuItem","ListItemIcon","CodeIcon","ListItemText","React","clsx","invariant","styled","Box","Button","IconButton","Typography","Popover","Stack","Link","SimpleTreeView","treeItemClasses","AddIcon","MoreVertIcon","useBoolean","appDom","classes","StyledTreeItem","styled","treeItemClasses","useBoolean","invariant","Box","IconButton","AddIcon","clsx","MoreVertIcon","Popover","Typography","Link","Stack","client_default","dataSource","Button","SimpleTreeView","styled","Box","Typography","Divider","Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","Skeleton","React","Skeleton","Button","Dialog","DialogTitle","DialogContent","Box","DialogActions","Box","Button","Checkbox","FormControlLabel","IconButton","ListItemText","Menu","MenuItem","Popover","Stack","TextField","Tooltip","Typography","React","AddIcon","DeleteIcon","useAppHost","React","ToggleButton","ToggleButtonGroup","styled","options","useAppHost","Stack","TextField","MenuItem","Box","Tooltip","FormControlLabel","Checkbox","Typography","Button","Popover","IconButton","AddIcon","Menu","DeleteIcon","ListItemText","Box","ToggleButton","ToggleButtonGroup","Typography","styled","toggleButtonClasses","React","PropControlToggleButtonGroup","styled","ToggleButtonGroup","toggleButtonClasses","SelectPropEditor","Box","Typography","ToggleButton","Button","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","List","ListItem","ListItemButton","ListItemText","Stack","TextField","React","DeleteIcon","ArrowBackIcon","Button","Dialog","DialogTitle","IconButton","ArrowBackIcon","DialogContent","Stack","TextField","List","ListItem","DeleteIcon","ListItemButton","ListItemText","DialogActions","React","Autocomplete","Box","Button","IconButton","List","ListItem","ListItemButton","ListItemText","MenuItem","Popover","Stack","TextField","Typography","AddIcon","useBrowserJsRuntime","DeleteIcon","ContentCopyIcon","evaluateBindable","appDom","Box","IconButton","InputAdornment","Popover","TextField","React","IconButton","Box","Popover","TextField","InputAdornment","useBrowserJsRuntime","evaluateBindable","List","ListItem","ListItemButton","ListItemText","IconButton","ContentCopyIcon","DeleteIcon","Button","AddIcon","Popover","Box","Typography","Stack","TextField","MenuItem","Autocomplete","React","React","ToggleButton","ToggleButtonGroup","Typography","Typography","ToggleButtonGroup","ToggleButton","React","ToggleButton","ToggleButtonGroup","Typography","Typography","ToggleButtonGroup","ToggleButton","React","NumberFormatEditor","NumberFormatEditor","React","Box","Stack","Popover","Button","IconButton","List","ListItem","Input","Typography","styled","AddIcon","DeleteIcon","styled","ListItem","Typography","Input","IconButton","DeleteIcon","Stack","Box","List","Button","AddIcon","Popover","React","Autocomplete","TextField","styled","autocompleteClasses","DialogContentText","DialogContent","DialogTitle","Dialog","DialogActions","Button","Box","FormControl","FormLabel","FormControlLabel","Radio","Stack","errorFrom","AddIcon","LoadingButton","generateUniqueString","handleInputFocus","classes","styled","autocompleteClasses","options","errorMessage","errorFrom","Dialog","DialogTitle","DialogContent","DialogContentText","Stack","TextField","FormControl","FormLabel","FormControlLabel","Radio","DialogActions","Button","LoadingButton","Autocomplete","generateUniqueString","AddIcon","Box","Box","Grid","Typography","Button","React","useBoolean","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","React","invariant","useEventCallback","appDom","DEFAULT_NAME","useEventCallback","Dialog","invariant","DialogTitle","DialogContent","TextField","DialogActions","Button","useBoolean","Grid","Typography","Button","classes","EditorRoot","styled","useLocation","Editor","React","createTheme","createTheme","React","Stack","styled","React","Box","Toolbar","Tooltip","Chip","Link","useTheme","React","Chip","Divider","ListItemText","IconButton","Menu","MenuItem","Tooltip","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Box","OpenInNewIcon","invariant","useBoolean","Box","MenuItem","ListItemText","OpenInNewIcon","invariant","useBoolean","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","Tooltip","IconButton","Menu","Divider","Chip","React","IconButton","Menu","MenuItem","ListItemText","ListItemIcon","Tooltip","Tooltip","IconButton","Menu","MenuItem","ListItemIcon","ListItemText","useTheme","Toolbar","Box","Tooltip","Link","Chip","React","styled","ListItem","Toolbar","List","Stack","IconButton","Tooltip","Link","matchPath","useLocation","styled","Stack","React","Box","Portal","Skeleton","IconButton","styled","Stack","useTheme","alpha","Typography","Button","Link","Snackbar","Toolbar","errorFrom","treeItemClasses","TreeItem","SimpleTreeView","AddIcon","CloseIcon","JavascriptIcon","PlayArrowIcon","useBoolean","useQuery","usePageTitle","appDom","styled","treeItemClasses","alpha","useBoolean","JavascriptIcon","TreeItem","usePageTitle","useTheme","useQuery","errorFrom","Box","Stack","SimpleTreeView","Typography","Button","AddIcon","Skeleton","Toolbar","PlayArrowIcon","Link","Portal","Snackbar","IconButton","CloseIcon","React","Alert","Box","Button","Checkbox","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","FormHelperText","Link","MenuItem","Snackbar","Stack","Tab","TextField","Tooltip","Typography","DeleteIcon","AddIcon","TabContext","TabList","updateArray","appDom","invariant","React","updateArray","Stack","Typography","FormControl","MenuItem","Checkbox","FormHelperText","Alert","Link","TextField","invariant","Button","AddIcon","Tooltip","DeleteIcon","Dialog","DialogTitle","TabContext","Box","TabList","Tab","DialogContent","DialogActions","Snackbar","styled","CircularProgress","Tooltip","useLocation","useBoolean","Stack","Button","OpenInNewIcon","queryClient","QueryClient","Box","Editor"]}