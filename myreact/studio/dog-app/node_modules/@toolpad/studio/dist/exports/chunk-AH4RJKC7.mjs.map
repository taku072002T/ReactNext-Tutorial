{"version":3,"sources":["../../src/runtime/CanvasHooksContext.tsx","../../src/runtime/globalState.ts","../../src/runtime/ToolpadApp.tsx","../../src/runtime/bindings.ts","../../src/runtime/AppThemeProvider.tsx","../../src/runtime/evalJsBindings.ts","../../src/runtime/toolpadComponents/layoutBox.ts","../../src/runtime/useDataQuery.ts","../../src/runtime/api.ts","../../src/rpcClient.ts","../../src/runtime/PreviewHeader.tsx","../../src/runtime/AppLayout.tsx","../../src/runtime/useAuth.ts","../../src/runtime/useDataProvider.ts","../../src/runtime/auth.tsx","../../src/runtime/SignInPage.tsx"],"sourcesContent":["import { ComponentConfig, NodeHashes } from '@toolpad/studio-runtime';\nimport * as React from 'react';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\n\nexport interface NavigateToPage {\n  (name: string, pageParameters?: Record<string, string>): void;\n}\n\n/**\n * Context created by the app canvas to override behavior for the app editor\n */\nexport interface CanvasHooks {\n  savedNodes?: NodeHashes;\n  registerNode?: (\n    node: appDom.AppDomNode,\n    props: Record<string, unknown>,\n    componentConfig: ComponentConfig,\n    elm: Element | undefined,\n  ) => () => void;\n  overlayRef?: (elm: HTMLDivElement) => void;\n}\n\nexport const CanvasHooksContext = React.createContext<CanvasHooks>({});\n","import { ToolpadComponents } from '@toolpad/studio-runtime';\nimport { createGlobalState } from '@toolpad/utils/react';\n\nexport const componentsStore = createGlobalState<ToolpadComponents>({});\n","'use client';\n\nimport * as React from 'react';\nimport {\n  Stack,\n  CssBaseline,\n  Alert,\n  Box,\n  styled,\n  AlertTitle,\n  LinearProgress,\n  Container,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport {\n  ToolpadComponent,\n  createComponent,\n  TOOLPAD_COMPONENT,\n  Slots,\n  Placeholder,\n  NodeId,\n  BindableAttrValue,\n  NestedBindableAttrs,\n  BindingEvaluationResult,\n  ScopeMeta,\n  getArgTypeDefaultValue,\n  ScopeMetaPropField,\n  ComponentsContextProvider,\n  isToolpadComponent,\n  createToolpadComponentThatThrows,\n  useComponents,\n  useComponent,\n  RuntimeScope,\n  ApplicationVm,\n  JsExpressionAttrValue,\n  ComponentConfig,\n  CanvasEventsContext,\n  NodeErrorProps,\n  NodeRuntimeWrapper,\n  ResetNodeErrorsKeyProvider,\n  UseDataProviderContext,\n  AppHost,\n  useAppHost,\n} from '@toolpad/studio-runtime';\nimport { useAssertedContext, useNonNullableContext } from '@toolpad/utils/react';\nimport { mapProperties, mapValues } from '@toolpad/utils/collections';\nimport { set as setObjectPath } from 'lodash-es';\nimport { useMutation } from '@tanstack/react-query';\nimport {\n  Routes,\n  Route,\n  useLocation,\n  Navigate,\n  Location as RouterLocation,\n  useNavigate,\n  useMatch,\n  useParams,\n  Outlet,\n  BrowserRouter,\n} from 'react-router-dom';\nimport { ErrorBoundary, FallbackProps } from 'react-error-boundary';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { getBrowserRuntime } from '@toolpad/studio-runtime/jsBrowserRuntime';\nimport * as builtIns from '@toolpad/studio-components';\nimport { errorFrom } from '@toolpad/utils/errors';\nimport useBoolean from '@toolpad/utils/hooks/useBoolean';\nimport usePageTitle from '@toolpad/utils/hooks/usePageTitle';\nimport invariant from 'invariant';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport useSsr from '@toolpad/utils/hooks/useSsr';\nimport { RuntimeState } from './types';\nimport { getBindingType, getBindingValue } from './bindings';\nimport {\n  getElementNodeComponentId,\n  isPageLayoutComponent,\n  isPageRow,\n  PAGE_ROW_COMPONENT_ID,\n} from './toolpadComponents';\nimport AppThemeProvider from './AppThemeProvider';\nimport evalJsBindings, {\n  buildGlobalScope,\n  EvaluatedBinding,\n  ParsedBinding,\n} from './evalJsBindings';\nimport { layoutBoxArgTypes } from './toolpadComponents/layoutBox';\nimport { useDataQuery, UseFetch } from './useDataQuery';\nimport { CanvasHooksContext, NavigateToPage } from './CanvasHooksContext';\nimport PreviewHeader from './PreviewHeader';\nimport { AppLayout } from './AppLayout';\nimport { useDataProvider } from './useDataProvider';\nimport { RuntimeApiContext, createApi } from './api';\nimport { AuthContext, useAuth, AuthSession } from './useAuth';\nimport { RequireAuthorization } from './auth';\nimport SignInPage from './SignInPage';\nimport { componentsStore } from './globalState';\n\nconst browserJsRuntime = getBrowserRuntime();\n\nconst Pre = styled('pre')(({ theme }) => ({\n  margin: 0,\n  fontFamily: theme.fontFamilyMonospaced,\n}));\n\nconst internalComponents: ToolpadComponents = Object.fromEntries(\n  Object.entries(builtIns).map(([name, builtIn]) => {\n    if (!isToolpadComponent(builtIn)) {\n      builtIn = createToolpadComponentThatThrows(\n        new Error(`Imported builtIn \"${name}\" is not a ToolpadComponent`),\n      );\n    }\n    return [name, builtIn] as [string, ToolpadComponent];\n  }),\n);\n\nconst ReactQueryDevtoolsProduction = React.lazy(() =>\n  import('@tanstack/react-query-devtools/production').then((d) => ({\n    default: d.ReactQueryDevtools,\n  })),\n);\n\nconst EMPTY_ARRAY: any[] = [];\nconst EMPTY_OBJECT: any = {};\n\nconst INITIAL_FETCH: UseFetch = {\n  call: async () => {},\n  refetch: async () => {},\n  fetch: async () => {},\n  isLoading: false,\n  isFetching: false,\n  error: null,\n  data: null,\n  rows: [],\n};\n\nfunction usePageNavigator(): NavigateToPage {\n  const navigate = useNavigate();\n\n  const canvasEvents = React.useContext(CanvasEventsContext);\n\n  const navigateToPage: NavigateToPage = React.useCallback(\n    (pageName, pageParameters) => {\n      const urlParams = pageParameters && new URLSearchParams(pageParameters);\n\n      if (canvasEvents) {\n        canvasEvents.emit('pageNavigationRequest', { pageName });\n      } else {\n        navigate({\n          pathname: `/pages/${pageName}`,\n          ...(urlParams\n            ? {\n                search: urlParams.toString(),\n              }\n            : {}),\n        });\n      }\n    },\n    [canvasEvents, navigate],\n  );\n\n  return navigateToPage;\n}\n\nfunction isEqual(\n  a: BindingEvaluationResult<unknown>,\n  b: BindingEvaluationResult<unknown>,\n): boolean {\n  return a.value === b.value && !!a.error === !!b.error && a.loading === b.loading;\n}\n\nconst AppRoot = styled('div')({\n  overflow: 'auto' /* Prevents margins from collapsing into root */,\n  position: 'relative' /* Makes sure that the editor overlay that renders inside sizes correctly */,\n  display: 'flex',\n  flex: 1,\n  flexDirection: 'column',\n});\n\nconst EditorOverlay = styled('div')({\n  position: 'absolute',\n  inset: '0 0 0 0',\n  pointerEvents: 'none',\n  overflow: 'hidden',\n});\n\ntype ToolpadComponents = Partial<Record<string, ToolpadComponent<any>>>;\n\ninterface CreateScopeParams {\n  parentScope?: RuntimeScope;\n  localValues?: Record<string, unknown> | undefined;\n  meta: ScopeMeta;\n}\n\nfunction createScope(\n  id: string,\n  bindings: Record<string, ParsedBinding | EvaluatedBinding<unknown>>,\n  { localValues, parentScope, meta = {} }: CreateScopeParams,\n): RuntimeScope {\n  const scopeValues = { ...parentScope?.values, ...localValues };\n\n  const evaluatedBindings = evalJsBindings(browserJsRuntime, bindings, scopeValues);\n\n  return {\n    id,\n    parentScope,\n    bindings: mapValues(evaluatedBindings, (binding) => binding.result || { value: undefined }),\n    values: buildGlobalScope(scopeValues, evaluatedBindings),\n    meta,\n  };\n}\n\ntype ApplicationVmApi = {\n  registerScope: (scope: RuntimeScope) => () => void;\n  registerBindingScope: (bindingId: string, scope: RuntimeScope) => () => void;\n};\n\nfunction useApplicationVm(onUpdate: (registry: ApplicationVm) => void) {\n  const vm: ApplicationVm = { scopes: {}, bindingScopes: {} };\n\n  let scheduledUpdate: Promise<void> | undefined;\n  const scheduleUpdate = () => {\n    if (scheduledUpdate) {\n      return;\n    }\n    scheduledUpdate = Promise.resolve().then(async () => {\n      onUpdate(vm);\n      // We seem to be hitting https://github.com/facebook/react/issues/24650\n      // In the pageEditorReducer unless we schedule the next one in a new microtask\n      await Promise.resolve();\n      scheduledUpdate = undefined;\n    });\n  };\n\n  return React.useRef<ApplicationVmApi>({\n    registerScope(scope: RuntimeScope) {\n      if (vm.scopes[scope.id]) {\n        throw new Error(`Scope with id \"${scope.id}\" already registered`);\n      }\n      vm.scopes[scope.id] = scope;\n      scheduleUpdate();\n      return () => {\n        delete vm.scopes[scope.id];\n        scheduleUpdate();\n      };\n    },\n    registerBindingScope(bindingId: string, scope: RuntimeScope) {\n      if (vm.bindingScopes[bindingId]) {\n        return () => {};\n      }\n      vm.bindingScopes[bindingId] = scope.id;\n      scheduleUpdate();\n      return () => {\n        delete vm.bindingScopes[bindingId];\n        scheduleUpdate();\n      };\n    },\n  });\n}\n\nconst ApplicationVmApiContext = React.createContext<\n  React.MutableRefObject<ApplicationVmApi> | undefined\n>(undefined);\nconst RuntimeScopeContext = React.createContext<RuntimeScope | undefined>(undefined);\n\nconst DomContext = React.createContext<appDom.AppDom | undefined>(undefined);\nconst useDomContext = () => useNonNullableContext(DomContext);\n\ntype EvaluateScopeExpression = (expr: string) => any;\nconst EvaluateScopeExpressionContext = React.createContext<EvaluateScopeExpression | undefined>(\n  undefined,\n);\nconst useEvaluateScopeExpression = () => useNonNullableContext(EvaluateScopeExpressionContext);\n\ninterface SetBindingContextValue {\n  setBinding: (id: string, result: BindingEvaluationResult, scopeId?: string) => void;\n  setControlledBinding: (id: string, result: BindingEvaluationResult, scopeId?: string) => void;\n  setBindingByScopePath: (\n    scopePath: string,\n    result: BindingEvaluationResult,\n    scopeId?: string,\n  ) => void;\n}\n\nconst SetBindingContext = React.createContext<SetBindingContextValue | undefined>(undefined);\n\nfunction getComponentId(elm: appDom.ElementNode): string {\n  const componentId = getElementNodeComponentId(elm);\n  return componentId;\n}\n\n/**\n * Turns an object consisting of a nested structure of BindableAttrValues\n * into a flat array of relative paths associated with their value.\n * Example:\n *   { foo: { bar: 1 }, baz: [{ $$jsExpression: 'quux' }] }\n *   =>\n *   [\n *    ['.foo.bar', 1],\n *    ['.baz[0]', { $$jsExpression: 'quux' }]\n *   ]\n */\nfunction flattenNestedBindables(\n  params?: NestedBindableAttrs,\n  prefix = '',\n): [string, BindableAttrValue<any>][] {\n  if (!params) {\n    return [];\n  }\n  if (Array.isArray(params)) {\n    return params.flatMap((param, i) => {\n      return flattenNestedBindables(param[1], `${prefix}[${i}][1]`);\n    });\n  }\n  // TODO: create a marker in bindables (similar to $ref) to recognize them automatically\n  // in a nested structure. This would allow us to build deeply nested structures\n  if (typeof params !== 'object' || getBindingType(params) !== 'const') {\n    return [[prefix, params as BindableAttrValue<any>]];\n  }\n  return Object.entries(params).flatMap(([key, param]) =>\n    flattenNestedBindables(param, `${prefix}.${key}`),\n  );\n}\n\n/**\n * Returns an object with the resolved values of the bindables.\n * Example bindings:\n * {\n *  'nodeId.params.order': { error: undefined, loading: false, value: { \"OrderID\": \"\" } },\n * }\n * Example bindingId: 'nodeId.params'\n * Example params:\n * {\n * [\"order\", { $$jsExpression: 'form.value\\n' }]\n * }\n * Example result:\n * {\n * order: { \"OrderID\": \"\" }\n * }\n */\n\nfunction resolveBindables(\n  bindings: Partial<Record<string, BindingEvaluationResult>>,\n  bindingId: string,\n  params?: NestedBindableAttrs,\n): BindingEvaluationResult<Record<string, unknown>> {\n  const result: any = {};\n  const resultKey = 'value';\n  const flattened = flattenNestedBindables(params);\n\n  for (const [path] of flattened) {\n    const resolvedBinding = bindings[`${bindingId}${path}`];\n\n    if (resolvedBinding?.error) {\n      return { error: resolvedBinding?.error };\n    }\n    if (resolvedBinding?.loading) {\n      return { loading: true };\n    }\n\n    setObjectPath(result, `${resultKey}${path}`, resolvedBinding?.value);\n  }\n\n  return { value: result[resultKey] || {} };\n}\n\ninterface ParseBindingOptions {\n  scopePath?: string;\n}\n\nfunction parseBinding(\n  bindable: BindableAttrValue<any>,\n  { scopePath }: ParseBindingOptions = {},\n): ParsedBinding | EvaluatedBinding {\n  const bindingType = getBindingType(bindable);\n\n  if (bindingType === 'const') {\n    return {\n      scopePath,\n      result: { value: bindable },\n    };\n  }\n\n  if (bindingType === 'env') {\n    return {\n      scopePath,\n      result: { value: bindable },\n    };\n  }\n  if (bindingType === 'jsExpression') {\n    return {\n      scopePath,\n      expression: bindable.$$jsExpression,\n    };\n  }\n  return {\n    scopePath,\n    result: { value: undefined },\n  };\n}\n\n/**\n * Returns all elements for the current scope. This includes the root node and all of its descendants.\n * Templates are not included.\n */\nfunction getScopeElements(\n  dom: appDom.AppDom,\n  rootNode: appDom.AppDomNode | appDom.AppDomNode[],\n  components: ToolpadComponents,\n): readonly appDom.AppDomNode[] {\n  if (Array.isArray(rootNode)) {\n    return [...rootNode, ...rootNode.flatMap((child) => getScopeElements(dom, child, components))];\n  }\n\n  const childNodes = appDom.getChildNodes(dom, rootNode);\n  const result: appDom.AppDomNode[] = [];\n\n  for (const [prop, children] of Object.entries(childNodes) as [string, appDom.AppDomNode[]][]) {\n    if (appDom.isElement(rootNode)) {\n      const componentId = getComponentId(rootNode);\n      const Component = components[componentId];\n      const componentConfig = Component?.[TOOLPAD_COMPONENT];\n      const { argTypes = {} } = componentConfig ?? {};\n\n      if (argTypes[prop]?.type !== 'template') {\n        result.push(\n          ...children,\n          ...children.flatMap((child) => getScopeElements(dom, child, components)),\n        );\n      }\n    } else {\n      result.push(\n        ...children,\n        ...children.flatMap((child) => getScopeElements(dom, child, components)),\n      );\n    }\n  }\n\n  return result;\n}\n\nfunction getQueryConfigBindings({ enabled, refetchInterval }: appDom.QueryNode['attributes']) {\n  return { enabled, refetchInterval };\n}\n\nfunction isBindableProp(componentConfig: ComponentConfig<any>, propName: string) {\n  const argType = componentConfig.argTypes?.[propName];\n  return (\n    argType?.control?.bindable !== false &&\n    argType?.type !== 'template' &&\n    argType?.type !== 'event'\n  );\n}\n\nfunction parseBindings(\n  dom: appDom.AppDom,\n  rootNode: appDom.ElementNode | appDom.PageNode | appDom.ElementNode[],\n  components: ToolpadComponents,\n  location: RouterLocation,\n) {\n  const scopeElements = getScopeElements(dom, rootNode, components);\n\n  const parsedBindingsMap = new Map<string, ParsedBinding | EvaluatedBinding>();\n  const controlled = new Set<string>();\n  const scopeMeta: ScopeMeta = {};\n\n  for (const elm of scopeElements) {\n    if (appDom.isElement<any>(elm)) {\n      const componentId = getComponentId(elm);\n      const Component = components[componentId];\n\n      const componentConfig: ComponentConfig<any> = Component?.[TOOLPAD_COMPONENT] ?? {};\n\n      const { argTypes = {} } = componentConfig;\n\n      const propsMeta: Record<string, ScopeMetaPropField> = {};\n\n      for (const [propName, argType] of Object.entries(argTypes)) {\n        invariant(argType, `Missing argType for prop \"${propName}\"`);\n\n        const initializerExpression = argType.defaultValueProp\n          ? `${elm.name}.${argType.defaultValueProp}`\n          : JSON.stringify(getArgTypeDefaultValue(argType));\n\n        const propValue: BindableAttrValue<any> = elm.props?.[propName];\n\n        const binding: BindableAttrValue<any> = propValue ?? getArgTypeDefaultValue(argType);\n\n        const bindingId = `${elm.id}.props.${propName}`;\n\n        let scopePath: string | undefined;\n\n        if (componentId !== PAGE_ROW_COMPONENT_ID && isBindableProp(componentConfig, propName)) {\n          scopePath = `${elm.name}.${propName}`;\n        }\n\n        propsMeta[propName] = {\n          tsType: argType?.tsType,\n        };\n\n        if (argType) {\n          if (argType.onChangeProp) {\n            controlled.add(bindingId);\n            parsedBindingsMap.set(bindingId, {\n              scopePath,\n              initializer: initializerExpression,\n            });\n          } else {\n            parsedBindingsMap.set(bindingId, parseBinding(binding, { scopePath }));\n          }\n        }\n\n        const parseNestedBindings = (value: unknown, parentBindingId: string) => {\n          if (value && typeof value === 'object') {\n            for (const [nestedPropName, nestedProp] of Object.entries(value)) {\n              const nestedBindingId = `${parentBindingId}${\n                Array.isArray(value) ? `[${nestedPropName}]` : `.${nestedPropName}`\n              }`;\n\n              if (nestedProp && getBindingType(nestedProp) !== 'const') {\n                parsedBindingsMap.set(nestedBindingId, parseBinding(nestedProp));\n              } else {\n                parseNestedBindings(\n                  (value as Record<string, unknown>)[nestedPropName],\n                  nestedBindingId,\n                );\n              }\n            }\n          }\n        };\n\n        const propBindingValue = propValue && getBindingValue(propValue);\n        parseNestedBindings(propBindingValue, bindingId);\n      }\n\n      if (componentId !== PAGE_ROW_COMPONENT_ID) {\n        scopeMeta[elm.name] = {\n          kind: 'element',\n          componentId,\n          props: propsMeta,\n        };\n      }\n\n      if (!isPageLayoutComponent(elm)) {\n        for (const [propName, argType] of Object.entries(layoutBoxArgTypes)) {\n          const binding =\n            elm.layout?.[propName as keyof typeof layoutBoxArgTypes] ??\n            (argType ? getArgTypeDefaultValue(argType) : undefined);\n          const bindingId = `${elm.id}.layout.${propName}`;\n          parsedBindingsMap.set(bindingId, parseBinding(binding, {}));\n        }\n      }\n    }\n\n    if (appDom.isQuery(elm)) {\n      let kind: 'query' | 'action' = 'query';\n      if (elm.attributes.mode === 'mutation') {\n        kind = 'action';\n      }\n      scopeMeta[elm.name] = {\n        kind,\n      };\n\n      if (elm.params) {\n        const nestedBindablePaths = flattenNestedBindables(Object.fromEntries(elm.params ?? []));\n\n        for (const [nestedPath, paramValue] of nestedBindablePaths) {\n          const bindingId = `${elm.id}.params${nestedPath}`;\n          const scopePath = `${elm.name}.params${nestedPath}`;\n          const bindable = paramValue;\n          parsedBindingsMap.set(bindingId, parseBinding(bindable, { scopePath }));\n        }\n      }\n\n      for (const [key, value] of Object.entries(INITIAL_FETCH)) {\n        const bindingId = `${elm.id}.${key}`;\n        const scopePath = `${elm.name}.${key}`;\n        controlled.add(bindingId);\n        parsedBindingsMap.set(bindingId, {\n          scopePath,\n          result: { value, loading: true },\n        });\n      }\n\n      const configBindings = getQueryConfigBindings(elm.attributes);\n      const nestedBindablePaths = flattenNestedBindables(configBindings);\n\n      for (const [nestedPath, paramValue] of nestedBindablePaths) {\n        const bindingId = `${elm.id}.config${nestedPath}`;\n        const scopePath = `${elm.name}.config${nestedPath}`;\n        const bindable = paramValue;\n        parsedBindingsMap.set(bindingId, parseBinding(bindable, { scopePath }));\n      }\n    }\n\n    if (appDom.isMutation(elm)) {\n      if (elm.params) {\n        for (const [paramName, bindable] of Object.entries(elm.params)) {\n          const bindingId = `${elm.id}.params.${paramName}`;\n          const scopePath = `${elm.name}.params.${paramName}`;\n\n          const bindingType = getBindingType(bindable);\n          if (bindingType === 'const') {\n            parsedBindingsMap.set(bindingId, {\n              scopePath,\n              result: { value: bindable },\n            });\n          } else if (bindingType === 'jsExpression') {\n            parsedBindingsMap.set(bindingId, {\n              scopePath,\n              expression: (bindable as JsExpressionAttrValue).$$jsExpression,\n            });\n          }\n        }\n      }\n\n      for (const [key, value] of Object.entries(INITIAL_FETCH)) {\n        const bindingId = `${elm.id}.${key}`;\n        const scopePath = `${elm.name}.${key}`;\n        controlled.add(bindingId);\n        parsedBindingsMap.set(bindingId, {\n          scopePath,\n          result: { value, loading: true },\n        });\n      }\n    }\n  }\n\n  if (!Array.isArray(rootNode) && appDom.isPage(rootNode)) {\n    if (location && !Array.isArray(rootNode) && appDom.isPage(rootNode)) {\n      const urlParams = new URLSearchParams(location.search);\n      const pageParameters = rootNode.attributes.parameters || [];\n\n      for (const [paramName, paramDefault] of pageParameters) {\n        const bindingId = `${rootNode.id}.parameters.${paramName}`;\n        const scopePath = `page.parameters.${paramName}`;\n        parsedBindingsMap.set(bindingId, {\n          scopePath,\n          result: { value: urlParams.get(paramName) || paramDefault },\n        });\n      }\n    }\n  }\n\n  const parsedBindings: Record<string, ParsedBinding | EvaluatedBinding> =\n    Object.fromEntries(parsedBindingsMap);\n\n  return { parsedBindings, controlled, scopeMeta };\n}\n\nfunction useElmToolpadComponent(elm: appDom.ElementNode): ToolpadComponent {\n  const componentId = getElementNodeComponentId(elm);\n  return useComponent(componentId);\n}\n\nfunction RenderedNode({ nodeId }: RenderedNodeProps) {\n  const dom = useDomContext();\n  const node = appDom.getNode(dom, nodeId, 'element');\n  const Component: ToolpadComponent<any> = useElmToolpadComponent(node);\n  const childNodeGroups = appDom.getChildNodes(dom, node);\n\n  return (\n    <RenderedNodeContent node={node} childNodeGroups={childNodeGroups} Component={Component} />\n  );\n}\n\ninterface RuntimeScopedProps {\n  id: string;\n  parseBindingsResult: ReturnType<typeof parseBindings>;\n  localScope?: Record<string, unknown>;\n  onUpdate?: (params: { scope: RuntimeScope; scopeMeta: ScopeMeta }) => void;\n  children?: React.ReactNode;\n}\n\nfunction RuntimeScoped({\n  id,\n  parseBindingsResult,\n  localScope,\n  onUpdate,\n  children,\n}: RuntimeScopedProps) {\n  const parentScope = React.useContext(RuntimeScopeContext);\n  const dom = useDomContext();\n\n  const { parsedBindings, controlled, scopeMeta } = parseBindingsResult;\n\n  const [scopeBindings, setScopeBindings] =\n    React.useState<Record<string, ParsedBinding | EvaluatedBinding>>(parsedBindings);\n\n  const prevDom = React.useRef(dom);\n  React.useEffect(() => {\n    if (dom === prevDom.current) {\n      // Ignore this effect if there are no dom updates.\n      // IMPORTANT!!! This assumes the `RenderedPage` component is remounted when the `nodeId` changes\n      //  <RenderedPage nodeId={someId} key={someId} />\n      return;\n    }\n    prevDom.current = dom;\n\n    setScopeBindings((existingBindings) => {\n      // Make sure to patch page bindings after dom nodes have been added or removed\n      const updated: Record<string, ParsedBinding | EvaluatedBinding> = {};\n      for (const [key, binding] of Object.entries(parsedBindings)) {\n        updated[key] = controlled.has(key) ? existingBindings[key] || binding : binding;\n      }\n      return updated;\n    });\n  }, [parsedBindings, controlled, dom]);\n\n  const { setBindingByScopePath: setParentBindingByScopePath } =\n    React.useContext(SetBindingContext) ?? {};\n\n  const setBinding = React.useCallback(\n    (bindingId: string, result: BindingEvaluationResult) => {\n      setScopeBindings((existingBindings): Record<string, ParsedBinding | EvaluatedBinding> => {\n        const { expression, initializer, ...parsedBinding } = parsedBindings[bindingId];\n        const existingBinding = existingBindings[bindingId];\n\n        if (existingBinding?.result && isEqual(existingBinding.result, result)) {\n          return existingBindings;\n        }\n\n        return {\n          ...existingBindings,\n          ...{\n            [bindingId]: { ...parsedBinding, result },\n          },\n        };\n      });\n    },\n    [parsedBindings],\n  );\n\n  const bindingsByScopePath = React.useMemo(\n    () =>\n      new Map<string, string>(\n        Object.entries(scopeBindings).map(\n          ([bindingId, binding]) => [binding.scopePath, bindingId] as [string, string],\n        ),\n      ),\n    [scopeBindings],\n  );\n\n  const setBindingByScopePath = React.useCallback(\n    (scopePath: string, result: BindingEvaluationResult) => {\n      const bindingToUpdateId = bindingsByScopePath.get(scopePath);\n      if (bindingToUpdateId) {\n        setBinding(bindingToUpdateId, result);\n      } else if (setParentBindingByScopePath) {\n        setParentBindingByScopePath(scopePath, result);\n      } else {\n        throw new Error(`No binding found for scope path \"${scopePath}\"`);\n      }\n    },\n    [bindingsByScopePath, setBinding, setParentBindingByScopePath],\n  );\n\n  const setControlledBinding = React.useCallback(\n    (bindingId: string, result: BindingEvaluationResult) => {\n      if (!controlled.has(bindingId)) {\n        throw new Error(`Not a controlled binding \"${bindingId}\"`);\n      }\n\n      setBinding(bindingId, result);\n    },\n    [controlled, setBinding],\n  );\n\n  const childScope = React.useMemo(\n    () =>\n      createScope(id, scopeBindings, {\n        localValues: localScope,\n        parentScope,\n        meta: scopeMeta,\n      }),\n    [id, localScope, parentScope, scopeBindings, scopeMeta],\n  );\n\n  const vmRef = React.useContext(ApplicationVmApiContext);\n  React.useEffect(() => {\n    if (!vmRef) {\n      return () => {};\n    }\n    return vmRef.current.registerScope(childScope);\n  }, [vmRef, childScope]);\n\n  const evaluateScopeExpression = React.useCallback(\n    async (expression: string) => {\n      const updates: Record<string, unknown> = {};\n\n      const proxify = <T extends object>(obj: T, scopePathSegments: string[]): T => {\n        return new Proxy(obj, {\n          get(target, prop, receiver) {\n            if (typeof prop === 'symbol') {\n              return Reflect.get(target, prop, receiver);\n            }\n\n            const result = target[prop as keyof T];\n\n            if (result && typeof result === 'object') {\n              return proxify(result, [...scopePathSegments, prop]);\n            }\n\n            return Reflect.get(target, prop, receiver);\n          },\n          set(target, prop, newValue, receiver) {\n            if (typeof prop === 'symbol') {\n              return Reflect.set(target, prop, newValue, receiver);\n            }\n\n            const scopePath = [...scopePathSegments, prop].join('.');\n            updates[scopePath] = newValue;\n            return Reflect.set(target, prop, newValue, receiver);\n          },\n        });\n      };\n\n      const scopeValues = childScope.values;\n      const result = browserJsRuntime.evaluateExpression(expression, proxify(scopeValues, []));\n\n      await result.value;\n\n      for (const [scopePath, newValue] of Object.entries(updates)) {\n        setBindingByScopePath(scopePath, { value: newValue });\n      }\n\n      return result;\n    },\n    [childScope.values, setBindingByScopePath],\n  );\n\n  React.useEffect(() => {\n    onUpdate?.({\n      scopeMeta,\n      scope: childScope,\n    });\n  }, [scopeMeta, childScope, onUpdate]);\n\n  const setBindingContext = React.useMemo<SetBindingContextValue>(\n    () => ({\n      setBinding,\n      setControlledBinding,\n      setBindingByScopePath,\n    }),\n    [setBinding, setControlledBinding, setBindingByScopePath],\n  );\n\n  return (\n    <RuntimeScopeContext.Provider value={childScope}>\n      <SetBindingContext.Provider value={setBindingContext}>\n        <EvaluateScopeExpressionContext.Provider value={evaluateScopeExpression}>\n          {children}\n        </EvaluateScopeExpressionContext.Provider>\n      </SetBindingContext.Provider>\n    </RuntimeScopeContext.Provider>\n  );\n}\n\ninterface TemplateScopedProps {\n  id: string;\n  propName: string;\n  node: appDom.ElementNode;\n  localScope: Record<string, unknown>;\n  children?: React.ReactNode;\n}\n\nfunction TemplateScoped({ id, node, localScope, propName, children }: TemplateScopedProps) {\n  const dom = useDomContext();\n  const components = useComponents();\n  const location = useLocation();\n\n  const parseBindingsResult = React.useMemo(() => {\n    const { [propName]: templateChildren = [] } = appDom.getChildNodes(dom, node);\n    return parseBindings(dom, templateChildren, components, location);\n  }, [components, dom, node, propName, location]);\n\n  return (\n    <RuntimeScoped id={id} parseBindingsResult={parseBindingsResult} localScope={localScope}>\n      {children}\n    </RuntimeScoped>\n  );\n}\n\nfunction NodeError({ error }: NodeErrorProps) {\n  return (\n    <Tooltip title={error.message}>\n      <span\n        style={{\n          display: 'inline-flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          padding: 8,\n          background: 'red',\n          color: 'white',\n        }}\n      >\n        <ErrorIcon color=\"inherit\" style={{ marginRight: 8 }} /> Error\n      </span>\n    </Tooltip>\n  );\n}\n\ninterface RenderedNodeContentProps {\n  node: appDom.PageNode | appDom.ElementNode;\n  childNodeGroups: appDom.NodeChildren<appDom.ElementNode>;\n  Component: ToolpadComponent<any>;\n  staticProps?: Record<string, any>;\n}\n\nfunction RenderedNodeContent({\n  node,\n  childNodeGroups,\n  Component,\n  staticProps,\n}: RenderedNodeContentProps) {\n  const { setControlledBinding } = React.useContext(SetBindingContext) ?? {};\n  invariant(setControlledBinding, 'Node must be rendered in a RuntimeScoped context');\n\n  const nodeId = node.id;\n\n  const componentConfig = Component[TOOLPAD_COMPONENT];\n  const {\n    argTypes = {},\n    errorProp,\n    loadingProp,\n    loadingPropSource,\n    errorPropSource,\n  } = componentConfig;\n\n  const isLayoutNode =\n    appDom.isPage(node) || (appDom.isElement(node) && isPageLayoutComponent(node));\n\n  const scope = useAssertedContext(RuntimeScopeContext);\n  const liveBindings = scope.bindings;\n\n  const boundProps: Record<string, any> = React.useMemo(() => {\n    const loadingPropSourceSet = loadingPropSource ? new Set(loadingPropSource) : null;\n    const errorPropSourceSet = errorPropSource ? new Set(errorPropSource) : null;\n    const hookResult: Record<string, any> = {};\n\n    // error state we will propagate to the component\n    let error: Error | undefined;\n    // loading state we will propagate to the component\n    let loading: boolean = false;\n\n    for (const [propName, argType] of Object.entries(argTypes)) {\n      const bindingId = `${nodeId}.props.${propName}`;\n      const binding = liveBindings[bindingId];\n\n      if (binding) {\n        hookResult[propName] = binding.value;\n\n        if (binding.loading && (!loadingPropSourceSet || loadingPropSourceSet.has(propName))) {\n          loading = true;\n        } else if (\n          !error &&\n          binding.error &&\n          (!errorPropSourceSet || errorPropSourceSet.has(propName))\n        ) {\n          error = binding.error;\n        }\n      }\n\n      if (typeof hookResult[propName] === 'undefined' && argType) {\n        const defaultValue = getArgTypeDefaultValue(argType);\n        if (typeof defaultValue !== 'undefined') {\n          hookResult[propName] = getArgTypeDefaultValue(argType);\n        }\n      }\n    }\n\n    if (error) {\n      if (errorProp) {\n        hookResult[errorProp] = error;\n      } else {\n        console.error(errorFrom(error));\n      }\n    }\n\n    if (loadingProp && loading) {\n      hookResult[loadingProp] = true;\n    }\n\n    return hookResult;\n  }, [argTypes, errorProp, errorPropSource, liveBindings, loadingProp, loadingPropSource, nodeId]);\n\n  const boundLayoutProps: Record<string, any> = React.useMemo(() => {\n    const hookResult: Record<string, any> = {};\n\n    for (const [propName, argType] of isLayoutNode ? [] : Object.entries(layoutBoxArgTypes)) {\n      const bindingId = `${nodeId}.layout.${propName}`;\n      const binding = liveBindings[bindingId];\n      if (binding) {\n        hookResult[propName] = binding.value;\n      }\n\n      if (typeof hookResult[propName] === 'undefined' && argType) {\n        hookResult[propName] = getArgTypeDefaultValue(argType);\n      }\n    }\n\n    return hookResult;\n  }, [isLayoutNode, liveBindings, nodeId]);\n\n  const onChangeHandlers: Record<string, (param: any) => void> = React.useMemo(\n    () =>\n      mapProperties(argTypes, ([key, argType]) => {\n        if (!argType || !argType.onChangeProp) {\n          return null;\n        }\n\n        const handler = (param: any) => {\n          const bindingId = `${nodeId}.props.${key}`;\n\n          const value = argType.onChangeHandler ? argType.onChangeHandler(param) : param;\n          setControlledBinding(bindingId, { value });\n        };\n\n        return [argType.onChangeProp, handler];\n      }),\n    [argTypes, nodeId, setControlledBinding],\n  );\n\n  const navigateToPage = usePageNavigator();\n  const evaluateScopeExpression = useEvaluateScopeExpression();\n\n  const eventHandlers: Record<string, (param: any) => void> = React.useMemo(() => {\n    return mapProperties(argTypes, ([key, argType]) => {\n      if (!argType || argType.type !== 'event' || !appDom.isElement(node)) {\n        return null;\n      }\n\n      const action = (node as appDom.ElementNode).props?.[key];\n\n      if (action?.$$navigationAction) {\n        const handler = async () => {\n          const { page, parameters = {} } = action.$$navigationAction;\n          if (page) {\n            const parsedParameterEntries = await Promise.all(\n              Object.keys(parameters).map(async (parameterName) => {\n                const parameterValue = parameters[parameterName];\n\n                if (parameterValue?.$$jsExpression) {\n                  const result = await evaluateScopeExpression(parameterValue.$$jsExpression);\n                  return [parameterName, result.value];\n                }\n                return [parameterName, parameterValue];\n              }),\n            );\n\n            const parsedParameters = Object.fromEntries(parsedParameterEntries);\n\n            navigateToPage(page, parsedParameters);\n          }\n        };\n\n        return [key, handler];\n      }\n\n      if (action?.$$jsExpressionAction) {\n        const handler = () => {\n          const code = action.$$jsExpressionAction;\n          const exprToEvaluate = `(async () => {${code}})()`;\n          evaluateScopeExpression(exprToEvaluate);\n        };\n\n        return [key, handler];\n      }\n\n      return null;\n    });\n  }, [argTypes, node, navigateToPage, evaluateScopeExpression]);\n\n  const reactChildren = React.useMemo(() => {\n    const result: Record<string, React.ReactNode> = {};\n    for (const [prop, childNodes] of Object.entries(childNodeGroups)) {\n      result[prop] = childNodes.map((child) => <RenderedNode key={child.id} nodeId={child.id} />);\n    }\n    return result;\n  }, [childNodeGroups]);\n\n  const layoutElementProps = React.useMemo(() => {\n    if (appDom.isElement(node) && isPageRow(node)) {\n      return {\n        layoutColumnSizes: childNodeGroups.children.map((child) => child.layout?.columnSize),\n      };\n    }\n    return {};\n  }, [childNodeGroups.children, node]);\n\n  const props: Record<string, any> = React.useMemo(() => {\n    return {\n      ...staticProps,\n      ...boundProps,\n      ...onChangeHandlers,\n      ...eventHandlers,\n      ...layoutElementProps,\n      ...reactChildren,\n    };\n  }, [staticProps, boundProps, eventHandlers, layoutElementProps, onChangeHandlers, reactChildren]);\n\n  const previousProps = React.useRef<Record<string, any>>(props);\n  const [hasSetInitialBindings, setHasSetInitialBindings] = React.useState(false);\n  React.useEffect(() => {\n    Object.entries(argTypes).forEach(([key, argType]) => {\n      if (!argType?.defaultValueProp) {\n        return;\n      }\n\n      if (\n        hasSetInitialBindings &&\n        previousProps.current[argType.defaultValueProp] === props[argType.defaultValueProp]\n      ) {\n        return;\n      }\n\n      const bindingIdToUpdate = `${nodeId}.props.${key}`;\n      setControlledBinding(bindingIdToUpdate, { value: props[argType.defaultValueProp] });\n    });\n\n    previousProps.current = props;\n    setHasSetInitialBindings(true);\n  }, [props, argTypes, nodeId, setControlledBinding, hasSetInitialBindings]);\n\n  const wrappedProps = React.useMemo(() => {\n    const hookResult: Record<string, any> = { ...props };\n    // Wrap element props\n    for (const [propName, argType] of Object.entries(argTypes)) {\n      const isElement = argType?.type === 'element';\n      const isTemplate = argType?.type === 'template';\n\n      if (isElement || isTemplate) {\n        const value = hookResult[propName];\n\n        let wrappedValue = value;\n        if (argType.control?.type === 'slots' || argType.control?.type === 'layoutSlot') {\n          wrappedValue = (\n            <Slots prop={propName} hasLayout={argType.control?.type === 'layoutSlot'}>\n              {value}\n            </Slots>\n          );\n        } else if (argType.control?.type === 'slot') {\n          wrappedValue = <Placeholder prop={propName}>{value}</Placeholder>;\n        }\n\n        if (isTemplate) {\n          appDom.assertIsElement(node);\n          hookResult[propName] = (key: string, localScope: Record<string, unknown>) => {\n            return (\n              <TemplateScoped\n                id={`${node.id}.props.${propName}.${key}`}\n                localScope={localScope}\n                node={node}\n                propName={propName}\n              >\n                {wrappedValue}\n              </TemplateScoped>\n            );\n          };\n        } else {\n          hookResult[propName] = wrappedValue;\n        }\n      }\n    }\n    return hookResult;\n  }, [argTypes, node, props]);\n\n  const vmRef = React.useContext(ApplicationVmApiContext);\n  React.useEffect(() => {\n    if (!vmRef) {\n      return () => {};\n    }\n    const unsubscribers: (() => void)[] = [];\n    for (const propName of Object.keys(argTypes)) {\n      const unsubscribe = vmRef.current.registerBindingScope(`${nodeId}.props.${propName}`, scope);\n      unsubscribers.push(unsubscribe);\n    }\n    return () => {\n      unsubscribers.forEach((unsubscribe) => unsubscribe());\n    };\n  }, [nodeId, argTypes, vmRef, scope]);\n\n  const nodeRef = React.useRef();\n\n  const canvasHooks = React.useContext(CanvasHooksContext);\n\n  React.useEffect(() => {\n    return canvasHooks.registerNode?.(node, wrappedProps, componentConfig, nodeRef.current);\n  }, [node, wrappedProps, componentConfig, canvasHooks]);\n\n  return (\n    <NodeRuntimeWrapper nodeId={nodeId} nodeName={node.name} NodeError={NodeError}>\n      {isLayoutNode ? (\n        <Component\n          {...wrappedProps}\n          ref={nodeRef}\n          data-toolpad-node-id={nodeId}\n          data-toolpad-slot-name=\"children\"\n          data-toolpad-slot-parent={nodeId}\n          data-toolpad-slot-type=\"multiple\"\n        />\n      ) : (\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: boundLayoutProps.verticalAlign,\n            justifyContent: boundLayoutProps.horizontalAlign,\n            height: node.layout?.height ?? componentConfig.defaultLayoutHeight,\n            minHeight: '100%',\n            '&:empty': {\n              display: 'none',\n            },\n          }}\n          ref={nodeRef}\n          data-toolpad-node-id={nodeId}\n        >\n          <Component {...wrappedProps} />\n        </Box>\n      )}\n    </NodeRuntimeWrapper>\n  );\n}\n\ninterface PageRootProps {\n  maxWidth?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'none';\n  children?: React.ReactNode;\n}\n\nconst PageRoot = React.forwardRef<HTMLDivElement, PageRootProps>(function PageRoot(\n  { children, maxWidth, ...props }: PageRootProps,\n  ref,\n) {\n  const containerMaxWidth =\n    maxWidth === 'none' ? false : (maxWidth ?? appDom.DEFAULT_CONTAINER_WIDTH);\n  return (\n    <Container ref={ref} maxWidth={containerMaxWidth}>\n      <Stack data-testid=\"page-root\" direction=\"column\" sx={{ my: 2, gap: 1 }} {...props}>\n        {children}\n      </Stack>\n    </Container>\n  );\n});\n\nconst PageRootComponent = createComponent(PageRoot, {\n  argTypes: {\n    children: {\n      type: 'element',\n      control: { type: 'slots' },\n    },\n    maxWidth: {\n      type: 'string',\n      enum: ['xs', 'sm', 'md', 'lg', 'xl', 'none'],\n      control: { type: 'ToggleButtons' },\n    },\n  },\n});\n\ninterface QueryNodeProps {\n  page: appDom.PageNode;\n  node: appDom.QueryNode;\n}\n\nfunction QueryNode({ page, node }: QueryNodeProps) {\n  const { setControlledBinding } = React.useContext(SetBindingContext) ?? {};\n  invariant(setControlledBinding, 'QueryNode must be rendered in a RuntimeScoped context');\n\n  const { bindings } = useAssertedContext(RuntimeScopeContext);\n\n  const params = resolveBindables(\n    bindings,\n    `${node.id}.params`,\n    Object.fromEntries(node.params ?? []),\n  );\n\n  const configBindings = getQueryConfigBindings(node.attributes);\n  const options = resolveBindables(bindings, `${node.id}.config`, configBindings);\n\n  const inputError = params.error || options.error;\n  const inputIsLoading = params.loading || options.loading;\n\n  const queryResult = useDataQuery(page, node, params.value, {\n    ...options.value,\n    enabled: !inputIsLoading && !inputError,\n  });\n\n  React.useEffect(() => {\n    const { isLoading: queryIsLoading, error: queryError, data, rows, ...result } = queryResult;\n\n    const error = queryError || inputError;\n    const isLoading = queryIsLoading || inputIsLoading;\n\n    for (const [key, value] of Object.entries(result)) {\n      const bindingId = `${node.id}.${key}`;\n      setControlledBinding(bindingId, { value });\n    }\n\n    // Here we propagate the error and loading state to the data and rows properties\n    // TODO: is there a straightforward way for us to generalize this behavior?\n    setControlledBinding(`${node.id}.isLoading`, { value: isLoading });\n    setControlledBinding(`${node.id}.error`, {\n      value: error ? String(error.message || error) : undefined,\n    });\n    const deferredStatus = { loading: isLoading, error };\n    setControlledBinding(`${node.id}.data`, { ...deferredStatus, value: data });\n    setControlledBinding(`${node.id}.rows`, { ...deferredStatus, value: rows });\n  }, [node.name, node.id, queryResult, setControlledBinding, inputError, inputIsLoading]);\n\n  return null;\n}\n\ninterface MutationNodeProps {\n  page: appDom.PageNode;\n  node: appDom.QueryNode;\n}\n\nfunction MutationNode({ node, page }: MutationNodeProps) {\n  const { setControlledBinding } = React.useContext(SetBindingContext) ?? {};\n  invariant(setControlledBinding, 'MutationNode must be rendered in a RuntimeScoped context');\n\n  const { bindings } = useAssertedContext(RuntimeScopeContext);\n\n  const { value: params } = resolveBindables(\n    bindings,\n    `${node.id}.params`,\n    Object.fromEntries(node.params ?? []),\n  );\n\n  const runtimeApi = useNonNullableContext(RuntimeApiContext);\n\n  const {\n    isPending,\n    data: responseData = EMPTY_OBJECT,\n    error: fetchError,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [node.name, params],\n    mutationFn: async (overrides: any = {}) => {\n      return runtimeApi.methods.execQuery(page.name, node.name, { ...params, ...overrides });\n    },\n  });\n\n  const { data, error: apiError } = responseData || EMPTY_OBJECT;\n\n  const error = apiError || fetchError;\n\n  // Stabilize the mutation and prepare for inclusion in global scope\n  const mutationResult: UseFetch = React.useMemo(() => {\n    const call = async (overrides: any = {}) => {\n      await mutateAsync(overrides);\n    };\n    return {\n      isLoading: isPending,\n      isFetching: isPending,\n      error,\n      data,\n      rows: Array.isArray(data) ? data : EMPTY_ARRAY,\n      call,\n      fetch: call,\n      refetch: () => {\n        throw new Error(`refetch is not supported in manual queries`);\n      },\n    };\n  }, [isPending, error, data, mutateAsync]);\n\n  React.useEffect(() => {\n    for (const [key, value] of Object.entries(mutationResult)) {\n      const bindingId = `${node.id}.${key}`;\n      setControlledBinding(bindingId, { value });\n    }\n  }, [node.id, mutationResult, setControlledBinding]);\n\n  return null;\n}\n\ninterface FetchNodeProps {\n  page: appDom.PageNode;\n  node: appDom.QueryNode;\n}\n\nfunction FetchNode({ node, page }: FetchNodeProps) {\n  const mode: appDom.FetchMode = node.attributes.mode || 'query';\n  switch (mode) {\n    case 'query':\n      return <QueryNode node={node} page={page} />;\n    case 'mutation':\n      return <MutationNode node={node} page={page} />;\n    default:\n      throw new Error(`Unrecognized fetch mode \"${mode}\"`);\n  }\n}\n\ninterface RenderedLowCodePageProps {\n  page: appDom.PageNode;\n}\n\nfunction RenderedLowCodePage({ page }: RenderedLowCodePageProps) {\n  usePageTitle(appDom.getPageTitle(page));\n  const dom = useDomContext();\n  const { children = [], queries = [] } = appDom.getChildNodes(dom, page);\n\n  const location = useLocation();\n  const components = useComponents();\n\n  const parseBindingsResult = React.useMemo(\n    () => parseBindings(dom, page, components, location),\n    [components, dom, location, page],\n  );\n\n  const canvasEvents = React.useContext(CanvasEventsContext);\n\n  const onUpdate = useEventCallback(({ scope, scopeMeta }) => {\n    if (canvasEvents) {\n      canvasEvents.emit('pageStateUpdated', {\n        pageState: scope.values,\n        globalScopeMeta: scopeMeta,\n      });\n      canvasEvents.emit('pageBindingsUpdated', { bindings: scope.bindings });\n    }\n  });\n\n  const onApplicationVmUpdate = useEventCallback((vm: ApplicationVm) => {\n    if (canvasEvents) {\n      canvasEvents.emit('vmUpdated', { vm });\n    }\n  });\n\n  const applicationVm = useApplicationVm(onApplicationVmUpdate);\n\n  const pageProps = React.useMemo(\n    () => ({\n      maxWidth: page.attributes.maxWidth,\n    }),\n    [page.attributes.maxWidth],\n  );\n\n  return (\n    <ApplicationVmApiContext.Provider value={applicationVm}>\n      <RuntimeScoped id={'global'} parseBindingsResult={parseBindingsResult} onUpdate={onUpdate}>\n        <RenderedNodeContent\n          node={page}\n          childNodeGroups={{ children }}\n          Component={PageRootComponent}\n          staticProps={pageProps}\n        />\n        {queries.map((node) => (\n          <FetchNode key={node.id} page={page} node={node} />\n        ))}\n      </RuntimeScoped>\n    </ApplicationVmApiContext.Provider>\n  );\n}\n\nexport interface RenderedNodeProps {\n  nodeId: NodeId;\n}\n\nexport interface RenderedPageProps {\n  page: appDom.PageNode;\n}\n\nexport function RenderedPage({ page }: RenderedPageProps) {\n  const appHost = useAppHost();\n\n  let pageContent = <RenderedLowCodePage page={page} key={page.name} />;\n\n  if (!appHost.isCanvas) {\n    pageContent = (\n      <RequireAuthorization\n        allowAll={page.attributes.authorization?.allowAll ?? true}\n        allowedRoles={page.attributes.authorization?.allowedRoles ?? []}\n      >\n        {pageContent}\n      </RequireAuthorization>\n    );\n  }\n\n  return pageContent;\n}\n\ninterface PageNotFoundProps {\n  msg?: React.ReactNode;\n}\n\nfunction PageNotFound({ msg = \"The page doesn't exist in this application.\" }: PageNotFoundProps) {\n  return (\n    <Container\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <Typography variant=\"h1\">Not found</Typography>\n      <Typography>{msg}</Typography>\n    </Container>\n  );\n}\n\nfunction isPageAllowed(page: appDom.PageNode, session: AuthSession | null): boolean {\n  const userRoles = session?.user?.roles ?? [];\n  const { allowAll = true, allowedRoles = [] } = page.attributes.authorization ?? {};\n  return allowAll || userRoles.some((role) => allowedRoles.includes(role));\n}\n\nconst FullPageCentered = styled('div')({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n});\n\nfunction AppLoading() {\n  return <LinearProgress />;\n}\n\nfunction AppError({ error }: FallbackProps) {\n  return (\n    <FullPageCentered>\n      <Alert severity=\"error\">\n        <AlertTitle>Something went wrong</AlertTitle>\n        <Pre>{error.message}</Pre>\n        <Pre>{error.stack}</Pre>\n      </Alert>\n    </FullPageCentered>\n  );\n}\n\nfunction shouldShowPreviewHeader(appHost: AppHost): boolean {\n  return !!appHost.isPreview && !appHost.isCanvas;\n}\n\ninterface ToolpadAppLayoutProps {\n  children?: React.ReactNode;\n}\n\nfunction ToolpadAppLayout({ children }: ToolpadAppLayoutProps) {\n  const dom = useDomContext();\n\n  const root = appDom.getApp(dom);\n  const { pages = [] } = appDom.getChildNodes(dom, root);\n\n  const { session, hasAuthentication } = React.useContext(AuthContext);\n\n  const pageMatch = useMatch('/pages/:slug');\n  const activePageSlug = pageMatch?.params.slug;\n\n  const navEntries = React.useMemo(\n    () =>\n      pages\n        .filter((page) => isPageAllowed(page, session))\n        .map((page) => ({\n          slug: page.name,\n          displayName: appDom.getPageDisplayName(page),\n          hasShell: page?.attributes.display !== 'standalone',\n        })),\n    [pages, session],\n  );\n\n  const appHost = useAppHost();\n\n  if (!appHost.isCanvas && !session?.user && hasAuthentication) {\n    return <AppLoading />;\n  }\n\n  return (\n    <AppLayout activePageSlug={activePageSlug} pages={navEntries} hasLayout={!appHost.isCanvas}>\n      {children}\n    </AppLayout>\n  );\n}\n\nfunction PageRoute() {\n  const { pageName } = useParams();\n\n  invariant(pageName, 'Page name must be provided as a route parameter');\n\n  const dom = useDomContext();\n  const { search } = useLocation();\n\n  const page = appDom.getPageByName(dom, pageName);\n\n  if (!page) {\n    const aliasedPageName = appDom.getPageForAlias(dom, pageName);\n\n    if (aliasedPageName) {\n      return <Navigate to={`/pages/${aliasedPageName}${search}`} replace />;\n    }\n\n    return <PageNotFound />;\n  }\n\n  return <RenderedPage page={page} />;\n}\n\nfunction PagesLayoutRoute() {\n  return (\n    <ToolpadAppLayout>\n      <Outlet />\n    </ToolpadAppLayout>\n  );\n}\n\nfunction DefaultPageRoute() {\n  const { search } = useLocation();\n  const dom = useDomContext();\n  const { session } = React.useContext(AuthContext);\n\n  const root = appDom.getApp(dom);\n  const { pages = [] } = appDom.getChildNodes(dom, root);\n\n  const defaultPage: appDom.PageNode | null = React.useMemo(\n    () => pages.find((page) => isPageAllowed(page, session)) ?? null,\n    [pages, session],\n  );\n\n  return defaultPage ? (\n    <Navigate to={`/pages/${defaultPage.name}${search}`} replace />\n  ) : (\n    <PageNotFound msg=\"No pages available.\" />\n  );\n}\n\nexport interface ToolpadAppProviderProps extends ToolpadAppProps {\n  children?: React.ReactNode;\n}\n\nexport function ToolpadAppProvider({\n  rootRef,\n  basename,\n  state,\n  children,\n  apiUrl = `${basename}/api/runtime-rpc`,\n}: ToolpadAppProviderProps) {\n  const { dom } = state;\n\n  const extraComponents = componentsStore.useValue();\n\n  const components = React.useMemo(\n    () => ({ ...internalComponents, ...extraComponents }),\n    [extraComponents],\n  );\n\n  const [resetNodeErrorsKey, setResetNodeErrorsKey] = React.useState(0);\n\n  React.useEffect(() => setResetNodeErrorsKey((key) => key + 1), [dom]);\n\n  const { value: showDevtools, toggle: toggleDevtools } = useBoolean(false);\n\n  React.useEffect(() => {\n    (window as any).toggleDevtools = () => toggleDevtools();\n  }, [toggleDevtools]);\n\n  const authContext = useAuth({ dom, basename, signInPagePath: '/signin' });\n\n  const appHost = useAppHost();\n  const showPreviewHeader = shouldShowPreviewHeader(appHost);\n\n  const canvasHooks = React.useContext(CanvasHooksContext);\n\n  const runtimeApi = React.useMemo(() => createApi(apiUrl), [apiUrl]);\n\n  return (\n    <RuntimeApiContext.Provider value={runtimeApi}>\n      <UseDataProviderContext.Provider value={useDataProvider}>\n        <ComponentsContextProvider value={components}>\n          <DomContext.Provider value={dom}>\n            <AuthContext.Provider value={authContext}>\n              <ResetNodeErrorsKeyProvider value={resetNodeErrorsKey}>\n                <AppThemeProvider dom={dom}>\n                  <CssBaseline enableColorScheme />\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      flexDirection: 'column',\n                      height: '100vh',\n                    }}\n                  >\n                    {showPreviewHeader ? <PreviewHeader /> : null}\n                    <AppRoot ref={rootRef}>\n                      <ErrorBoundary FallbackComponent={AppError}>\n                        <React.Suspense fallback={<AppLoading />}>{children}</React.Suspense>\n                      </ErrorBoundary>\n                      <EditorOverlay ref={canvasHooks.overlayRef} />\n                    </AppRoot>\n                  </Box>\n                </AppThemeProvider>\n              </ResetNodeErrorsKeyProvider>\n            </AuthContext.Provider>\n            {showDevtools ? <ReactQueryDevtoolsProduction initialIsOpen={false} /> : null}\n          </DomContext.Provider>\n        </ComponentsContextProvider>\n      </UseDataProviderContext.Provider>\n    </RuntimeApiContext.Provider>\n  );\n}\n\nexport interface ToolpadAppProps {\n  rootRef?: React.Ref<HTMLDivElement>;\n  basename: string;\n  state: RuntimeState;\n  apiUrl?: string;\n}\n\nexport function ToolpadAppRoutes(props: ToolpadAppProps) {\n  return (\n    <Routes>\n      <Route\n        path=\"/\"\n        element={\n          <ToolpadAppProvider {...props}>\n            <Outlet />\n          </ToolpadAppProvider>\n        }\n      >\n        <Route path=\"/signin\" Component={SignInPage} />\n        <Route path=\"/\" Component={PagesLayoutRoute}>\n          <Route path=\"/pages/:pageName\" Component={PageRoute} />\n          <Route path=\"/pages\" Component={DefaultPageRoute} />\n          <Route path=\"/\" Component={DefaultPageRoute} />\n          <Route path=\"*\" Component={PageNotFound} />\n        </Route>\n      </Route>\n    </Routes>\n  );\n}\n\nexport default function ToolpadApp(props: ToolpadAppProps) {\n  const isSsr = useSsr();\n  return isSsr ? null : (\n    <BrowserRouter basename={props.basename}>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <ToolpadAppProvider {...props}>\n              <Outlet />\n            </ToolpadAppProvider>\n          }\n        >\n          <Route path=\"/signin\" Component={SignInPage} />\n          <Route path=\"/\" Component={PagesLayoutRoute}>\n            <Route path=\"/pages/:pageName\" Component={PageRoute} />\n            <Route path=\"/pages\" Component={DefaultPageRoute} />\n            <Route path=\"/\" Component={DefaultPageRoute} />\n            <Route path=\"*\" Component={PageNotFound} />\n          </Route>\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n","import { BindableAttrValue } from '@toolpad/studio-runtime';\nimport { hasOwnProperty } from '@toolpad/utils/collections';\n\ntype BindingType =\n  | 'const'\n  | 'jsExpression'\n  | 'env'\n  | 'jsExpressionAction'\n  | 'navigationAction'\n  | 'secret';\n\nexport function getBindingType<V>(binding: BindableAttrValue<V>): BindingType {\n  if (binding && typeof binding === 'object') {\n    if (hasOwnProperty(binding, '$$jsExpression')) {\n      return 'jsExpression';\n    }\n    if (hasOwnProperty(binding, '$$env')) {\n      return 'env';\n    }\n    if (hasOwnProperty(binding, '$$jsExpressionAction')) {\n      return 'jsExpressionAction';\n    }\n    if (hasOwnProperty(binding, '$$navigationAction')) {\n      return 'navigationAction';\n    }\n  }\n  return 'const';\n}\n\nexport function getBindingValue<V>(binding: BindableAttrValue<V>):\n  | V\n  | string\n  | {\n      page: string;\n      parameters?: Record<string, unknown>;\n    } {\n  if (binding && typeof binding === 'object') {\n    if (hasOwnProperty(binding, '$$jsExpression')) {\n      return binding.$$jsExpression as string;\n    }\n    if (hasOwnProperty(binding, '$$env')) {\n      return binding.$$env as string;\n    }\n    if (hasOwnProperty(binding, '$$jsExpressionAction')) {\n      return binding.$$jsExpressionAction as string;\n    }\n    if (hasOwnProperty(binding, '$$navigationAction')) {\n      return binding.$$navigationAction as {\n        page: string;\n        parameters?: Record<string, unknown>;\n      };\n    }\n  }\n  return binding as V;\n}\n","import * as React from 'react';\nimport { createTheme, Theme, ThemeProvider, ThemeOptions } from '@mui/material';\nimport { deepmerge } from '@mui/utils';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\n\ndeclare module '@mui/material/styles' {\n  interface Theme {\n    fontFamilyMonospaced: string;\n  }\n  // allow configuration using `createTheme`\n  interface ThemeOptions {\n    fontFamilyMonospaced?: string;\n  }\n}\n\nfunction createMuiThemeFromToolpadTheme(toolpadTheme: ThemeOptions = {}): Theme {\n  return createTheme(\n    deepmerge(\n      {\n        typography: {\n          h1: {\n            fontSize: `3.25rem`,\n            fontWeight: 800,\n          },\n\n          h2: {\n            fontSize: `2.25rem`,\n            fontWeight: 700,\n          },\n\n          h3: {\n            fontSize: `1.75rem`,\n            fontWeight: 700,\n          },\n\n          h4: {\n            fontSize: `1.5rem`,\n            fontWeight: 700,\n          },\n\n          h5: {\n            fontSize: `1.25rem`,\n            fontWeight: 700,\n          },\n\n          h6: {\n            fontSize: `1.15rem`,\n            fontWeight: 700,\n          },\n        },\n        fontFamilyMonospaced: 'Consolas, Menlo, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace',\n      },\n      toolpadTheme,\n    ),\n  );\n}\n\nexport function createToolpadAppTheme(dom: appDom.AppDom): Theme {\n  const root = appDom.getApp(dom);\n  const { themes = [] } = appDom.getChildNodes(dom, root);\n  const themeNode = themes.length > 0 ? themes[0] : null;\n  const toolpadTheme = themeNode?.theme;\n  return createMuiThemeFromToolpadTheme(toolpadTheme);\n}\n\nexport interface ThemeProviderProps {\n  dom: appDom.AppDom;\n  children?: React.ReactNode;\n}\n\nexport default function AppThemeProvider({ dom, children }: ThemeProviderProps) {\n  const theme = React.useMemo(() => createToolpadAppTheme(dom), [dom]);\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n}\n","import { BindingEvaluationResult, JsRuntime } from '@toolpad/studio-runtime';\nimport { mapValues } from '@toolpad/utils/collections';\n// TODO: remove these lodash-es imports\n// eslint-disable-next-line no-restricted-imports\nimport { setWith, clone, set as setObjectPath } from 'lodash-es';\nimport { getBindingType } from './bindings';\n/**\n * Updates an object's property value for a given path in an immutable way.\n */\nfunction updatePath<P extends object, V>(obj: P, path: string, value: V): P {\n  return setWith(clone(obj), path, value, clone);\n}\n\n/**\n * Represents the state of a binding. It both describes which place it takes in the gobal scope\n * and how to obtain the result\n */\nexport interface ParsedBinding {\n  /**\n   * How this binding presents itself to expressions in the global scope.\n   * Path in the form that is accepted by lodash.set\n   */\n  scopePath?: string;\n  /**\n   * javascript expression that evaluates to the value of this binding\n   */\n  expression?: string;\n  dependencies?: undefined;\n  result?: undefined;\n  /**\n   * javascript expression that evaluates to the initial value of this binding if it doesn't have one\n   */\n  initializer?: string;\n}\n\nexport interface EvaluatedBinding<T = unknown> {\n  scopePath?: string;\n  expression?: undefined;\n  dependencies?: string[];\n  /**\n   * actual evaluated result of the binding\n   */\n  result?: BindingEvaluationResult<T>;\n  initializer?: undefined;\n}\n\ntype Dependencies = Map<string, Set<string>>;\n\nfunction flattenDependency(\n  deps: Dependencies,\n  dep: string,\n  history = new Set<string>([dep]),\n): Set<string> {\n  const depDeps = deps.get(dep) ?? new Set();\n  const result = new Set(depDeps);\n  for (const depDep of depDeps) {\n    if (!history.has(depDep)) {\n      const flat = flattenDependency(deps, depDep, new Set([...history, depDep]));\n      for (const flatted of flat) {\n        result.add(flatted);\n      }\n    }\n  }\n  return result;\n}\n\nfunction flattenDependencies(deps: Dependencies): Dependencies {\n  const result: Dependencies = new Map();\n  for (const dep of deps.keys()) {\n    result.set(dep, flattenDependency(deps, dep));\n  }\n  return result;\n}\n\nfunction bubbleError(\n  flatDependencies: Dependencies,\n  results: Record<string, BindingEvaluationResult<unknown>>,\n  bindingId: string,\n): Error | undefined {\n  const result = results[bindingId];\n  if (result.error) {\n    return result.error;\n  }\n  const deps = flatDependencies.get(bindingId) ?? new Set();\n  for (const dep of deps) {\n    const depResult = results[dep];\n    if (depResult.error) {\n      return depResult.error;\n    }\n  }\n  return undefined;\n}\n\nfunction bubbleLoading(\n  flatDependencies: Dependencies,\n  results: Record<string, BindingEvaluationResult<unknown>>,\n  bindingId: string,\n): boolean {\n  const result = results[bindingId];\n  if (result.loading) {\n    return true;\n  }\n  const deps = flatDependencies.get(bindingId) ?? new Set();\n  for (const dep of deps) {\n    const depResult = results[dep];\n    if (depResult.loading) {\n      return depResult.loading;\n    }\n  }\n  return false;\n}\n\nexport function buildGlobalScope(\n  base: Record<string, unknown>,\n  bindings: Record<string, { result?: BindingEvaluationResult; scopePath?: string }>,\n): Record<string, unknown> {\n  const globalScope = { ...base };\n  for (const binding of Object.values(bindings)) {\n    const value = binding.result?.value;\n    if (binding.scopePath && getBindingType(value) === 'const') {\n      setObjectPath(globalScope, binding.scopePath, value);\n    }\n  }\n  return globalScope;\n}\n\n/**\n * Evaluates the expressions and replace with their result\n */\nexport default function evalJsBindings(\n  jsRuntime: JsRuntime,\n  bindings: Record<string, ParsedBinding | EvaluatedBinding>,\n  globalScope: Record<string, unknown>,\n): Record<string, EvaluatedBinding> {\n  const bindingsMap = new Map(Object.entries(bindings));\n\n  const bindingIdMap = new Map<string, string>();\n  for (const [bindingId, binding] of bindingsMap) {\n    if (binding.scopePath) {\n      bindingIdMap.set(binding.scopePath, bindingId);\n    }\n  }\n\n  const computationStatuses = new Map<string, { result: null | BindingEvaluationResult }>();\n  let currentParentBinding: string | undefined;\n  const dependencies: Dependencies = new Map();\n\n  let proxiedScope: Record<string, unknown>;\n\n  const evaluateBinding = (\n    bindingId: string,\n    scopePath?: string,\n  ): BindingEvaluationResult | null => {\n    const binding = bindingId && bindingsMap.get(bindingId);\n\n    if (!binding) {\n      return null;\n    }\n\n    if (currentParentBinding) {\n      let bindingDependencies = dependencies.get(currentParentBinding);\n      if (!bindingDependencies) {\n        bindingDependencies = new Set<string>();\n        dependencies.set(currentParentBinding, bindingDependencies);\n      }\n      bindingDependencies.add(bindingId);\n    }\n\n    const expression = binding.expression;\n\n    if (expression) {\n      const computed = computationStatuses.get(expression);\n      if (computed) {\n        if (computed.result) {\n          // From cache\n          return computed.result;\n        }\n\n        throw new Error(`Cycle detected \"${scopePath}\"`);\n      }\n\n      // use null to mark as \"computing\"\n      computationStatuses.set(expression, { result: null });\n      const prevContext = currentParentBinding;\n      currentParentBinding = bindingId;\n      const result = jsRuntime.evaluateExpression(expression, proxiedScope);\n      currentParentBinding = prevContext;\n      computationStatuses.set(expression, { result });\n      // From freshly computed\n      return result;\n    }\n\n    if (binding.result) {\n      if (binding.dependencies) {\n        dependencies.set(bindingId, new Set(binding.dependencies));\n      }\n      // From input value on the page\n      return binding.result;\n    }\n\n    const initializer = binding.initializer;\n    if (initializer) {\n      const result = jsRuntime.evaluateExpression(initializer, proxiedScope);\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  };\n\n  const proxify = (obj: Record<string, unknown>, label?: string): Record<string, unknown> =>\n    new Proxy(obj, {\n      get(target, prop, receiver) {\n        if (typeof prop === 'symbol') {\n          return Reflect.get(target, prop, receiver);\n        }\n\n        const scopePath = label ? `${label}.${prop}` : prop;\n        const bindingId = bindingIdMap.get(scopePath);\n\n        if (bindingId) {\n          const evaluated = evaluateBinding(bindingId, scopePath);\n          if (evaluated) {\n            return evaluated.value;\n          }\n        }\n\n        const result = target[prop];\n\n        if (result && typeof result === 'object') {\n          return proxify(result as Record<string, unknown>, scopePath);\n        }\n\n        return Reflect.get(target, prop, receiver);\n      },\n    });\n\n  const scope = buildGlobalScope(globalScope, bindings);\n  proxiedScope = proxify(scope);\n\n  const results = mapValues(bindings, (binding, bindingId) => {\n    return evaluateBinding(bindingId) || { value: undefined };\n  });\n\n  const flatDependencies = flattenDependencies(dependencies);\n\n  return mapValues(bindings, (binding, bindingId) => {\n    const { scopePath } = binding;\n\n    let bindingResult = results[bindingId];\n\n    let nestedBindingsLoading: boolean | undefined;\n    let nestedBindingsError: Error | undefined;\n\n    const seen = new Set();\n\n    const mergeNestedBindings = (value: unknown, parentBindingId: string) => {\n      if (value && typeof value === 'object') {\n        if (seen.has(value)) {\n          return;\n        }\n\n        seen.add(value);\n\n        for (const nestedPropName of Object.keys(value)) {\n          const nestedBindingId = `${parentBindingId}${\n            Array.isArray(value) ? `[${nestedPropName}]` : `.${nestedPropName}`\n          }`;\n\n          const nestedBindingResult = results[nestedBindingId];\n\n          if (nestedBindingResult) {\n            if (!nestedBindingsError) {\n              nestedBindingsError = bubbleError(flatDependencies, results, nestedBindingId);\n            }\n            if (!nestedBindingsLoading) {\n              nestedBindingsLoading = bubbleLoading(flatDependencies, results, nestedBindingId);\n            }\n\n            bindingResult = updatePath(\n              bindingResult,\n              `value.${nestedBindingId.replace(bindingId, '')}`,\n              nestedBindingResult.value,\n            );\n          } else {\n            mergeNestedBindings(\n              (value as Record<string, unknown>)[nestedPropName],\n              nestedBindingId,\n            );\n          }\n        }\n      }\n    };\n\n    mergeNestedBindings(bindingResult.value, bindingId);\n\n    return {\n      scopePath,\n      dependencies: Array.from(flatDependencies.get(bindingId) ?? []),\n      result: {\n        ...bindingResult,\n        error: nestedBindingsError || bubbleError(flatDependencies, results, bindingId),\n        loading: nestedBindingsLoading || bubbleLoading(flatDependencies, results, bindingId),\n      },\n    };\n  });\n}\n","import { BoxProps } from '@mui/material';\nimport { ArgTypeDefinition } from '@toolpad/studio-runtime';\n\nexport const LAYOUT_DIRECTION_HORIZONTAL = 'horizontal';\nexport const LAYOUT_DIRECTION_VERTICAL = 'vertical';\nexport const LAYOUT_DIRECTION_BOTH = 'both';\n\nexport const layoutBoxArgTypes: {\n  horizontalAlign: ArgTypeDefinition<BoxProps, 'justifyContent'>;\n  verticalAlign: ArgTypeDefinition<BoxProps, 'alignItems'>;\n} = {\n  horizontalAlign: {\n    helperText: 'Horizontal alignment of the component',\n    type: 'string',\n    enum: ['start', 'center', 'end', 'space-between', 'space-around', 'space-evenly'],\n    default: 'start',\n    label: 'Horizontal alignment',\n    control: { type: 'HorizontalAlign', hideLabel: true, bindable: false },\n  },\n  verticalAlign: {\n    helperText: 'Vertical alignment of the component.',\n    type: 'string',\n    enum: ['start', 'center', 'end', 'space-between', 'space-around', 'space-evenly'],\n    default: 'start',\n    label: 'Vertical alignment',\n    control: { type: 'VerticalAlign', hideLabel: true, bindable: false },\n  },\n};\n","/// <reference types=\"vite/client\" />\n\nimport { GridRowsProp } from '@mui/x-data-grid-premium';\nimport * as React from 'react';\nimport { useQuery, UseQueryOptions } from '@tanstack/react-query';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { useNonNullableContext } from '@toolpad/utils/react';\nimport { CanvasHooksContext } from './CanvasHooksContext';\nimport { RuntimeApiContext } from './api';\n\nexport type UseDataQueryConfig = Pick<\n  UseQueryOptions<any, unknown, unknown, any[]>,\n  'enabled' | 'refetchInterval'\n>;\n\nexport interface UseFetch {\n  isLoading: boolean;\n  isFetching: boolean;\n  error: any;\n  data: any;\n  rows: GridRowsProp;\n  fetch: (overrides?: any) => void;\n  refetch: () => void;\n  /** @deprecated Use fetch */\n  call: (overrides?: any) => Promise<void>;\n}\n\nconst EMPTY_ARRAY: any[] = [];\nconst EMPTY_OBJECT: any = {};\n\nexport function useDataQuery(\n  page: appDom.PageNode,\n  node: appDom.QueryNode,\n  params: any,\n  {\n    enabled = true,\n    ...options\n  }: Pick<UseQueryOptions<any, unknown, unknown, any[]>, 'enabled' | 'refetchInterval'>,\n): UseFetch {\n  const { savedNodes } = React.useContext(CanvasHooksContext);\n  const queryName = node.name;\n  const pageName = page.name;\n\n  const isNodeAvailableOnServer: boolean = savedNodes ? !!savedNodes[node.id] : true;\n\n  const runtimeApi = useNonNullableContext(RuntimeApiContext);\n\n  const {\n    isLoading,\n    isFetching,\n    error: fetchError,\n    data: responseData = EMPTY_OBJECT,\n    refetch,\n  } = useQuery({\n    queryKey: [pageName, queryName, params],\n    queryFn: () => runtimeApi.methods.execQuery(pageName, queryName, params),\n    ...options,\n    enabled: isNodeAvailableOnServer && enabled,\n  });\n\n  const { data, error: apiError } = responseData;\n\n  const error = apiError || fetchError;\n\n  const rows = Array.isArray(data) ? data : EMPTY_ARRAY;\n\n  const result: UseFetch = React.useMemo(\n    () => ({\n      isLoading: isLoading && !!enabled,\n      isFetching,\n      error,\n      data,\n      rows,\n      refetch,\n      fetch: async () => {\n        throw new Error(`\"fetch\" is unsupported for automatic queries`);\n      },\n      call: async () => {\n        throw new Error(`\"call\" is unsupported for automatic queries`);\n      },\n    }),\n    [isLoading, enabled, isFetching, error, data, rows, refetch],\n  );\n\n  return result;\n}\n","import * as React from 'react';\nimport { queryClient } from '@toolpad/studio-runtime';\n// TODO: move this rpc logic to @mui/utils\n// eslint-disable-next-line import/no-restricted-paths\nimport { ApiClient, createRpcApi } from '../rpcClient';\n\n// eslint-disable-next-line import/no-restricted-paths\nimport type { ServerDefinition } from '../server/runtimeRpcServer';\n\nexport function createApi(url: string) {\n  return createRpcApi<ServerDefinition>(queryClient, new URL(url, window.location.href));\n}\n\nexport const RuntimeApiContext = React.createContext<ApiClient<ServerDefinition> | null>(null);\n","import * as superjson from 'superjson';\nimport invariant from 'invariant';\nimport {\n  QueryClient,\n  useMutation,\n  UseMutationOptions,\n  UseMutationResult,\n  useQuery,\n  UseQueryOptions,\n  UseQueryResult,\n  useSuspenseQuery,\n  UseSuspenseQueryOptions,\n  UseSuspenseQueryResult,\n} from '@tanstack/react-query';\nimport type { MethodsOf, RpcRequest, RpcResponse, MethodResolvers, Methods } from './server/rpc';\n\nfunction createRpcClient<D extends MethodResolvers>(endpoint: string | URL): MethodsOf<D> {\n  return new Proxy({} as MethodsOf<D>, {\n    get(target, prop) {\n      return async (...params: any[]) => {\n        const body: RpcRequest = {\n          name: prop as string,\n          params,\n        };\n        const res = await fetch(endpoint, {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json',\n          },\n          body: JSON.stringify(body),\n        });\n\n        if (res.ok) {\n          const response = (await res.json()) as RpcResponse;\n          if (response.error) {\n            const toolpadError = new Error(response.error.message, {\n              cause: response.error,\n            });\n            if (response.error.code) {\n              toolpadError.code = response.error.code;\n            }\n            throw toolpadError;\n          }\n          return superjson.parse(response.result);\n        }\n\n        throw new Error(`HTTP ${res.status}`);\n      };\n    },\n  });\n}\n\nexport type RpcClient<D extends MethodResolvers> = MethodsOf<D>;\n\nexport interface UseQueryFnOptions<F extends (...args: any[]) => any>\n  extends Omit<\n    UseQueryOptions<Awaited<ReturnType<F>>, Error, Awaited<ReturnType<F>>, any[]>,\n    'queryKey' | 'queryFn'\n  > {}\n\nexport interface UseSuspenseQueryFnOptions<F extends (...args: any[]) => any>\n  extends Omit<\n    UseSuspenseQueryOptions<Awaited<ReturnType<F>>, Error, Awaited<ReturnType<F>>, any[]>,\n    'queryKey' | 'queryFn'\n  > {}\n\nexport interface UseQueryFn<M extends Methods> {\n  <K extends keyof M & string>(\n    name: K,\n    params: Parameters<M[K]> | null,\n    options?: UseQueryFnOptions<M[K]>,\n  ): UseQueryResult<Awaited<ReturnType<M[K]>>>;\n}\n\nexport interface UseSuspenseQueryFn<M extends Methods> {\n  <K extends keyof M & string>(\n    name: K,\n    params: Parameters<M[K]> | null,\n    options?: UseSuspenseQueryFnOptions<M[K]>,\n  ): UseSuspenseQueryResult<Awaited<ReturnType<M[K]>>>;\n}\n\nexport interface UseMutationFn<M extends Methods> {\n  <K extends keyof M & string>(\n    name: K,\n    options?: UseMutationOptions<any, Error, Parameters<M[K]>>,\n  ): UseMutationResult<Awaited<ReturnType<M[K]>>, Error, Parameters<M[K]>>;\n}\n\nexport interface ApiClient<D extends MethodResolvers, M extends Methods = MethodsOf<D>> {\n  methods: M;\n  useQuery: UseQueryFn<M>;\n  useSuspenseQuery: UseSuspenseQueryFn<M>;\n  useMutation: UseMutationFn<M>;\n  refetchQueries: <K extends keyof M>(key: K, params: Parameters<M[K]>) => Promise<void>;\n  invalidateQueries: <K extends keyof M>(key: K, params: Parameters<M[K]>) => Promise<void>;\n}\n\nexport function createRpcApi<D extends MethodResolvers>(\n  queryClient: QueryClient,\n  endpoint: string | URL,\n): ApiClient<D> {\n  const methods = createRpcClient<D>(endpoint);\n\n  return {\n    methods,\n    useQuery: (key, params, options) => {\n      return useQuery({\n        ...options,\n        enabled: !!params && options?.enabled !== false,\n        queryKey: [key, params],\n        queryFn: () => {\n          invariant(params, `\"enabled\" prop of useQuery should prevent this call'`);\n          return methods[key](...params);\n        },\n      });\n    },\n    useSuspenseQuery: (key, params, options) => {\n      return useSuspenseQuery({\n        ...options,\n        queryKey: [key, params],\n        queryFn: () => {\n          invariant(params, 'Query has no parameters');\n          return methods[key](...params);\n        },\n      });\n    },\n    useMutation: (key, options) =>\n      useMutation({ mutationFn: (params) => methods[key](...params), ...options }),\n    refetchQueries(key, params?) {\n      return queryClient.refetchQueries({ queryKey: [key, params] });\n    },\n    invalidateQueries(key, params) {\n      return queryClient.invalidateQueries({ queryKey: [key, params] });\n    },\n  };\n}\n","import * as React from 'react';\nimport { Button, Typography, Box, useTheme, Alert, ButtonProps } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { Link, useMatch } from 'react-router-dom';\nimport { useAppHost } from '@toolpad/studio-runtime';\n\nfunction OpenInEditorButton<C extends React.ElementType>({\n  children = 'Open in editor',\n  ...props\n}: ButtonProps<C>) {\n  return (\n    <Button color=\"inherit\" size=\"small\" startIcon={<EditIcon />} {...props}>\n      {children}\n    </Button>\n  );\n}\n\nexport default function PreviewHeader() {\n  const pageMatch = useMatch('/pages/:slug');\n  const activePage = pageMatch?.params.slug;\n\n  const theme = useTheme();\n\n  const appContext = useAppHost();\n\n  let action: React.ReactNode = null;\n\n  action = (\n    <OpenInEditorButton\n      component={Link}\n      to={activePage ? `/editor/app/pages/${activePage}` : '/editor/app'}\n    />\n  );\n\n  return appContext ? (\n    <Box\n      sx={{\n        position: 'relative',\n        width: '100%',\n        zIndex: theme.zIndex.drawer + 2,\n      }}\n    >\n      <Alert\n        severity=\"warning\"\n        sx={{\n          borderRadius: 0,\n        }}\n        action={action}\n      >\n        <Typography variant=\"body2\">\n          This is a preview version of the application, not suitable for production.\n        </Typography>\n      </Alert>\n    </Box>\n  ) : null;\n}\n","import * as React from 'react';\nimport { Box, useTheme } from '@mui/material';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { DashboardLayout } from '@toolpad/core/DashboardLayout';\nimport { AppProvider } from '@toolpad/core/react-router-dom';\nimport { AuthContext } from './useAuth';\n\nconst TOOLPAD_DISPLAY_MODE_URL_PARAM = 'toolpad-display';\n\n// Url params that will be carried over to the next page\nconst RETAINED_URL_PARAMS = new Set([TOOLPAD_DISPLAY_MODE_URL_PARAM]);\n\nexport interface NavigationEntry {\n  slug: string;\n  displayName: string;\n  hasShell?: boolean;\n}\n\nexport interface ToolpadAppLayoutProps {\n  activePageSlug?: string;\n  pages?: NavigationEntry[];\n  hasLayout?: boolean;\n  children?: React.ReactNode;\n}\n\nexport function AppLayout({\n  activePageSlug,\n  pages = [],\n  hasLayout: hasLayoutProp = true,\n  children,\n}: ToolpadAppLayoutProps) {\n  const theme = useTheme();\n\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n\n  const retainedSearch = React.useMemo(() => {\n    for (const name of searchParams.keys()) {\n      if (!RETAINED_URL_PARAMS.has(name)) {\n        searchParams.delete(name);\n      }\n    }\n\n    return searchParams.size > 0 ? `?${searchParams.toString()}` : '';\n  }, [searchParams]);\n\n  const navEntry = pages.find((page) => page.slug === activePageSlug);\n\n  const displayMode = searchParams.get(TOOLPAD_DISPLAY_MODE_URL_PARAM);\n\n  const hasShell = navEntry?.hasShell !== false && displayMode !== 'standalone';\n\n  const hasLayout = hasLayoutProp && hasShell;\n\n  const { session, signOut } = React.useContext(AuthContext);\n\n  const navigation = React.useMemo(\n    () =>\n      pages.map(({ slug, displayName }) => ({\n        segment: `pages/${slug}${retainedSearch}`,\n        title: displayName,\n      })),\n    [pages, retainedSearch],\n  );\n\n  const signIn = React.useCallback(() => {\n    navigate('/signin');\n  }, [navigate]);\n\n  const layoutContent = (\n    <Box sx={{ minWidth: 0, flex: 1, position: 'relative', flexDirection: 'column' }}>\n      {children}\n    </Box>\n  );\n\n  return (\n    <AppProvider\n      theme={theme}\n      navigation={navigation}\n      branding={{\n        title: 'Toolpad Studio',\n      }}\n      authentication={{\n        signIn,\n        signOut,\n      }}\n      session={session}\n    >\n      {hasLayout ? (\n        <DashboardLayout sx={{ height: '100%' }}>{layoutContent}</DashboardLayout>\n      ) : (\n        layoutContent\n      )}\n    </AppProvider>\n  );\n}\n","import * as React from 'react';\nimport * as appDom from '@toolpad/studio-runtime/appDom';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useAppHost } from '@toolpad/studio-runtime';\n\nconst AUTH_API_PATH = '/api/auth';\n\nconst AUTH_SESSION_PATH = `${AUTH_API_PATH}/session`;\nconst AUTH_CSRF_PATH = `${AUTH_API_PATH}/csrf`;\nconst AUTH_SIGNIN_PATH = `${AUTH_API_PATH}/signin`;\nconst AUTH_SIGNOUT_PATH = `${AUTH_API_PATH}/signout`;\n\nexport type AuthProvider = 'github' | 'google' | 'azure-ad' | 'credentials';\n\nfunction isResponseJSON(response: Response): boolean {\n  return response.headers.get('content-type')?.includes('application/json') || false;\n}\n\nexport interface AuthSession {\n  user: {\n    name: string;\n    email: string;\n    image: string;\n    roles: string[];\n  };\n}\n\nexport interface AuthPayload {\n  session: AuthSession | null;\n  signIn: (\n    provider: AuthProvider,\n    payload?: Record<string, unknown>,\n    isLocalProvider?: boolean,\n  ) => void | Promise<void>;\n  signOut: () => void | Promise<void>;\n  isSigningIn: boolean;\n  isSigningOut: boolean;\n  authProviders: AuthProvider[];\n  hasAuthentication: boolean;\n}\n\nexport const AuthContext = React.createContext<AuthPayload>({\n  session: null,\n  signIn: () => {},\n  signOut: () => {},\n  isSigningIn: false,\n  isSigningOut: false,\n  authProviders: [],\n  hasAuthentication: false,\n});\n\ninterface UseAuthInput {\n  dom: appDom.RenderTree;\n  basename: string;\n  signInPagePath: string;\n}\n\nfunction navigateNative(url: string) {\n  window.location.href = url;\n}\n\nexport function useAuth({ dom, basename, signInPagePath }: UseAuthInput): AuthPayload {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const authProviders = React.useMemo(() => {\n    const app = appDom.getApp(dom);\n    const authProviderConfigs = app.attributes.authentication?.providers ?? [];\n    return authProviderConfigs.map((providerConfig) => providerConfig.provider);\n  }, [dom]);\n\n  const hasAuthentication = authProviders.length > 0;\n\n  const [session, setSession] = React.useState<AuthSession | null>(null);\n  const [isSigningIn, setIsSigningIn] = React.useState(true);\n  const [isSigningOut, setIsSigningOut] = React.useState(true);\n\n  const getCsrfToken = React.useCallback(async () => {\n    let csrfToken = '';\n    try {\n      const csrfResponse = await fetch(`${basename}${AUTH_CSRF_PATH}`, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      if (isResponseJSON(csrfResponse)) {\n        csrfToken = (await csrfResponse.json())?.csrfToken;\n      }\n    } catch (error) {\n      console.error((error as Error).message);\n    }\n\n    return csrfToken ?? '';\n  }, [basename]);\n\n  const signOut = React.useCallback(async () => {\n    setIsSigningOut(true);\n\n    const csrfToken = await getCsrfToken();\n\n    try {\n      await fetch(`${basename}${AUTH_SIGNOUT_PATH}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'X-Auth-Return-Redirect': '1',\n        },\n        body: new URLSearchParams({ csrfToken }),\n      });\n    } catch (error) {\n      console.error((error as Error).message);\n    }\n\n    setSession(null);\n    setIsSigningOut(false);\n\n    if (location.pathname !== signInPagePath) {\n      navigate(signInPagePath);\n    }\n  }, [basename, getCsrfToken, location.pathname, navigate, signInPagePath]);\n\n  const getSession = React.useCallback(async () => {\n    setIsSigningIn(true);\n\n    await getCsrfToken();\n\n    try {\n      setIsSigningIn(true);\n      const sessionResponse = await fetch(`${basename}${AUTH_SESSION_PATH}`, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      if (isResponseJSON(sessionResponse)) {\n        const currentSession = await sessionResponse.json();\n\n        setSession(currentSession);\n\n        if (!currentSession) {\n          signOut();\n        }\n      } else {\n        signOut();\n      }\n    } catch (error) {\n      console.error((error as Error).message);\n      signOut();\n    }\n\n    setIsSigningIn(false);\n  }, [basename, getCsrfToken, signOut]);\n\n  const signIn = React.useCallback(\n    async (provider: AuthProvider, payload?: Record<string, unknown>, isLocalProvider = false) => {\n      setIsSigningIn(true);\n\n      const csrfToken = await getCsrfToken();\n\n      try {\n        const signInResponse = await fetch(\n          isLocalProvider\n            ? `${basename}${AUTH_API_PATH}/callback/${provider}`\n            : `${basename}${AUTH_SIGNIN_PATH}/${provider}`,\n          {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded',\n              'X-Auth-Return-Redirect': '1',\n            },\n            body: new URLSearchParams({ ...payload, csrfToken }),\n          },\n        );\n\n        const { url: signInUrl } = await signInResponse.json();\n\n        navigateNative(signInUrl);\n      } catch (error) {\n        console.error((error as Error).message);\n        signOut();\n\n        setIsSigningIn(false);\n      }\n    },\n    [basename, getCsrfToken, signOut],\n  );\n\n  const appHost = useAppHost();\n\n  React.useEffect(() => {\n    if (hasAuthentication && !appHost.isCanvas) {\n      getSession();\n    }\n  }, [getCsrfToken, getSession, hasAuthentication, appHost.isCanvas]);\n\n  return {\n    session,\n    signIn,\n    signOut,\n    isSigningIn,\n    isSigningOut,\n    authProviders,\n    hasAuthentication,\n  };\n}\n","import * as React from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport invariant from 'invariant';\nimport { ToolpadDataProviderBase, UseDataProviderHook } from '@toolpad/studio-runtime';\nimport type { GridRowId } from '@mui/x-data-grid';\nimport { useNonNullableContext } from '@toolpad/utils/react';\nimport { RuntimeApiContext } from './api';\n\nexport const useDataProvider: UseDataProviderHook = (id) => {\n  const runtimeApi = useNonNullableContext(RuntimeApiContext);\n\n  const {\n    isLoading,\n    error,\n    data: introspection,\n  } = useQuery({\n    queryKey: ['introspectDataProvider', id],\n    enabled: !!id,\n    queryFn: async () => {\n      invariant(id, 'id is required');\n      const [filePath, name] = id.split(':');\n      return runtimeApi.methods.introspectDataProvider(filePath, name);\n    },\n  });\n\n  const dataProvider: ToolpadDataProviderBase<any, any> | null = React.useMemo(() => {\n    if (!introspection) {\n      return null;\n    }\n    return {\n      paginationMode: introspection.paginationMode,\n      getRecords: async (...args) => {\n        invariant(id, 'id is required');\n        const [filePath, name] = id.split(':');\n        return runtimeApi.methods.getDataProviderRecords(filePath, name, ...args);\n      },\n      deleteRecord: introspection.hasDeleteRecord\n        ? async (recordId: GridRowId) => {\n            invariant(id, 'id is required');\n            const [filePath, name] = id.split(':');\n            return runtimeApi.methods.deleteDataProviderRecord(filePath, name, recordId);\n          }\n        : undefined,\n      updateRecord: introspection.hasUpdateRecord\n        ? async (recordId: GridRowId, values: Record<string, unknown>) => {\n            invariant(id, 'id is required');\n            const [filePath, name] = id.split(':');\n            return runtimeApi.methods.updateDataProviderRecord(filePath, name, recordId, values);\n          }\n        : undefined,\n      createRecord: introspection.hasCreateRecord\n        ? async (values: Record<string, unknown>) => {\n            invariant(id, 'id is required');\n            const [filePath, name] = id.split(':');\n            return runtimeApi.methods.createDataProviderRecord(filePath, name, values);\n          }\n        : undefined,\n    };\n  }, [id, introspection, runtimeApi]);\n\n  return { isLoading, error, dataProvider };\n};\n","import * as React from 'react';\nimport { asArray } from '@toolpad/utils/collections';\nimport { Box } from '@mui/material';\nimport { AuthContext } from './useAuth';\n\nexport interface RequireAuthorizationProps {\n  children?: React.ReactNode;\n  allowAll?: boolean;\n  allowedRoles?: string[];\n}\n\nexport function RequireAuthorization({\n  children,\n  allowAll,\n  allowedRoles,\n}: RequireAuthorizationProps) {\n  const { session } = React.useContext(AuthContext);\n  const user = session?.user ?? null;\n\n  const allowedRolesSet = React.useMemo<Set<string>>(\n    () => new Set(asArray(allowedRoles ?? [])),\n    [allowedRoles],\n  );\n\n  let reason = null;\n  if (!allowAll && !user?.roles.some((role) => allowedRolesSet.has(role))) {\n    reason = `User does not have the roles to access this page.`;\n  }\n\n  return reason ? (\n    <Box\n      sx={{\n        flex: 1,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        mt: 6,\n      }}\n    >\n      Unauthorized. {reason}\n    </Box>\n  ) : (\n    children\n  );\n}\n","import * as React from 'react';\nimport {\n  Alert,\n  Button,\n  Divider,\n  Snackbar,\n  Stack,\n  TextField,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport PasswordIcon from '@mui/icons-material/Password';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { LoadingButton } from '@mui/lab';\nimport { useSearchParams } from 'react-router-dom';\nimport { useForm, Controller, SubmitHandler } from 'react-hook-form';\nimport { AuthProvider, AuthContext } from './useAuth';\nimport productIconDark from '../../public/product-icon-dark.svg';\nimport productIconLight from '../../public/product-icon-light.svg';\n\nconst AUTH_ERROR_URL_PARAM = 'error';\n\ntype CredentialsFormInputs = {\n  username: string;\n  password: string;\n};\n\nconst azureIconSvg = (\n  <svg viewBox=\"0 0 59.242 47.271\" width={18} height={18} xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"m32.368 0-17.468 15.145-14.9 26.75h13.437zm2.323 3.543-7.454 21.008 14.291 17.956-27.728 4.764h45.442z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport default function SignInPage() {\n  const theme = useTheme();\n  const [urlParams] = useSearchParams();\n\n  const { signIn, isSigningIn } = React.useContext(AuthContext);\n\n  const [errorSnackbarMessage, setErrorSnackbarMessage] = React.useState<React.ReactNode>('');\n  const [latestSelectedProvider, setLatestSelectedProvider] = React.useState<AuthProvider | null>(\n    null,\n  );\n\n  const [isCredentialsSignIn, setIsCredentialsSignIn] = React.useState(false);\n\n  const { authProviders } = React.useContext(AuthContext);\n\n  const handleSignIn = React.useCallback(\n    (provider: AuthProvider, payload?: Record<string, unknown>, isLocalProvider?: boolean) =>\n      () => {\n        setLatestSelectedProvider(provider);\n        signIn(provider, payload, isLocalProvider);\n      },\n    [signIn],\n  );\n\n  const handleCredentialsSignIn = React.useCallback(() => {\n    setIsCredentialsSignIn(true);\n  }, []);\n\n  const handleCredentialsBack = React.useCallback(() => {\n    setIsCredentialsSignIn(false);\n  }, []);\n\n  React.useEffect(() => {\n    const authError = urlParams.get(AUTH_ERROR_URL_PARAM);\n\n    if (authError === 'AccessDenied' || authError === 'CredentialsSignin') {\n      setErrorSnackbarMessage('Access unauthorized.');\n    } else if (authError === 'CallbackRouteError') {\n      setErrorSnackbarMessage(\n        'There was an error with your authentication provider configuration.',\n      );\n    } else if (authError === 'MissingSecretError') {\n      setErrorSnackbarMessage('Missing secret for authentication. Please provide a secret.');\n    } else if (authError) {\n      setErrorSnackbarMessage('An authentication error occurred.');\n    }\n  }, [urlParams]);\n\n  const handleErrorSnackbarClose = React.useCallback(() => {\n    setErrorSnackbarMessage('');\n  }, []);\n\n  const { handleSubmit: handleCredentialsSubmit, control: credentialsFormControl } =\n    useForm<CredentialsFormInputs>({\n      defaultValues: {\n        username: '',\n        password: '',\n      },\n    });\n\n  const onCredentialsSubmit: SubmitHandler<CredentialsFormInputs> = React.useCallback(\n    (data) => {\n      handleSignIn('credentials', data, true)();\n    },\n    [handleSignIn],\n  );\n\n  const productIcon = theme.palette.mode === 'dark' ? productIconDark : productIconLight;\n\n  return (\n    <React.Fragment>\n      <Stack\n        direction=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        flex={1}\n        gap={2}\n        sx={{ backgroundColor: theme.palette.background.default }}\n      >\n        <img src={productIcon} alt=\"Toolpad logo\" width={56} height={56} />\n        <Typography variant=\"h1\">Sign In</Typography>\n        <Typography variant=\"subtitle1\" mb={1}>\n          You must be authenticated to use this app.\n        </Typography>\n        <Stack sx={{ width: 300 }} gap={2}>\n          {isCredentialsSignIn ? (\n            <React.Fragment>\n              <Stack direction=\"row\" alignItems=\"center\">\n                <Button onClick={handleCredentialsBack}>\n                  <ArrowBackIcon />\n                  <Typography variant=\"button\" sx={{ ml: 1 }}>\n                    Back\n                  </Typography>\n                </Button>\n              </Stack>\n              <form onSubmit={handleCredentialsSubmit(onCredentialsSubmit)}>\n                <Stack direction=\"column\" gap={2}>\n                  <Controller\n                    name=\"username\"\n                    rules={{ required: 'Username is required' }}\n                    control={credentialsFormControl}\n                    render={({ field: { onChange, value }, fieldState: { error } }) => (\n                      <TextField\n                        helperText={error ? error.message : null}\n                        error={!!error}\n                        onChange={onChange}\n                        value={value}\n                        fullWidth\n                        label=\"Username\"\n                        variant=\"outlined\"\n                      />\n                    )}\n                  />\n                  <Controller\n                    name=\"password\"\n                    rules={{ required: 'Password is required' }}\n                    control={credentialsFormControl}\n                    render={({ field: { onChange, value }, fieldState: { error } }) => (\n                      <TextField\n                        type=\"password\"\n                        helperText={error ? error.message : null}\n                        error={!!error}\n                        onChange={onChange}\n                        value={value}\n                        fullWidth\n                        label=\"Password\"\n                        variant=\"outlined\"\n                      />\n                    )}\n                  />\n                  <LoadingButton\n                    variant=\"contained\"\n                    type=\"submit\"\n                    loading={isSigningIn && latestSelectedProvider === 'credentials'}\n                    disabled={isSigningIn}\n                    size=\"large\"\n                    fullWidth\n                  >\n                    Sign in\n                  </LoadingButton>\n                </Stack>\n              </form>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              {authProviders.includes('github') ? (\n                <LoadingButton\n                  variant=\"contained\"\n                  onClick={handleSignIn('github')}\n                  startIcon={<GitHubIcon />}\n                  loading={isSigningIn && latestSelectedProvider === 'github'}\n                  disabled={isSigningIn}\n                  loadingPosition=\"start\"\n                  size=\"large\"\n                  fullWidth\n                  sx={{\n                    backgroundColor: '#24292F',\n                  }}\n                >\n                  Sign in with GitHub\n                </LoadingButton>\n              ) : null}\n              {authProviders.includes('google') ? (\n                <LoadingButton\n                  variant=\"contained\"\n                  onClick={handleSignIn('google')}\n                  startIcon={\n                    <img\n                      alt=\"Google logo\"\n                      loading=\"lazy\"\n                      height=\"18\"\n                      width=\"18\"\n                      src=\"https://authjs.dev/img/providers/google.svg\"\n                      style={{ marginLeft: '2px', marginRight: '2px' }}\n                    />\n                  }\n                  loading={isSigningIn && latestSelectedProvider === 'google'}\n                  disabled={isSigningIn}\n                  loadingPosition=\"start\"\n                  size=\"large\"\n                  fullWidth\n                  sx={{\n                    backgroundColor: '#fff',\n                    color: '#000',\n                    '&:hover': {\n                      color: theme.palette.primary.contrastText,\n                    },\n                  }}\n                >\n                  Sign in with Google\n                </LoadingButton>\n              ) : null}\n              {authProviders.includes('azure-ad') ? (\n                <LoadingButton\n                  variant=\"contained\"\n                  onClick={handleSignIn('azure-ad')}\n                  startIcon={azureIconSvg}\n                  loading={isSigningIn && latestSelectedProvider === 'azure-ad'}\n                  disabled={isSigningIn}\n                  loadingPosition=\"start\"\n                  size=\"large\"\n                  fullWidth\n                  sx={{\n                    backgroundColor: '#0072c6',\n                  }}\n                >\n                  Sign in with Azure AD\n                </LoadingButton>\n              ) : null}\n              {authProviders.includes('credentials') ? (\n                <React.Fragment>\n                  {authProviders.length > 1 ? (\n                    <Divider>\n                      <Typography variant=\"caption\">OR</Typography>\n                    </Divider>\n                  ) : null}\n                  <LoadingButton\n                    variant=\"contained\"\n                    onClick={handleCredentialsSignIn}\n                    startIcon={<PasswordIcon />}\n                    loading={isSigningIn && latestSelectedProvider === 'credentials'}\n                    disabled={isSigningIn}\n                    loadingPosition=\"start\"\n                    size=\"large\"\n                    fullWidth\n                  >\n                    Sign in with credentials\n                  </LoadingButton>\n                </React.Fragment>\n              ) : null}\n            </React.Fragment>\n          )}\n        </Stack>\n      </Stack>\n      <Snackbar\n        open={!!errorSnackbarMessage}\n        autoHideDuration={6000}\n        onClose={handleErrorSnackbarClose}\n      >\n        {errorSnackbarMessage ? (\n          <Alert onClose={handleErrorSnackbarClose} severity=\"error\">\n            {errorSnackbarMessage}\n          </Alert>\n        ) : undefined}\n      </Snackbar>\n    </React.Fragment>\n  );\n}\n"],"mappings":"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","names":["React","Stack","Alert","Box","Typography","useAppHost","useNonNullableContext","mapValues","setObjectPath","useMutation","useLocation","useNavigate","useMatch","invariant","appDom","React","React","useQuery","React","queryClient","useQuery","React","React","Box","useTheme","useNavigate","React","appDom","useAppHost","useTheme","useNavigate","Box","React","useQuery","invariant","useNonNullableContext","useNonNullableContext","useQuery","invariant","React","Box","Box","React","Alert","Button","Typography","useTheme","useSearchParams","useTheme","useSearchParams","Typography","Button","Alert","EMPTY_ARRAY","EMPTY_OBJECT","useNavigate","mapValues","useNonNullableContext","setObjectPath","invariant","nestedBindablePaths","result","useLocation","isElement","Box","PageRoot","Stack","useMutation","useAppHost","Typography","Alert","useMatch"]}