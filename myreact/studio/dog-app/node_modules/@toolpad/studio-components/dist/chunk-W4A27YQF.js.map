{"version":3,"sources":["../src/Text.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Skeleton,\n  Typography as MuiTypography,\n  TypographyProps as MuiTypographyProps,\n  Link as MuiLink,\n  styled,\n  TextareaAutosize,\n  SxProps,\n  Typography,\n} from '@mui/material';\nimport { useNode } from '@toolpad/studio-runtime';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { errorFrom } from '@toolpad/utils/errors';\nimport createBuiltin from './createBuiltin';\nimport { SX_PROP_HELPER_TEXT } from './constants';\n\nconst StaticTextRoot = styled(Typography)({\n  // This will give it height, even when empty.\n  // REMARK: Does it make sense to put it in MUI core?\n  [`&:empty::before`]: { content: '\"\"', display: 'inline-block' },\n  outline: 'none',\n  whiteSpace: 'pre-wrap',\n  overflowWrap: 'anywhere',\n});\n\nconst ToolpadLink = styled(MuiLink, {\n  shouldForwardProp: (prop) => prop !== 'hasMinWidth',\n})<{\n  hasMinWidth?: boolean;\n}>(({ hasMinWidth }) => ({\n  minWidth: hasMinWidth ? 150 : undefined,\n  // Same as Typography\n  [`&:empty::before`]: { content: '\"\"', display: 'inline-block' },\n  overflowWrap: 'anywhere',\n}));\n\nconst Markdown = React.lazy(async () => import('markdown-to-jsx'));\n\nconst StyledTextareaAutosize = styled(TextareaAutosize)(({ theme }) => ({\n  width: '100%',\n  resize: 'none',\n  border: 'none',\n  outline: 'none',\n  padding: 0,\n\n  ...Object.fromEntries(\n    Object.keys(theme.typography).map((variant) => [\n      [`&.variant-${variant}`],\n      theme.typography[variant as keyof typeof theme.typography],\n    ]),\n  ),\n}));\n\ninterface TextProps {\n  mode: 'markdown' | 'link' | 'text';\n  value: string;\n  markdown: string;\n  href?: string;\n  openInNewTab?: boolean;\n  loading?: boolean;\n  error?: unknown;\n  sx?: SxProps;\n  variant: MuiTypographyProps['variant'];\n}\n\nconst MarkdownContainer = styled('div')(({ theme }) => ({\n  display: 'block',\n  overflowWrap: 'anywhere',\n  '&:empty::before, & > span:empty::before': {\n    content: '\"\"',\n    display: 'inline-block',\n  },\n  '& h1': {\n    ...theme.typography.h1,\n    marginTop: 16,\n    marginBottom: 16,\n  },\n  '& h2': {\n    ...theme.typography.h2,\n    marginTop: 12,\n    marginBottom: 12,\n  },\n  '& h3': {\n    ...theme.typography.h3,\n    marginTop: 12,\n    marginBottom: 12,\n  },\n  '& h4': {\n    ...theme.typography.h4,\n    marginTop: 12,\n    marginBottom: 12,\n  },\n  '& h5': {\n    ...theme.typography.h5,\n    marginTop: 4,\n    marginBottom: 4,\n  },\n  '& h6': {\n    ...theme.typography.h6,\n    marginTop: 4,\n    marginBottom: 4,\n  },\n  '& p': {\n    marginTop: 12,\n    marginBottom: 12,\n  },\n  '& *:first-child': {\n    marginTop: 0,\n  },\n  '& *:last-child': {\n    marginBottom: 0,\n  },\n}));\n\nconst CodeContainer = styled('pre')(({ theme }) => ({\n  backgroundColor: theme.palette.grey[200],\n  marginLeft: theme.spacing(1),\n  marginRight: theme.spacing(1),\n  borderRadius: theme.shape.borderRadius,\n  padding: theme.spacing(1),\n  overflow: 'auto',\n}));\n\nfunction parseInput(text: unknown): string {\n  return String(text).replaceAll('\\n', '');\n}\n\ninterface ErrorDisplayProps {\n  error: unknown;\n}\n\nfunction ErrorDisplay({ error }: ErrorDisplayProps) {\n  const errMessage = errorFrom(error).message;\n  return (\n    <MuiTypography sx={{ display: 'flex', flexDirection: 'row', gap: 1, alignItems: 'center' }}>\n      <ErrorIcon fontSize=\"small\" color=\"error\" />\n      <span>{errMessage}</span>\n    </MuiTypography>\n  );\n}\n\ninterface LinkContentProps {\n  value: string;\n  href?: string;\n  loading?: boolean;\n  openInNewTab?: boolean;\n  sx?: SxProps;\n}\n\nfunction LinkContent({ value, href, loading, sx, openInNewTab }: LinkContentProps) {\n  const content = React.useMemo(() => {\n    if (loading) {\n      return <Skeleton variant=\"text\" />;\n    }\n    return value;\n  }, [value, loading]);\n\n  const hasMinWidth = loading || !value;\n\n  return (\n    <ToolpadLink\n      href={href}\n      target={openInNewTab ? '_blank' : undefined}\n      rel=\"noopener\"\n      hasMinWidth={hasMinWidth}\n      sx={sx}\n    >\n      {content}\n    </ToolpadLink>\n  );\n}\n\ninterface MarkdownContentProps {\n  value: string;\n  loading?: boolean;\n  sx?: SxProps;\n}\n\nfunction MarkdownContent({ value, loading, sx }: MarkdownContentProps) {\n  const loadingFallback = <Skeleton variant=\"text\" width={'100%'} />;\n\n  return (\n    <MarkdownContainer sx={sx}>\n      {loading ? (\n        loadingFallback\n      ) : (\n        <React.Suspense fallback={loadingFallback}>\n          <Markdown\n            options={{\n              overrides: {\n                a: {\n                  component: MuiLink,\n                  props: {\n                    target: '_blank',\n                    rel: 'noopener',\n                  },\n                },\n                pre: {\n                  component: CodeContainer,\n                },\n              },\n              slugify: () => '',\n            }}\n          >\n            {value}\n          </Markdown>\n        </React.Suspense>\n      )}\n    </MarkdownContainer>\n  );\n}\n\ninterface TextContentProps {\n  value: string;\n  loading?: boolean;\n  sx?: SxProps;\n  variant: MuiTypographyProps['variant'];\n}\n\nfunction TextContent({ value, loading, sx, variant }: TextContentProps) {\n  const [contentEditable, setContentEditable] = React.useState<null | {\n    selectionStart: number;\n    selectionEnd: number;\n  }>(null);\n  const [input, setInput] = React.useState<string>(parseInput(value));\n  React.useEffect(() => {\n    setInput(parseInput(value));\n  }, [value]);\n\n  const nodeRuntime = useNode<TextProps>();\n\n  return contentEditable ? (\n    <StyledTextareaAutosize\n      value={input}\n      onChange={(event) => {\n        setInput(parseInput(event.target.value));\n      }}\n      onKeyDown={(event) => {\n        if (event.key === 'Enter') {\n          event.preventDefault();\n        }\n      }}\n      autoFocus\n      onFocus={(event) => {\n        event.currentTarget.selectionStart = contentEditable.selectionStart;\n        event.currentTarget.selectionEnd = Math.max(\n          contentEditable.selectionStart,\n          contentEditable.selectionEnd,\n        );\n      }}\n      onBlur={() => {\n        setContentEditable(null);\n        if (nodeRuntime) {\n          nodeRuntime.updateAppDomConstProp('value', input);\n        }\n      }}\n      className={`variant-${variant}`}\n    />\n  ) : (\n    <StaticTextRoot\n      sx={sx}\n      variant={variant}\n      onDoubleClick={() => {\n        if (nodeRuntime) {\n          const selection = window.getSelection();\n          setContentEditable({\n            selectionStart: selection?.anchorOffset || 0,\n            selectionEnd: selection?.focusOffset || 0,\n          });\n        }\n      }}\n    >\n      {loading ? <Skeleton variant=\"text\" /> : input}\n    </StaticTextRoot>\n  );\n}\n\nfunction Text(props: TextProps) {\n  if (props.error) {\n    return <ErrorDisplay error={props.error} />;\n  }\n  switch (props.mode) {\n    case 'markdown':\n      return <MarkdownContent {...props} />;\n    case 'link':\n      return <LinkContent {...props} />;\n    case 'text':\n    default:\n      return <TextContent {...props} />;\n  }\n}\n\nexport default createBuiltin(Text, {\n  helperText:\n    \"The Text component lets you display text. Text can be rendered in multiple forms: plain, as a link, or as markdown. It's rendered using Material UI [Typography](https://mui.com/material-ui/react-typography/).\",\n  layoutDirection: 'both',\n  loadingPropSource: ['value'],\n  loadingProp: 'loading',\n  errorPropSource: ['value'],\n  errorProp: 'error',\n  argTypes: {\n    mode: {\n      helperText:\n        'Defines how the content is rendered. Either as plain text, markdown, or as a link.',\n      type: 'string',\n      enum: ['text', 'markdown', 'link'],\n      enumLabels: {\n        text: 'Text',\n        markdown: 'Markdown',\n        link: 'Link',\n      },\n      default: 'text',\n      label: 'Mode',\n      control: { type: 'ToggleButtons' },\n    },\n    value: {\n      helperText: 'The text content.',\n      type: 'string',\n      default: 'text',\n      label: 'Value',\n      control: { type: 'markdown' },\n    },\n    href: {\n      helperText: 'The url that is being linked.',\n      type: 'string',\n      default: 'about:blank',\n      visible: ({ mode }: TextProps) => mode === 'link',\n    },\n    openInNewTab: {\n      label: 'Open in a new tab',\n      helperText: 'Clicking the link should open a new tab.',\n      type: 'boolean',\n      default: false,\n      visible: ({ mode }: TextProps) => mode === 'link',\n    },\n    variant: {\n      helperText:\n        'The Material UI typography [variant](https://mui.com/material-ui/customization/typography/#variants) that is used to display the text.',\n      type: 'string',\n      enum: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2'],\n      default: 'body1',\n      label: 'Variant',\n      visible: ({ mode }: TextProps) => mode === 'text',\n    },\n    loading: {\n      helperText:\n        'Displays a loading animation instead of the text. Can be used when the content is not available yet.',\n      type: 'boolean',\n      default: false,\n    },\n    sx: {\n      helperText: SX_PROP_HELPER_TEXT,\n      type: 'object',\n      visible: ({ mode }: TextProps) => mode !== 'markdown',\n    },\n  },\n});\n"],"mappings":"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","names":[]}