import {
  FORM_INPUT_ARG_TYPES,
  useFormInput,
  withComponentForm
} from "./chunk-ER3UTRTB.js";
import {
  SX_PROP_HELPER_TEXT
} from "./chunk-5TDNSO3W.js";
import {
  createBuiltin
} from "./chunk-5BNQEU2R.js";

// src/DatePicker.tsx
import * as React from "react";
import { LocalizationProvider } from "@mui/x-date-pickers/LocalizationProvider";
import { DesktopDatePicker } from "@mui/x-date-pickers/DesktopDatePicker";
import { AdapterDayjs } from "@mui/x-date-pickers/AdapterDayjs";
import dayjs from "dayjs";
var LOCALE_LOADERS = /* @__PURE__ */ new Map([
  ["en", () => import("dayjs/locale/en")],
  ["nl", () => import("dayjs/locale/nl")],
  ["fr", () => import("dayjs/locale/fr")]
  // TODO...
]);
var handlers = /* @__PURE__ */ new Set();
var loadedLocale;
function trygetLoadableLocale(locale) {
  const load = LOCALE_LOADERS.get(locale);
  if (load) {
    return { locale, load };
  }
  return null;
}
function getLoadableLocale() {
  if (typeof window === "undefined") {
    return null;
  }
  const languages = window.navigator.languages;
  for (const locale of languages) {
    const { language } = new Intl.Locale(locale);
    const result = trygetLoadableLocale(locale) || trygetLoadableLocale(language);
    if (result) {
      return result;
    }
  }
  return null;
}
var loadableLocale = getLoadableLocale();
if (loadableLocale) {
  loadableLocale.load().then(() => {
    loadedLocale = loadableLocale.locale;
    handlers.forEach((handler) => handler());
  });
}
function subscribeLocaleLoader(cb) {
  handlers.add(cb);
  return () => handlers.delete(cb);
}
function getSnapshot() {
  return loadedLocale;
}
function DatePicker({
  format,
  onChange,
  value: valueProp,
  defaultValue: defaultValueProp,
  isRequired,
  ...rest
}) {
  const { onFormInputChange, formInputError, renderFormInput } = useFormInput({
    name: rest.name,
    label: rest.label,
    value: valueProp,
    onChange,
    defaultValue: defaultValueProp,
    emptyValue: null,
    validationProps: { isRequired }
  });
  const handleChange = React.useMemo(
    () => onFormInputChange ? (newValue) => {
      const stringValue = newValue?.format("YYYY-MM-DD") || "";
      onFormInputChange(stringValue);
    } : void 0,
    [onFormInputChange]
  );
  const adapterLocale = React.useSyncExternalStore(
    subscribeLocaleLoader,
    getSnapshot,
    () => void 0
  );
  const value = React.useMemo(
    () => typeof valueProp === "string" ? dayjs(valueProp) : valueProp,
    [valueProp]
  );
  const defaultValue = React.useMemo(
    () => typeof defaultValueProp === "string" ? dayjs(defaultValueProp) : defaultValueProp,
    [defaultValueProp]
  );
  return /* @__PURE__ */ React.createElement(LocalizationProvider, { dateAdapter: AdapterDayjs, adapterLocale }, renderFormInput(
    /* @__PURE__ */ React.createElement(
      DesktopDatePicker,
      {
        ...rest,
        format: format || "L",
        value: value || null,
        onChange: handleChange,
        defaultValue,
        slotProps: {
          textField: {
            fullWidth: rest.fullWidth,
            variant: rest.variant,
            size: rest.size,
            sx: rest.sx,
            ...formInputError && {
              error: Boolean(formInputError),
              helperText: formInputError.message || ""
            }
          }
        }
      }
    )
  ));
}
var FormWrappedDatePicker = withComponentForm(DatePicker);
var DatePicker_default = createBuiltin(FormWrappedDatePicker, {
  helperText: "The [MUI\xA0X Date Picker](https://mui.com/toolpad/studio/components/date-picker/) component.\n\nThe date picker lets the user select a date.",
  argTypes: {
    value: {
      helperText: "The currently selected date.",
      type: "string",
      default: "",
      onChangeProp: "onChange",
      defaultValueProp: "defaultValue"
    },
    format: {
      helperText: "The [format](https://day.js.org/docs/en/display/format) of the date in the UI. The value for the bindings is always be in the `YYYY-MM-DD` format. Leave empty to let the end-user locale define the format.",
      type: "string",
      default: ""
    },
    defaultValue: {
      helperText: "A default value for the date picker.",
      type: "string",
      default: ""
    },
    label: {
      helperText: 'A label that describes the content of the date picker, for example "Arrival date".',
      type: "string"
    },
    name: {
      helperText: "Name of this element. Used as a reference in form data.",
      type: "string"
    },
    variant: {
      helperText: "One of the available Material\xA0UI TextField [variants](https://mui.com/material-ui/react-button/#basic-button). Possible values are `outlined`, `filled` or `standard`",
      type: "string",
      enum: ["outlined", "filled", "standard"],
      default: "outlined"
    },
    size: {
      helperText: "The size of the component. One of `small`, or `medium`.",
      type: "string",
      enum: ["small", "medium"],
      default: "small"
    },
    fullWidth: {
      helperText: "Whether the button should occupy all available horizontal space.",
      type: "boolean"
    },
    disabled: {
      helperText: "The date picker is disabled.",
      type: "boolean"
    },
    ...FORM_INPUT_ARG_TYPES,
    sx: {
      helperText: SX_PROP_HELPER_TEXT,
      type: "object"
    }
  }
});

export {
  DatePicker_default
};
//# sourceMappingURL=chunk-AGSU34BT.js.map