{"version":3,"sources":["../src/Select.tsx"],"sourcesContent":["import * as React from 'react';\nimport { TextFieldProps, MenuItem, TextField, styled } from '@mui/material';\nimport createBuiltin from './createBuiltin';\nimport {\n  FORM_INPUT_ARG_TYPES,\n  FormInputComponentProps,\n  useFormInput,\n  withComponentForm,\n} from './Form';\nimport { SX_PROP_HELPER_TEXT } from './constants';\n\nconst ToolpadTextField = styled(TextField)({\n  minWidth: 120,\n});\n\nexport interface SelectOption {\n  value: string;\n  label?: string;\n}\n\nexport type SelectProps = Omit<TextFieldProps, 'value' | 'onChange'> & {\n  value: string;\n  onChange: (newValue: string) => void;\n  label?: string;\n  defaultValue: string;\n  options: (string | SelectOption)[];\n} & Pick<FormInputComponentProps, 'name' | 'isRequired'>;\n\nfunction Select({\n  options,\n  value,\n  onChange,\n  fullWidth,\n  sx,\n  defaultValue,\n  isRequired,\n  ...rest\n}: SelectProps) {\n  const { onFormInputChange, formInputError, renderFormInput } = useFormInput<string>({\n    name: rest.name,\n    label: rest.label,\n    value,\n    onChange,\n    defaultValue,\n    validationProps: { isRequired },\n  });\n\n  const id = React.useId();\n\n  const handleChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue = event.target.value;\n      onFormInputChange(newValue);\n    },\n    [onFormInputChange],\n  );\n\n  const renderedOptions = React.useMemo(\n    () =>\n      options.map((option, i) => {\n        const parsedOption: SelectOption =\n          option && typeof option === 'object' ? option : { value: String(option) };\n        return (\n          <MenuItem key={parsedOption.value ?? `${id}::${i}`} value={parsedOption.value}>\n            {String(parsedOption.label ?? parsedOption.value)}\n          </MenuItem>\n        );\n      }),\n    [id, options],\n  );\n\n  return renderFormInput(\n    <ToolpadTextField\n      {...rest}\n      value={value}\n      onChange={handleChange}\n      select\n      fullWidth={fullWidth}\n      sx={sx}\n      {...(formInputError && {\n        error: Boolean(formInputError),\n        helperText: formInputError.message || '',\n      })}\n    >\n      {renderedOptions}\n    </ToolpadTextField>,\n  );\n}\n\nconst FormWrappedSelect = withComponentForm(Select);\n\nexport default createBuiltin(FormWrappedSelect, {\n  helperText:\n    'The Material UI [Select](https://mui.com/material-ui/react-select/) component lets you select a value from a set of options.',\n  layoutDirection: 'both',\n  loadingPropSource: ['value', 'options'],\n  loadingProp: 'disabled',\n  argTypes: {\n    options: {\n      helperText: 'The available options to select from.',\n      type: 'array',\n      schema: {\n        type: 'array',\n        items: {\n          type: ['object', 'string'],\n          additionalProperties: true,\n          properties: {\n            value: {\n              type: 'string',\n            },\n            label: {\n              type: 'string',\n            },\n          },\n          required: ['value'],\n        },\n      },\n      default: [],\n      control: { type: 'SelectOptions' },\n    },\n    value: {\n      helperText: 'The currently selected value.',\n      type: 'string',\n      default: '',\n      onChangeProp: 'onChange',\n      defaultValueProp: 'defaultValue',\n    },\n    defaultValue: {\n      helperText: 'A default value.',\n      type: 'string',\n      default: '',\n    },\n    label: {\n      helperText: 'A label that describes the option that can be selected, for example \"Country\".',\n      type: 'string',\n      default: '',\n    },\n    variant: {\n      helperText:\n        'One of the available Material UI TextField [variants](https://mui.com/material-ui/react-button/#basic-button). Possible values are `outlined`, `filled` or `standard`',\n      type: 'string',\n      enum: ['outlined', 'filled', 'standard'],\n      default: 'outlined',\n    },\n    size: {\n      helperText: 'The size of the select. One of `small`, or `medium`.',\n      type: 'string',\n      enum: ['small', 'medium'],\n      default: 'small',\n    },\n    fullWidth: {\n      helperText: 'Whether the select should occupy all available horizontal space.',\n      type: 'boolean',\n    },\n    disabled: {\n      helperText: 'Whether the select is disabled.',\n      type: 'boolean',\n    },\n    ...FORM_INPUT_ARG_TYPES,\n    sx: {\n      helperText: SX_PROP_HELPER_TEXT,\n      type: 'object',\n    },\n  },\n});\n"],"mappings":"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","names":[]}