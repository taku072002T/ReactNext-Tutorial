import {
  FORM_INPUT_ARG_TYPES,
  FORM_TEXT_INPUT_ARG_TYPES,
  useFormInput,
  withComponentForm
} from "./chunk-ER3UTRTB.js";
import {
  SX_PROP_HELPER_TEXT
} from "./chunk-5TDNSO3W.js";
import {
  createBuiltin
} from "./chunk-5BNQEU2R.js";

// src/TextField.tsx
import * as React from "react";
import {
  TextField as MuiTextField
} from "@mui/material";
function TextField({
  defaultValue,
  onChange,
  value,
  isRequired,
  minLength,
  maxLength,
  password,
  ...rest
}) {
  const { onFormInputChange, formInputError, renderFormInput } = useFormInput({
    name: rest.name,
    label: rest.label,
    value,
    onChange,
    emptyValue: "",
    defaultValue,
    validationProps: { isRequired, minLength, maxLength }
  });
  const handleChange = React.useCallback(
    (event) => {
      const newValue = event.target.value;
      onFormInputChange(newValue);
    },
    [onFormInputChange]
  );
  return renderFormInput(
    /* @__PURE__ */ React.createElement(
      MuiTextField,
      {
        value,
        onChange: handleChange,
        ...rest,
        ...formInputError && {
          error: Boolean(formInputError),
          helperText: formInputError.message || ""
        },
        type: password ? "password" : "text"
      }
    )
  );
}
var FormWrappedTextField = withComponentForm(TextField);
var TextField_default = createBuiltin(FormWrappedTextField, {
  helperText: "The Material\xA0UI [TextField](https://mui.com/toolpad/studio/components/text-field/) component lets you input a text value.",
  layoutDirection: "both",
  argTypes: {
    value: {
      helperText: "The value that is controlled by this text input.",
      type: "string",
      default: "",
      onChangeProp: "onChange",
      defaultValueProp: "defaultValue"
    },
    defaultValue: {
      helperText: "A default value for when the input is still empty.",
      type: "string",
      default: ""
    },
    label: {
      helperText: 'A label that describes the content of the text field, for example "First name".',
      type: "string"
    },
    variant: {
      helperText: "One of the available Material\xA0UI TextField [variants](https://mui.com/material-ui/react-button/#basic-button). Possible values are `outlined`, `filled` or `standard`",
      type: "string",
      enum: ["outlined", "filled", "standard"],
      default: "outlined"
    },
    size: {
      helperText: "The size of the input. One of `small`, or `medium`.",
      type: "string",
      enum: ["small", "medium"],
      default: "small"
    },
    fullWidth: {
      helperText: "Whether the input should occupy all available horizontal space.",
      type: "boolean"
    },
    password: {
      helperText: "Masks the input to hide what's being typed.",
      type: "boolean"
    },
    placeholder: {
      helperText: "The short hint displayed in the `input` before the user enters a value.",
      type: "string"
    },
    disabled: {
      helperText: "Whether the input is disabled.",
      type: "boolean"
    },
    ...FORM_INPUT_ARG_TYPES,
    ...FORM_TEXT_INPUT_ARG_TYPES,
    sx: {
      helperText: SX_PROP_HELPER_TEXT,
      type: "object"
    }
  }
});

export {
  TextField_default
};
//# sourceMappingURL=chunk-GE4CTFWP.js.map