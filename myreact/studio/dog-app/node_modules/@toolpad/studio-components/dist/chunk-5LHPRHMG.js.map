{"version":3,"sources":["../src/FilePicker.tsx"],"sourcesContent":["import * as React from 'react';\nimport { TextField as MuiTextField, TextFieldProps as MuiTextFieldProps } from '@mui/material';\nimport createBuiltin from './createBuiltin';\nimport {\n  FORM_INPUT_ARG_TYPES,\n  FormInputComponentProps,\n  useFormInput,\n  withComponentForm,\n} from './Form';\nimport { SX_PROP_HELPER_TEXT } from './constants';\n\ninterface FullFile {\n  name: string;\n  type: string;\n  size: number;\n  base64: null | string;\n}\n\nexport type FilePickerProps = MuiTextFieldProps & {\n  multiple: boolean;\n  value: FullFile[];\n  onChange: (files: FullFile[]) => void;\n  label?: string;\n} & Pick<FormInputComponentProps, 'name' | 'isRequired'>;\n\nconst readFile = async (file: Blob): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    const readerBase64 = new FileReader();\n\n    readerBase64.onload = (event) => {\n      if (!event.target) {\n        reject();\n        return;\n      }\n\n      resolve(event.target.result as string);\n    };\n\n    readerBase64.readAsDataURL(file);\n  });\n};\n\nfunction FilePicker({ multiple, value, onChange, isRequired, ...rest }: FilePickerProps) {\n  const { onFormInputChange, formInputError, renderFormInput } = useFormInput<FullFile[]>({\n    name: rest.name,\n    label: rest.label,\n    value,\n    onChange,\n    validationProps: { isRequired },\n  });\n\n  const handleChange = async (changeEvent: React.ChangeEvent<HTMLInputElement>) => {\n    const filesPromises = Array.from(changeEvent.target.files || []).map(async (file) => {\n      const fullFile: FullFile = {\n        name: file.name,\n        type: file.type,\n        size: file.size,\n        base64: await readFile(file),\n      };\n\n      return fullFile;\n    });\n\n    const files = await Promise.all(filesPromises);\n\n    onFormInputChange(files);\n  };\n\n  return renderFormInput(\n    <MuiTextField\n      {...rest}\n      type=\"file\"\n      value={undefined}\n      onChange={handleChange}\n      {...(formInputError && {\n        error: Boolean(formInputError),\n        helperText: formInputError.message || '',\n      })}\n      slotProps={{\n        htmlInput: { multiple },\n        inputLabel: { shrink: true },\n      }}\n    />,\n  );\n}\n\nconst FormWrappedFilePicker = withComponentForm(FilePicker);\n\nexport default createBuiltin(FormWrappedFilePicker, {\n  helperText: 'File Picker component.\\nIt allows users to take select and read files.',\n  argTypes: {\n    value: {\n      helperText: 'The value that is controlled by this FilePicker.',\n      type: 'object',\n      visible: false,\n      onChangeProp: 'onChange',\n      schema: {\n        type: 'object',\n        properties: {\n          name: { type: 'string' },\n          type: { type: 'string' },\n          size: { type: 'number' },\n          base64: { type: 'string' },\n        },\n      },\n    },\n    label: {\n      helperText:\n        'A label that describes the content of the FilePicker, for example \"Profile Image\".',\n      type: 'string',\n    },\n    multiple: {\n      helperText: 'Whether the FilePicker should accept multiple files.',\n      type: 'boolean',\n      default: true,\n    },\n    disabled: {\n      helperText: 'Whether the FilePicker is disabled.',\n      type: 'boolean',\n    },\n    ...FORM_INPUT_ARG_TYPES,\n    sx: {\n      helperText: SX_PROP_HELPER_TEXT,\n      type: 'object',\n    },\n  },\n});\n"],"mappings":";;;;;;;;;;;;;AAAA,YAAY,WAAW;AACvB,SAAS,aAAa,oBAAyD;AAwB/E,IAAM,WAAW,OAAO,SAAgC;AACtD,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAM,eAAe,IAAI,WAAW;AAEpC,iBAAa,SAAS,CAAC,UAAU;AAC/B,UAAI,CAAC,MAAM,QAAQ;AACjB,eAAO;AACP;AAAA,MACF;AAEA,cAAQ,MAAM,OAAO,MAAgB;AAAA,IACvC;AAEA,iBAAa,cAAc,IAAI;AAAA,EACjC,CAAC;AACH;AAEA,SAAS,WAAW,EAAE,UAAU,OAAO,UAAU,YAAY,GAAG,KAAK,GAAoB;AACvF,QAAM,EAAE,mBAAmB,gBAAgB,gBAAgB,IAAI,aAAyB;AAAA,IACtF,MAAM,KAAK;AAAA,IACX,OAAO,KAAK;AAAA,IACZ;AAAA,IACA;AAAA,IACA,iBAAiB,EAAE,WAAW;AAAA,EAChC,CAAC;AAED,QAAM,eAAe,OAAO,gBAAqD;AAC/E,UAAM,gBAAgB,MAAM,KAAK,YAAY,OAAO,SAAS,CAAC,CAAC,EAAE,IAAI,OAAO,SAAS;AACnF,YAAM,WAAqB;AAAA,QACzB,MAAM,KAAK;AAAA,QACX,MAAM,KAAK;AAAA,QACX,MAAM,KAAK;AAAA,QACX,QAAQ,MAAM,SAAS,IAAI;AAAA,MAC7B;AAEA,aAAO;AAAA,IACT,CAAC;AAED,UAAM,QAAQ,MAAM,QAAQ,IAAI,aAAa;AAE7C,sBAAkB,KAAK;AAAA,EACzB;AAEA,SAAO;AAAA,IACL;AAAA,MAAC;AAAA;AAAA,QACE,GAAG;AAAA,QACJ,MAAK;AAAA,QACL,OAAO;AAAA,QACP,UAAU;AAAA,QACT,GAAI,kBAAkB;AAAA,UACrB,OAAO,QAAQ,cAAc;AAAA,UAC7B,YAAY,eAAe,WAAW;AAAA,QACxC;AAAA,QACA,WAAW;AAAA,UACT,WAAW,EAAE,SAAS;AAAA,UACtB,YAAY,EAAE,QAAQ,KAAK;AAAA,QAC7B;AAAA;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAM,wBAAwB,kBAAkB,UAAU;AAE1D,IAAO,qBAAQ,cAAc,uBAAuB;AAAA,EAClD,YAAY;AAAA,EACZ,UAAU;AAAA,IACR,OAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM;AAAA,MACN,SAAS;AAAA,MACT,cAAc;AAAA,MACd,QAAQ;AAAA,QACN,MAAM;AAAA,QACN,YAAY;AAAA,UACV,MAAM,EAAE,MAAM,SAAS;AAAA,UACvB,MAAM,EAAE,MAAM,SAAS;AAAA,UACvB,MAAM,EAAE,MAAM,SAAS;AAAA,UACvB,QAAQ,EAAE,MAAM,SAAS;AAAA,QAC3B;AAAA,MACF;AAAA,IACF;AAAA,IACA,OAAO;AAAA,MACL,YACE;AAAA,MACF,MAAM;AAAA,IACR;AAAA,IACA,UAAU;AAAA,MACR,YAAY;AAAA,MACZ,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,UAAU;AAAA,MACR,YAAY;AAAA,MACZ,MAAM;AAAA,IACR;AAAA,IACA,GAAG;AAAA,IACH,IAAI;AAAA,MACF,YAAY;AAAA,MACZ,MAAM;AAAA,IACR;AAAA,EACF;AACF,CAAC;","names":[]}