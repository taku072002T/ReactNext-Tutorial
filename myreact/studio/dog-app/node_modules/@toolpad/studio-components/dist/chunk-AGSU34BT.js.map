{"version":3,"sources":["../src/DatePicker.tsx"],"sourcesContent":["import * as React from 'react';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DesktopDatePicker, DesktopDatePickerProps } from '@mui/x-date-pickers/DesktopDatePicker';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport dayjs from 'dayjs';\nimport createBuiltin from './createBuiltin';\nimport {\n  FORM_INPUT_ARG_TYPES,\n  FormInputComponentProps,\n  useFormInput,\n  withComponentForm,\n} from './Form';\nimport { SX_PROP_HELPER_TEXT } from './constants';\n\nconst LOCALE_LOADERS = new Map([\n  ['en', () => import('dayjs/locale/en')],\n  ['nl', () => import('dayjs/locale/nl')],\n  ['fr', () => import('dayjs/locale/fr')],\n  // TODO...\n]);\n\ninterface LoadableLocale {\n  locale: string;\n  load: () => Promise<unknown>;\n}\n\nconst handlers = new Set<() => void>();\nlet loadedLocale: undefined | string;\n\nfunction trygetLoadableLocale(locale: string): LoadableLocale | null {\n  const load = LOCALE_LOADERS.get(locale);\n  if (load) {\n    return { locale, load };\n  }\n  return null;\n}\n\nfunction getLoadableLocale(): LoadableLocale | null {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n  const languages = window.navigator.languages;\n  for (const locale of languages) {\n    const { language } = new Intl.Locale(locale);\n    const result = trygetLoadableLocale(locale) || trygetLoadableLocale(language);\n    if (result) {\n      return result;\n    }\n  }\n  return null;\n}\n\nconst loadableLocale = getLoadableLocale();\nif (loadableLocale) {\n  loadableLocale.load().then(() => {\n    loadedLocale = loadableLocale.locale;\n    handlers.forEach((handler) => handler());\n  });\n}\n\nfunction subscribeLocaleLoader(cb: () => void) {\n  handlers.add(cb);\n  return () => handlers.delete(cb);\n}\n\nfunction getSnapshot() {\n  return loadedLocale;\n}\n\nexport interface DatePickerProps\n  extends Omit<DesktopDatePickerProps<dayjs.Dayjs>, 'value' | 'onChange' | 'defaultValue' | 'name'>,\n    Pick<FormInputComponentProps, 'name' | 'isRequired'> {\n  value?: string;\n  onChange?: (newValue: string | null) => void;\n  label?: string;\n  format: string;\n  fullWidth: boolean;\n  variant: 'outlined' | 'filled' | 'standard';\n  size: 'small' | 'medium';\n  sx: any;\n  defaultValue?: string;\n}\n\nfunction DatePicker({\n  format,\n  onChange,\n  value: valueProp,\n  defaultValue: defaultValueProp,\n  isRequired,\n  ...rest\n}: DatePickerProps) {\n  const { onFormInputChange, formInputError, renderFormInput } = useFormInput<string | null>({\n    name: rest.name,\n    label: rest.label,\n    value: valueProp,\n    onChange,\n    defaultValue: defaultValueProp,\n    emptyValue: null,\n    validationProps: { isRequired },\n  });\n\n  const handleChange = React.useMemo(\n    () =>\n      onFormInputChange\n        ? (newValue: dayjs.Dayjs | null) => {\n            // date-only form of ISO8601. See https://tc39.es/ecma262/#sec-date-time-string-format\n            const stringValue = newValue?.format('YYYY-MM-DD') || '';\n\n            onFormInputChange(stringValue);\n          }\n        : undefined,\n    [onFormInputChange],\n  );\n\n  const adapterLocale = React.useSyncExternalStore(\n    subscribeLocaleLoader,\n    getSnapshot,\n    () => undefined,\n  );\n\n  const value = React.useMemo(\n    () => (typeof valueProp === 'string' ? dayjs(valueProp) : valueProp),\n    [valueProp],\n  );\n\n  const defaultValue = React.useMemo(\n    () => (typeof defaultValueProp === 'string' ? dayjs(defaultValueProp) : defaultValueProp),\n    [defaultValueProp],\n  );\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs} adapterLocale={adapterLocale}>\n      {renderFormInput(\n        <DesktopDatePicker<dayjs.Dayjs>\n          {...rest}\n          format={format || 'L'}\n          value={value || null}\n          onChange={handleChange}\n          defaultValue={defaultValue}\n          slotProps={{\n            textField: {\n              fullWidth: rest.fullWidth,\n              variant: rest.variant,\n              size: rest.size,\n              sx: rest.sx,\n              ...(formInputError && {\n                error: Boolean(formInputError),\n                helperText: formInputError.message || '',\n              }),\n            },\n          }}\n        />,\n      )}\n    </LocalizationProvider>\n  );\n}\n\nconst FormWrappedDatePicker = withComponentForm(DatePicker);\n\nexport default createBuiltin(FormWrappedDatePicker, {\n  helperText:\n    'The [MUI X Date Picker](https://mui.com/toolpad/studio/components/date-picker/) component.\\n\\nThe date picker lets the user select a date.',\n  argTypes: {\n    value: {\n      helperText: 'The currently selected date.',\n      type: 'string',\n      default: '',\n      onChangeProp: 'onChange',\n      defaultValueProp: 'defaultValue',\n    },\n    format: {\n      helperText:\n        'The [format](https://day.js.org/docs/en/display/format) of the date in the UI. The value for the bindings is always be in the `YYYY-MM-DD` format. Leave empty to let the end-user locale define the format.',\n\n      type: 'string',\n      default: '',\n    },\n    defaultValue: {\n      helperText: 'A default value for the date picker.',\n      type: 'string',\n      default: '',\n    },\n    label: {\n      helperText:\n        'A label that describes the content of the date picker, for example \"Arrival date\".',\n      type: 'string',\n    },\n    name: {\n      helperText: 'Name of this element. Used as a reference in form data.',\n      type: 'string',\n    },\n    variant: {\n      helperText:\n        'One of the available Material UI TextField [variants](https://mui.com/material-ui/react-button/#basic-button). Possible values are `outlined`, `filled` or `standard`',\n      type: 'string',\n      enum: ['outlined', 'filled', 'standard'],\n      default: 'outlined',\n    },\n    size: {\n      helperText: 'The size of the component. One of `small`, or `medium`.',\n      type: 'string',\n      enum: ['small', 'medium'],\n      default: 'small',\n    },\n    fullWidth: {\n      helperText: 'Whether the button should occupy all available horizontal space.',\n      type: 'boolean',\n    },\n    disabled: {\n      helperText: 'The date picker is disabled.',\n      type: 'boolean',\n    },\n    ...FORM_INPUT_ARG_TYPES,\n    sx: {\n      helperText: SX_PROP_HELPER_TEXT,\n      type: 'object',\n    },\n  },\n});\n"],"mappings":"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","names":[]}