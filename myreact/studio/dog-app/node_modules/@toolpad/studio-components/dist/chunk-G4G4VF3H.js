import {
  SX_PROP_HELPER_TEXT
} from "./chunk-5TDNSO3W.js";
import {
  createBuiltin
} from "./chunk-5BNQEU2R.js";

// src/List.tsx
import * as React from "react";
import { Box, List as MuiList, ListItem, Skeleton, Stack, styled } from "@mui/material";
var ToolpadList = styled(MuiList)({
  width: "100%"
});
function List({ itemCount, renderItem, disablePadding = false, sx, loading }) {
  return /* @__PURE__ */ React.createElement(ToolpadList, { disablePadding, sx }, loading ? /* @__PURE__ */ React.createElement(Stack, { spacing: 2 }, /* @__PURE__ */ React.createElement(Skeleton, { variant: "rounded" }), /* @__PURE__ */ React.createElement(Skeleton, { variant: "rounded" }), /* @__PURE__ */ React.createElement(Skeleton, { variant: "rounded" })) : [...Array(itemCount).keys()].map((index) => /* @__PURE__ */ React.createElement(ListItem, { key: index, disablePadding }, /* @__PURE__ */ React.createElement(Box, { sx: { width: "100%", p: 0, m: 0 } }, renderItem(`item-${index}`, { i: index })))));
}
var List_default = createBuiltin(List, {
  loadingPropSource: ["itemCount"],
  loadingProp: "loading",
  helperText: "A [List](https://mui.com/toolpad/studio/components/list/) component.",
  argTypes: {
    itemCount: {
      helperText: "Number of items to render.",
      type: "number",
      default: 3
    },
    renderItem: {
      helperText: "List item template to render.",
      type: "template",
      control: { type: "layoutSlot" }
    },
    disablePadding: {
      helperText: "If true, vertical padding is removed from the list.",
      type: "boolean"
    },
    loading: {
      helperText: "Displays a loading animation indicating the list is still loading",
      type: "boolean",
      default: false
    },
    sx: {
      helperText: SX_PROP_HELPER_TEXT,
      type: "object"
    }
  }
});

export {
  List_default
};
//# sourceMappingURL=chunk-G4G4VF3H.js.map