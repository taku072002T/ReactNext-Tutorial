import {
  SX_PROP_HELPER_TEXT
} from "./chunk-5TDNSO3W.js";
import {
  createBuiltin
} from "./chunk-5BNQEU2R.js";

// src/Button.tsx
import * as React from "react";
import { LoadingButton as MuiButton } from "@mui/lab";
function Button({ content, ...rest }) {
  return /* @__PURE__ */ React.createElement(MuiButton, { ...rest }, content);
}
var Button_default = createBuiltin(Button, {
  helperText: "The Material\xA0UI [Button](https://mui.com/toolpad/studio/components/button/) component.\n\nButtons allow users to take actions, and make choices, with a single tap.",
  layoutDirection: "both",
  argTypes: {
    onClick: {
      helperText: "Add logic to be executed when the user clicks the button.",
      type: "event"
    },
    content: {
      helperText: "Will appear as the text content of the button.",
      type: "string",
      default: "Button Text"
    },
    variant: {
      helperText: "One of the available Material\xA0UI Button [variants](https://mui.com/material-ui/react-button/#basic-button). Possible values are `contained`, `outlined` or `text`",
      type: "string",
      enum: ["contained", "outlined", "text"],
      default: "contained"
    },
    size: {
      helperText: "The size of the component. One of `small`, `medium`, or `large`.",
      type: "string",
      enum: ["small", "medium", "large"],
      default: "small"
    },
    color: {
      helperText: "The theme color of the component.",
      type: "string",
      enum: ["primary", "secondary"],
      default: "primary"
    },
    fullWidth: {
      helperText: "Whether the button should occupy all available horizontal space.",
      type: "boolean"
    },
    loading: {
      helperText: "Displays a loading animation indicating the button isn't interactive yet",
      type: "boolean"
    },
    disabled: {
      helperText: "Whether the button is disabled.",
      type: "boolean"
    },
    sx: {
      helperText: SX_PROP_HELPER_TEXT,
      type: "object"
    }
  }
});

export {
  Button_default
};
//# sourceMappingURL=chunk-CNKXQXSO.js.map