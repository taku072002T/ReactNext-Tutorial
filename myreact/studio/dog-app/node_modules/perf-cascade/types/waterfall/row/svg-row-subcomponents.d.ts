/**
 * Creation of sub-components used in a resource request row
 */
import { RectData } from "../../typing/rect-data";
import { WaterfallEntry } from "../../typing/waterfall";
/**
 * Render the block and timings for a request
 * @param  {RectData}         rectData Basic dependencys and globals
 * @param  {WaterfallEntry}   entry Request Details, e.g. Request and Timing Data
 * @return {SVGElement}       Renerated SVG (rect or g element)
 */
export declare function createRect(rectData: RectData, entry: WaterfallEntry): SVGElement;
/**
 * Create a SVG text element for the request number label, right aligned within the specified width.
 * @param {number} x horizontal position (in px).
 * @param {number} y vertical position of related request block (in px).
 * @param {string} requestNumber the request number string
 * @param {number} height height of row
 * @param {number} width width of the space within the right align the label.
 * @returns {SVGTextElement}
 */
export declare function createRequestNumberLabel(x: number, y: number, requestNumber: string, height: number, width: number): SVGTextElement;
/**
 * Create a new clipper SVG Text element to label a request block to fit the left panel width
 * @param  {number}         x                horizontal position (in px)
 * @param  {number}         y                vertical position of related request block (in px)
 * @param  {string}         name             URL
 * @param  {number}         height           height of row
 * @return {SVGTextElement}                  label SVG element
 */
export declare function createRequestLabelClipped(x: number, y: number, name: string, height: number): SVGTextElement;
/**
 * Create a new full width SVG Text element to label a request block
 * @param  {number}         x                horizontal position (in px)
 * @param  {number}         y                vertical position of related request block (in px)
 * @param  {string}         name             URL
 * @param  {number}         height           height of row
 */
export declare function createRequestLabelFull(x: number, y: number, name: string, height: number): SVGGElement;
/**
 * Appends the labels to `rowFixed` - TODO: see if this can be done more elegant
 * @param {SVGGElement}    rowFixed   [description]
 * @param {SVGTextElement} requestNumberLabel a label placed in front of every shortLabel
 * @param {SVGTextElement} shortLabel [description]
 * @param {SVGGElement}    fullLabel  [description]
 */
export declare function appendRequestLabels(rowFixed: SVGGElement, requestNumberLabel: SVGTextElement, shortLabel: SVGTextElement, fullLabel: SVGGElement): void;
/**
 * Stripe for BG
 * @param  {number}      y              [description]
 * @param  {number}      height         [description]
 * @param  {boolean}     isEven         [description]
 * @return {SVGRectElement}                [description]
 */
export declare function createBgStripe(y: number, height: number, isEven: boolean): SVGRectElement;
export declare function createNameRowBg(y: number, rowHeight: number): SVGGElement;
export declare function createRowBg(y: number, rowHeight: number): SVGGElement;
