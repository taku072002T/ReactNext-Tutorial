class PubSub {
    constructor() {
        this.subscribers = [];
    }
    /** Call `fn` whenever a new change is publisched on OverlayChanges channel */
    subscribeToOverlayChanges(fn) {
        this.subscribers.push(fn);
    }
    /**
     * Call `fn` whenever a new change for `index` are publisched
     * on OverlayChanges channel
     */
    subscribeToSpecificOverlayChanges(index, fn) {
        this.subscribers.push((evt) => {
            if (evt.changedIndex === index) {
                fn(evt);
            }
        });
    }
    /** Publish a change on OverlayChanges channel  */
    publishToOverlayChanges(change) {
        this.subscribers.forEach((fn) => fn(change));
    }
}
export { PubSub, };
export default PubSub;
